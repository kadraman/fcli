# Used to 'productize' some descriptions defined in FortifyCLIMessages.properties
product=ScanCentral SAST

fcli.ssc.q-param = Server-side queries are automatically generated from the -q / --query option \
  if possible; generated queries can be viewed in the debug log. The --q-param option can be used \
  to override the automatically generated query, for example to further optimize the request. See \
  SSC REST API documentation for information on supported formats.

# Make sure none of the commands inherit usage header or description of the top-level fcli command
# Note that we define these as usage.* whereas our parent bundle defines fcli.usage.* (with fcli prefix).
# For some reason, overriding fcli.usage.* doesn't work.
usage.header = 
usage.description = 

# fcli sc-sast
fcli.sc-sast.usage.header = Interact with Fortify ScanCentral SAST (SC-SAST).
fcli.sc-sast.usage.description.0 = The commands in this module allow for interacting with \
  Fortify ScanCentral SAST (SC-SAST). This includes functionality like submitting and \
  managing SAST scan requests and results.  
fcli.sc-sast.usage.description.1 = %nAll commands in this module require require an SSC session \
  that has been configured for interacting with ScanCentral SAST. Such an SSC session can be \
  created through the 'fcli ssc session login' command. As a best practice, the \
  'fcli ssc session logout' command should be run to terminate the session when there are no \
  more activities to be performed.  

# Common descriptions
delim = Change the default delimiter character when using options that accept \
  "application:version" as an argument or parameter. 
fcli.ssc.appversion.resolver.nameOrId = Application version id or <application>:<version> name.
  
# fcli sc-sast scan
fcli.sc-sast.scan.usage.header = Manage ScanCentral SAST scans.
fcli.sc-sast.scan.cancel.usage.header = Cancel a previously submitted scan request.
fcli.sc-sast.scan.download.usage.header = Download scan job artifacts.
fcli.sc-sast.scan.download.usage.description = This command allows for downloading scan job \
  artifacts like FPR file, log files, and the job file that was used to submit the scan request.
fcli.sc-sast.scan.download.file = Output file for the requested file type. Default value is based \
  on the job token and requested file type, for example '<job token>.fpr' or '<job token>-job.zip'.
fcli.sc-sast.scan.download.type = File type to download. Allowed values: ${COMPLETION-CANDIDATES}. \
  Default value: ${DEFAULT-VALUE} 
fcli.sc-sast.scan.download.confirm = Confirm overwriting existing output file.
fcli.sc-sast.scan.download.confirmPrompt = Do you want overwrite existing output file %s?
fcli.sc-sast.scan.list.usage.header = List scan jobs.
fcli.sc-sast.scan.start.usage.header = Start a SAST scan.
fcli.sc-sast.scan.start.file = File containing the payload to be scanned. This must be either an MBS \
  file generated through 'sourceanalyzer -export-build-session', or a package file generated through \
  'scancentral package'.
fcli.sc-sast.scan.start.sensor-version = Version of the sensor on which the payload should be scanned. \
  This option is not supported for MBS files, not recommended for package files generated by \
  ScanCentral Client versions 24.2 and above, but required for package files generated by older \
  ScanCentral Client versions, ideally matching the ScanCentral Client version that was used to \
  generate the package file. If needed, this option can be used to override the sensor version \
  that would be selected by default by ScanCentral SAST, but this is not officially supported \
  and may cause unexpected results. 
fcli.sc-sast.scan.start.ssc-ci-token = SSC CI Token used to publish the scan to SSC on scan completion. \
  By default, the current session token will be used.
fcli.sc-sast.scan.start.notify = Email address to which to send a scan completion notification.
fcli.sc-sast.scan.start.publish-to = Publish scan results to the given SSC application version once the scan has completed.
fcli.sc-sast.scan.start.publish-as = FPR file name to use when publishing the scan results to SSC.
fcli.sc-sast.scan.start.no-replace = If ScanCentral SAST is configured to replace existing scan jobs if jobs are \
  already running for the given application version, this option may be used to override this behavior and keep \
  the existing scan jobs. 
fcli.sc-sast.scan.start.scan-timeout = Specify scan time-out (in minutes) for this scan job. This overrides the default \
  scan time-out configured on ScanCentral SAST.
fcli.sc-sast.scan.start.debug = Enable collection of debug (diagnosis) logs for this scan job. 
fcli.sc-sast.scan.start.sargs = Fortify Static Code Analyzer scan arguments, see ScanCentral SAST documentation for supported \
  scan arguments for your ScanCentral SAST version. Multiple scan arguments must be provided as a single option argument, \
  arguments containing spaces or that conflict with fcli options like '-filter' must be embedded in single quotes, and local \
  files must be referenced through the '@' prefix. Note that contrary to fcli, scan arguments usually start with a single dash, \
  not double dashes. For example: \
  %n  --sargs "'-quick' '-filter' '@my filters.txt'"
fcli.sc-sast.scan.status.usage.header = Get status for a previously submitted scan request.
fcli.sc-sast.scan.wait-for.usage.header = Wait for one or more scans to reach or exit specified scan statuses.
fcli.sc-sast.scan.wait-for.usage.description.0 = Although this command offers a lot of options to cover many \
  different use cases, you can simply pass a scan id (possibly stored using --store on the 'scan start' \
  command) to wait until either the scan has been fully processed on SSC (if --publish-to was specified on the \
  'scan start' command and ScanCentral Controller version > 22.1), until the scan has been published to SSC \
  (if --publish-to was specified on the 'scan start' command and ScanCentral Controller version <= 22.1), or \
  until the scan was completed (if --publish-to was not specified on the 'scan start' command).
fcli.sc-sast.scan.wait-for.usage.description.1 = %nThe following scan/publish states are currently known by fcli:
fcli.sc-sast.scan.wait-for.usage.description.2 = ${fcli.sc-sast.scan.jobStates:-See fcli help output}
fcli.sc-sast.scan.wait-for.usage.description.3 = %nThe following SSC artifact processing states are currently known by fcli:
fcli.sc-sast.scan.wait-for.usage.description.4 = ${fcli.sc-sast.scan.jobArtifactStates:-See fcli help output}
fcli.sc-sast.scan.wait-for.until=Wait until either any or all scans match. If neither --until or --while are specified, default is to wait until all scans match.
fcli.sc-sast.scan.wait-for.while=Wait while either any or all scans match.
fcli.sc-sast.scan.wait-for.any-scan-state=One or more scan states against which to match the given scans.
fcli.sc-sast.scan.wait-for.any-publish-state=One or more scan publishing states against which to match the given scans.
fcli.sc-sast.scan.wait-for.any-ssc-state=One or more SSC artifact processing states against which to match the given scans.
fcli.sc-sast.scan-job.resolver.jobToken = Scan job token.

# fcli sc-sast sensor
fcli.sc-sast.sensor.usage.header = Manage ScanCentral SAST sensors.
fcli.sc-sast.sensor.list.usage.header = List ScanCentral SAST sensors.
fcli.sc-sast.sensor.list.usage.description = This command lists sensor information for all \
  available SanCentral SAST sensors. It calls the SSC API and as such requires an active SSC session.
  
# fcli sc-sast sensor-pool
fcli.sc-sast.sensor-pool.usage.header = Manage ScanCentral SAST sensor pools.
fcli.sc-sast.sensor-pool.resolver.nameOrUuid = Sensor pool Uuid or Name.
fcli.sc-sast.sensor-pool.list.usage.header = List ScanCentral SAST sensor pools.
  
# fcli sc-sast rest
fcli.sc-sast.rest.usage.header = Interact with ScanCentral SAST Controller REST API endpoints.
fcli.sc-sast.rest.usage.description = These commands allow for direct interaction with ScanCentral SAST \
  Controller REST API endpoints, somewhat similar to using 'curl' but benefiting from standard fcli \
  functionality like session management (no need to manually specify Authorization header), rich output \
  formatting options, and query functionality.
fcli.sc-sast.rest.call.usage.header = Call an individual ScanCentral SAST Controller REST API endpoint. 
fcli.sc-sast.rest.call.no-paging = This option currently has no effect for ScanCentral SAST.
fcli.sc-sast.rest.call.no-transform = This option currently has no effect for ScanCentral SAST.
fcli.sc-sast.rest.call.transform = This option allows for performing custom transformations on the response \
  data based on a Spring Expression Language (SpEL) expression. For example, this allows for retrieving \
  data from sub-properties, or using project selection/projection. Note that the expression operates on \
  the raw response, as if --no-transform was specified before evaluating the expression.
  
#################################################################################################################
# The following section lists human-readable header names used by table and tree output formats;
# values may be internationalized. These messages may be prefixed with full or partial command
# prefix. Closest match wins if there are multiple definitions for the same column name, allowing
# subcommands to override header names defined on parent commands
#################################################################################################################
fcli.sc-sast.scan.output.table.header.sscArtifactState = SSC processing state
fcli.sc-sast.scan.list.output.table.header.jobState = State
fcli.sc-sast.scan.list.output.table.header.applicationVersion = App Version
fcli.sc-sast.scan.list.output.table.header.jobFinishedTimeString = Completion time
# TODO Property name must match exactly with output.table.args, including '?' in this case
#      Any way to improve this?
fcli.sc-sast.output.table.header.cloudPool?.name = Pool name
fcli.sc-sast.sensor.output.table.header.workerStartTime = Sensor start time

#################################################################################################################
# The following are technical properties that shouldn't be internationalized ####################################
#################################################################################################################

# Property default values that are usually set when running fcli, but which may not be available when 
# generating AsciiDoc man-pages.
fcli.env.default.prefix=FCLI_DEFAULT

# Table output columns configuration
fcli.sc-sast.session.output.table.args = name,type,url,created,expires,expired
fcli.sc-sast.scan.output.table.args = jobToken,hasFiles,scanState,publishState,sscArtifactState,endpointVersion
fcli.sc-sast.scan.download.output.table.args = jobToken,file,type
fcli.sc-sast.scan.list.output.table.args = jobToken,jobState,applicationVersion,cloudPool?.name,jobFinishedTimeString
fcli.sc-sast.sensor.output.table.args = hostName,state,cloudPool?.name,ipAddress,scaVersion,lastSeen,workerStartTime
fcli.sc-sast.sensor-pool.output.table.args = uuid,name,description