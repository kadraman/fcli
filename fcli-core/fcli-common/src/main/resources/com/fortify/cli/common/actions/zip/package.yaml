# yaml-language-server: $schema=https://fortify.github.io/fcli/schemas/action/fcli-action-schema-dev-2.x.json

author: Fortify
usage:
  header: Package source code
  description: |
    This action can be used to package source code using ScanCentral Client. It will 
    take care of installing the specified ScanCentral Client version, followed by
    executing the 'scancentral package' command using the specified ScanCentral 
    Client version.

config:
  output: immediate
  run.fcli.status.log.default: true    # By default, we log all exit statuses
  
cli.options:
  scClientVersion:
    names: --sc-client-version, -v
    description: |
      Specify the ScanCentral Client version to be used for packaging. Defaults to
      the value of the SC_CLIENT_VERSION environment variable, or 'latest' if not
      specified.
    required: true
    default: ${#env('SC_CLIENT_VERSION')?:'latest'}
  sourceDir:
    names: --source-dir, -d
    description: |
      Specify the source directory to be packaged. Defaults to the value of the 
      SOURCE_DIR environment variable, or current working directory if not specified.
    default: ${#env('SOURCE_DIR')?:'.'}
    required: true
  debug:
    names: --debug
    description: |
      Add the -debug flag to the ScanCentral Client command. Defaults to the value of
      the DO_PACKAGE_DEBUG environment variable, or false if not specified. 
    required: false
    type: boolean
    default: ${#env('DO_PACKAGE_DEBUG')?:false}
  toolDefinitions:
    names: --tool-definitions
    description: |
      Custom tool definitions to use for identifying available ScanCentral Client versions
      and download URLs. Defaults to the value of the TOOL_DEFINITIONS environment variable,
      or the built-in default if not specified.
    required: false 
  extraOpts:
    names: --extra-opts
    description: |
      Extra options to be passed to the 'scancentral package' command. Defaults to the
      options specified in the EXTRA_PACKAGE_OPTS environment variable, or no extra 
      options if not specified. 
    required: false
    default: ${#extraOpts('PACKAGE')}
  output:
    names: --output, -o
    description: |
      Name of the zip file in which packaged source code should be stored. Defaults to
      package.zip in the current working directory.
    required: true
    default: package.zip
  usePackage:
    names: --use-package
    description: |
      Use an existing package file instead of trying to package the given source code 
      directory. If specified, this ignores all other options.
    required: false
    default: ${#env('USE_PACKAGE')}
      
steps:
  - var.set:
      global.package.output: ${#resolveAgainstCurrentWorkDir(#isNotBlank(cli.usePackage)?cli.usePackage:cli.output)}
  - if: ${#isBlank(cli.usePackage)}
    run.fcli:
      UPDATE_TOOL_DEFINITIONS: fcli tool definitions update ${cli.toolDefinitions?:""}
      INSTALL_SC_CLIENT: fcli tool sc-client install -v ${cli.scClientVersion} --with-jre
      RUN_SC_CLIENT: fcli tool sc-client run -v ${cli.scClientVersion} --workdir ${cli.sourceDir} -- ${cli.debug?"-debug":""} package -o "${global.package.output}" ${cli.extraOpts}
      