/**
 * Copyright 2023 Open Text.
 *
 * The only warranties for products and services of Open Text 
 * and its affiliates and licensors ("Open Text") are as may 
 * be set forth in the express warranty statements accompanying 
 * such products and services. Nothing herein should be construed 
 * as constituting an additional warranty. Open Text shall not be 
 * liable for technical or editorial errors or omissions contained 
 * herein. The information contained herein is subject to change 
 * without notice.
 */
package com.fortify.cli.common.action.runner;

import java.io.PrintStream;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.ObjectNode;
import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
import com.fortify.cli.common.action.model.ActionStepCheck.CheckStatus;
import com.fortify.cli.common.json.JsonHelper;
import com.fortify.cli.common.progress.helper.IProgressWriterI18n;
import com.fortify.cli.common.spring.expression.IConfigurableSpelEvaluator;

import lombok.Builder;
import lombok.Getter;
import lombok.Setter;

/**
 * This class holds action execution context
 * @author Ruud Senden
 */
@Getter @Builder
public class ActionRunnerContext {
    /** Jackson {@link ObjectMapper} used for various JSON-related operations */
    private final ObjectMapper objectMapper = JsonHelper.getObjectMapper();
    /** Jackson {@link ObjectMapper} used for formatting steps in logging/exception messages */
    private final ObjectMapper yamlObjectMapper = new ObjectMapper(new YAMLFactory());
    /** Action runner configuration, provided through builder method */
    private final ActionRunnerConfig config;
    /** Progress writer, provided through builder method */
    private final IProgressWriterI18n progressWriter;
    /** SpEL evaluator, configured through builder method */
    private final IConfigurableSpelEvaluator spelEvaluator;
    /** ObjectNode holding parameter values as generated by ActionParameterProcessor */
    private final ObjectNode parameterValues;
    /** Check statuses */
    private final Map<String, CheckStatus> checkStatuses = new LinkedHashMap<>(); 
    
    // We need to delay writing output to console as to not interfere with progress writer
    private final List<Runnable> delayedConsoleWriterRunnables = new ArrayList<>();
    /** Save original stdout for delayed output operations */
    private final PrintStream stdout = System.out;
    /** Save original stderr for delayed output operations */
    private final PrintStream stderr = System.err;
    @Setter @Builder.Default private int exitCode = 0;
    @Setter @Builder.Default boolean exitRequested = false;
}
