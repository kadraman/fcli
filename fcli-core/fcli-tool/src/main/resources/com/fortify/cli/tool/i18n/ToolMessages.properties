# Make sure none of the commands inherit usage header or description of the top-level fcli command
# Note that we define these as usage.* whereas our parent bundle defines fcli.usage.* (with fcli prefix).
# For some reason, overriding fcli.usage.* doesn't work.
usage.header = 
usage.description =

# Shared resources
fcli.tool.install.platform = By default, fcli will try to install tool binaries that match the current operating system \
  & architecture. Use this option to override automatic platform detection. The list-platforms command lists available \
  platforms.
fcli.tool.install.version = Tool version to install; see output of list command to view available versions. \
  Default value: ${DEFAULT-VALUE} 
fcli.tool.install.install-dir = Tool installation directory. As described above, it is recommended to use \
  --base-dir instead.
fcli.tool.install.base-dir = Base directory under which the tool will be installed.
fcli.tool.install.on-digest-mismatch = Action to take if there is a digest mismatch. Allowed values: \
  ${COMPLETION-CANDIDATES}. Default action is to fail. 
fcli.tool.install.uninstall = Uninstall the given versions while installing the new version. Accepts \
  'all' to uninstall all existing versions, or a comma-separated list of version numbers. Version numbers may be \
  specified as <major>[.<minor>[.<patch>]].
fcli.tool.install.global-bin = By default, wrapper scripts will be installed to <base-dir>/bin; use --no-global-bin \
  to skip installing/updating these wrapper scripts.
fcli.tool.uninstall.versions = One or more tool version to uninstall. Accepts \
  'all' to uninstall all existing versions, or a comma-separated list of version numbers. Version numbers may be \
  specified as <major>[.<minor>[.<patch>]].
fcli.tool.list-platforms.version = Tool version for which to list available platforms.
fcli.tool.install.confirmPrompt = Actions to be performed: %s\nConfirm?
fcli.tool.definitions.update.definitions-source = URL or file to get the tool definitions from. If not specified, \
  default tool definitions provided by OpenText are downloaded from a predefined URL.
fcli.tool.definitions.update.max-definitions-age = Only update tool definitions if the current definitions are older \
  than the specified maximum age, for example 0s (0 seconds, force update), 4h (4 hours) or 1d (1 day), to avoid \
  downloading the definitions multiple times in a short period of time. Default value: ${DEFAULT-VALUE} 
fcli.tool.run.version = Tool version to run. The specified tool version must have been previously installed using \
  the 'install' command. Default value: the tool version that was last installed.
fcli.tool.run.workdir = The working directory from where the tool should be invoked. Default value: current \
  working directory.
fcli.tool.run.tool-args = The arguments to be passed to the tool. 
fcli.tool.run.java.use-shell = Whether to use a shell to run the wrapper script provided by this tool, or to use \
  a direct Java invocation. Using a shell provides the same behavior as manually invoking the wrapper script from \
  the command line, but may cause issues if no (compatible) shell is available on the system or in a Docker container. \
  Using a direct Java invocation may cause slightly different tool behavior, but will also work if no compatible shell \
  is available and allows for consistent lookup of the appropriate JRE to use, independent of how the wrapper script \
  performs such a JRE lookup. Allowed values: ${COMPLETION-CANDIDATES}. Default value: ${DEFAULT-VALUE}, which will \
  first try to run the wrapper script, and fall back to direct Java invocation if shell invocation fails.

fcli.tool.uninstall.confirmPrompt = Actions to be performed: %s\nConfirm?

fcli.tool.install.generic-description = This command allows for tool installation and upgrade. By default, tools are \
  installed to <base-dir>/<tool-name>/<version>. The base directory can be specified using the --base-dir option, \
  defaulting to <user.home>/fortify/tools if not specified. Unless the --no-global-bin option is specified, wrapper \
  scripts for invoking each tool will be installed to <base-dir>/bin, allowing users to add this single directory to \
  the system PATH for easy invocation of all installed tools. \
  \n\nIt is also possibly to specify an explicit installation directory through the --install-dir option, for example \
  to install the tool to a specific location that will be cached by a CI/CD system. The --install-dir option doesn't \
  create the <base-dir>/<tool-name>/<version> directory structure, and doesn't install wrapper scripts to a shared \
  bin-directory. \
  \n\nWhen installing a new version, older versions can optionally be automatically un-installed using the --uninstall \
  option, which is basically the equivalent of a tool upgrade. When trying to install a version that's already been installed, \
  only some post-installation tasks will be re-run, like installing the global bin scripts and performing any tool \
  configuration if applicable. \
  \n\nSample invocations: \
  \n\nInstall latest tool version, keep older versions: \
  \n  fcli tool <name> install -v latest \
  \n\nInstall latest tool version (only re-running post-install if already existing), uninstall all other tool versions: \
  \n  fcli tool <name> install -v latest --uninstall all \
  \n\nInstall latest v2 version, uninstall all other v2 versions: \
  \n  fcli tool <name> install -v 2 --uninstall 2 \
  \n\nInstall latest and latest v1, have global bin-scripts point to latest: \
  \n  fcli tool <name> install -v latest \
  \n  fcli tool <name> install -v 1 --no-global-bin \
  \n\nEach tool installation includes shell scripts or executables that can be run as usual, however tools installed \
  through the 'fcli tool <tool-name> install' command can also be run through the 'fcli tool <tool-name> run' command. \
  This command allows for selecting which version of a tool to run if multiple versions have been installed, and \
  allows for easy tool invocation even if they haven't been added to the PATH.
  
fcli.tool.uninstall.generic-global-bin-description = Note that global bin scripts, if installed, will not be updated \
  or removed by this command. If you un-install the version to which the global bin-script is currently pointing, \
  the global bin script will cease functioning. To update the global bin script to point to an existing version, \
  please use the install command.

# fcli tool
fcli.tool.usage.header = Install and manage other Fortify tools and utilities.
fcli.tool.usage.description = The commands in this module allow for installing other Fortify tools like FoD Uploader, ScanCentral Client and FortifyVulnerabilityExporter, and managing those installations.

#fcli tool definitions
fcli.tool.definitions.generic-description = Tool definitions list the available versions, corresponding download \
  location, and other details for each tool. These tool definitions are used by the various 'fcli tool' commands \
  to identify what tool versions are currently available and where to download them from. By default, each fcli \
  release ships with the latest tool definitions that were available at the time that release was built.  
fcli.tool.definitions.usage.header = Manage tool definitions.
fcli.tool.definitions.usage.description.0 = ${fcli.tool.definitions.generic-description}\n
fcli.tool.definitions.usage.description.1 = The commands in this module allow for managing tool definitions, like \
  updating tool definitions from a URL or local file. 
fcli.tool.definitions.list.usage.header = List tool definitions.
fcli.tool.definitions.update.usage.header = Update tool definitions.
fcli.tool.definitions.update.usage.description.0 = ${fcli.tool.definitions.generic-description}\n
fcli.tool.definitions.update.usage.description.1 = The update command allows for updating the tool definitions from \
  a URL or local file. This allows for the current fcli installation to be aware of new tool versions that were \
  released after the current fcli release was built, and also allows users to use a custom tool definitions bundle.\n
fcli.tool.definitions.update.usage.description.2 = For example, if it's not allowed to download tool \
  installation bundles from public sites like github.com or tools.fortify.com, companies can host tool installation \
  bundles internally and provide a tool definitions bundle that points to the internally hosted installation bundles. \
  At the same time, companies can restrict which versions of each tool users are allowed to install.
fcli.tool.definitions.reset.usage.header = Reset tool definitions.
fcli.tool.definitions.reset.usage.description = This command removes any tool definition updates, reverting to \
  the tool definitions originally shipped with this fcli release. 

# fcli tool bugtracker-utility
fcli.tool.bugtracker-utility.usage.header = Manage FortifyBugTrackerUtility installations.
fcli.tool.bugtracker-utility.usage.description = For more information about FortifyBugTrackerUtility, please see the source code repository at https://github.com/fortify-ps/FortifyBugTrackerUtility.
fcli.tool.bugtracker-utility.install.usage.header = Download and install FortifyBugTrackerUtility.
fcli.tool.bugtracker-utility.install.usage.description = ${fcli.tool.install.generic-description}
fcli.tool.bugtracker-utility.install.confirm = Automatically confirm all prompts (cleaning the target directory, uninstalling other versions).
fcli.tool.bugtracker-utility.list.usage.header = List available and installed FortifyBugTrackerUtility versions.
fcli.tool.bugtracker-utility.list.usage.description = Use the 'fcli tool definitions update' command to update the list of available versions.
fcli.tool.bugtracker-utility.list-platforms.usage.header = List available platforms for FortifyBugTrackerUtility
fcli.tool.bugtracker-utility.run.usage.header = Run FortifyBugTrackerUtility
fcli.tool.bugtracker-utility.run.usage.description = This command allows for running FortifyBugTrackerUtility as previously \
  installed through the 'fcli tool bugtracker-utility install' command. It is recommended to use double dashes to separate \
  fcli options from FortifyBugTrackerUtility options, i.e., 'fcli tool bugtracker-utility run <fcli options> -- \
  <FortifyBugTrackerUtility options>' to explicitly differentiate between fcli options and FortifyBugTrackerUtility options.
fcli.tool.bugtracker-utility.uninstall.usage.header = Uninstall FortifyBugTrackerUtility.
fcli.tool.bugtracker-utility.uninstall.usage.description = This command removes one or more FortifyBugTrackerUtility installations that were previously installed using the 'fcli tool bugtracker-utility install' command. ${fcli.tool.uninstall.generic-global-bin-description} 
fcli.tool.bugtracker-utility.uninstall.confirm = Confirm removal of FortifyBugTrackerUtility.

# fcli tool debricked
fcli.tool.debricked-cli.usage.header = Manage Debricked CLI installations.
fcli.tool.debricked-cli.usage.description = For more information about Debricked CLI, please see the source code repository at https://github.com/debricked/cli.
fcli.tool.debricked-cli.install.usage.header = Download and install the Debricked CLI.
fcli.tool.debricked-cli.install.usage.description = ${fcli.tool.install.generic-description}
fcli.tool.debricked-cli.install.confirm = Automatically confirm all prompts (cleaning the target directory, uninstalling other versions).
fcli.tool.debricked-cli.list.usage.header = List available and installed Debricked CLI versions.
fcli.tool.debricked-cli.list.usage.description = Use the 'fcli tool definitions update' command to update the list of available versions.
fcli.tool.debricked-cli.list-platforms.usage.header = List available platforms for Debricked CLI
fcli.tool.debricked-cli.run.usage.header = Run Debricked CLI
fcli.tool.debricked-cli.run.usage.description = This command allows for running Debricked CLI as previously \
  installed through the 'fcli tool debricked-cli install' command. It is recommended to use double dashes to separate \
  fcli options from Debricked CLI options, i.e., 'fcli tool debricked-cli run <fcli options> -- \
  <Debricked options>' to explicitly differentiate between fcli options and Debricked CLI options.
fcli.tool.debricked-cli.uninstall.usage.header = Uninstall Debricked CLI.
fcli.tool.debricked-cli.uninstall.usage.description = This command removes one or more Debricked CLI installations that were previously installed using the 'fcli tool debricked install' command. ${fcli.tool.uninstall.generic-global-bin-description}
fcli.tool.debricked-cli.uninstall.confirm = Confirm removal of Debricked CLI.

# fcli tool fcli
fcli.tool.fcli.usage.header = Manage fcli installations.
fcli.tool.fcli.usage.description = For more information about Fortify CLI, please see the source code repository at https://github.com/fortify/fcli. User documentation is available at https://fortify.github.io/fcli/.
fcli.tool.fcli.install.usage.header = Download and install fcli.
fcli.tool.fcli.install.usage.description = ${fcli.tool.install.generic-description}
fcli.tool.fcli.install.confirm = Automatically confirm all prompts (cleaning the target directory, uninstalling other versions).
fcli.tool.fcli.list.usage.header = List available and installed fcli versions.
fcli.tool.fcli.list.usage.description = Use the 'fcli tool definitions update' command to update the list of available versions.
fcli.tool.fcli.list-platforms.usage.header = List available platforms for fcli.
fcli.tool.fcli.run.usage.header = Run fcli
fcli.tool.fcli.run.usage.description = This command allows for running fcli as previously \
  installed through the 'fcli tool fcli install' command. It is recommended to use double dashes to separate \
  fcli options from the options to be passed to the fcli version being invoked, i.e., 'fcli tool fcli run <fcli options> -- \
  <target fcli version options>' to explicitly differentiate between those.
fcli.tool.fcli.uninstall.usage.header = Uninstall fcli.
fcli.tool.fcli.uninstall.usage.description = This command removes one or more fcli installations that were previously installed using the 'fcli tool fcli install' command. ${fcli.tool.uninstall.generic-global-bin-description}
fcli.tool.fcli.uninstall.confirm = Confirm removal of fcli.

# fcli tool fod-uploader
fcli.tool.fod-uploader.usage.header = Manage FoD Uploader installations.
fcli.tool.fod-uploader.usage.description = For more information about FoDUploader, please see the source code repository at https://github.com/fod-dev/fod-uploader-java.
fcli.tool.fod-uploader.install.usage.header = Download and install Fortify on Demand Uploader.
fcli.tool.fod-uploader.install.usage.description = ${fcli.tool.install.generic-description}
fcli.tool.fod-uploader.install.confirm = Automatically confirm all prompts (cleaning the target directory, uninstalling other versions).
fcli.tool.fod-uploader.list.usage.header = List available and installed FoD Uploader versions.
fcli.tool.fod-uploader.list.usage.description = Use the 'fcli tool definitions update' command to update the list of available versions.
fcli.tool.fod-uploader.list-platforms.usage.header = List available platforms for FoD Uploader.
fcli.tool.fod-uploader.run.usage.header = Run FoD Uploader
fcli.tool.fod-uploader.run.usage.description = This command allows for running FoD Uploader as previously \
  installed through the 'fcli tool fod-uploader install' command. It is recommended to use double dashes to separate \
  fcli options from FoD Uploader options, i.e., 'fcli tool fod-uploader run <fcli options> -- \
  <FoD Uploader options>' to explicitly differentiate between fcli options and FoD Uploader options.
fcli.tool.fod-uploader.uninstall.usage.header = Uninstall Fortify on Demand Uploader.
fcli.tool.fod-uploader.uninstall.usage.description = This command removes one or more Fortify on Demand Uploader installations that were previously installed using the 'fcli tool fod-uploader install' command. ${fcli.tool.uninstall.generic-global-bin-description} 
fcli.tool.fod-uploader.uninstall.confirm = Confirm removal of Fortify on Demand Uploader.

# fcli tool sc-client
fcli.tool.sc-client.usage.header = Manage ScanCentral SAST Client installations.
fcli.tool.sc-client.install.usage.header = Download and install ScanCentral SAST Client.
fcli.tool.sc-client.install.usage.description = ${fcli.tool.install.generic-description}
fcli.tool.sc-client.install.confirm = Automatically confirm all prompts (cleaning the target directory, uninstalling other versions).
fcli.tool.sc-client.install.client-auth-token = ScanCentral SAST client_auth_token used for authenticating with ScanCentral SAST Controller.
fcli.tool.sc-client.install.with-jre = (PREVIEW) Install compatible JRE into the ScanCentral Client JRE directory, allowing ScanCentral Client to run even if no (compatible) JRE is installed elsewhere on the system.
fcli.tool.sc-client.install.jre-platform = (PREVIEW) Specify the platform for which to install the JRE, implies --with-jre. See \
  https://github.com/fortify/tool-definitions/blob/main/v1/jre.yaml for available platforms. Default value: current platform.
fcli.tool.sc-client.list.usage.header = List available and installed ScanCentral SAST Client versions.
fcli.tool.sc-client.list.usage.description = Use the 'fcli tool definitions update' command to update the list of available versions.
fcli.tool.sc-client.list-platforms.usage.header = List available platforms for ScanCentral SAST Client.
fcli.tool.sc-client.run.usage.header = Run ScanCentral Client.
fcli.tool.sc-client.run.usage.description = This command allows for running ScanCentral Client as previously \
  installed through the 'fcli tool sc-client install' command. It is recommended to use double dashes to separate \
  fcli options from ScanCentral Client options, i.e., 'fcli tool sc-client run <fcli options> -- <ScanCentral Client options>' \
  to explicitly differentiate between fcli options and ScanCentral Client options.
fcli.tool.sc-client.uninstall.usage.header = Uninstall ScanCentral SAST Client.
fcli.tool.sc-client.uninstall.usage.description = This command removes one or more ScanCentral Client installations that were previously installed using the 'fcli tool sc-client install' command. ${fcli.tool.uninstall.generic-global-bin-description}
fcli.tool.sc-client.uninstall.confirm = Confirm removal of ScanCentral SAST Client.

# fcli tool vuln-exporter
fcli.tool.vuln-exporter.usage.header = Manage Fortify Vulnerability Exporter installations.
fcli.tool.vuln-exporter.usage.description = For more information about Fortify Vulnerability Exporter, please see the source code repository at https://github.com/fortify/FortifyVulnerabilityExporter.
fcli.tool.vuln-exporter.install.usage.header = Download and install Fortify Vulnerability Exporter.
fcli.tool.vuln-exporter.install.usage.description = ${fcli.tool.install.generic-description}
fcli.tool.vuln-exporter.install.confirm = Automatically confirm all prompts (cleaning the target directory, uninstalling other versions).
fcli.tool.vuln-exporter.list.usage.header = List available and installed Fortify Vulnerability Exporter versions.
fcli.tool.vuln-exporter.list.usage.description = Use the 'fcli tool definitions update' command to update the list of available versions.
fcli.tool.vuln-exporter.list-platforms.usage.header = List available platforms for Fortify Vulnerability Exporter.
fcli.tool.vuln-exporter.run.usage.header = Run Fortify Vulnerability Exporter.
fcli.tool.vuln-exporter.run.usage.description = This command allows for running Fortify Vulnerability Exporter as previously \
  installed through the 'fcli tool vuln-exporter install' command. It is recommended to use double dashes to separate \
  fcli options from Fortify Vulnerability Exporter options, i.e., 'fcli tool vuln-exporter run <fcli options> -- <Fortify Vulnerability Exporter options>' \
  to explicitly differentiate between fcli options and Fortify Vulnerability Exporter options.
fcli.tool.vuln-exporter.uninstall.usage.header = Uninstall Fortify Vulnerability Exporter.
fcli.tool.vuln-exporter.uninstall.usage.header = Uninstall Fortify Vulnerability Exporter.
fcli.tool.vuln-exporter.uninstall.usage.description = This command removes one or more Fortify Vulnerability Exporter installations that were previously installed using the 'fcli tool vuln-exporter install' command. ${fcli.tool.uninstall.generic-global-bin-description}
fcli.tool.vuln-exporter.uninstall.confirm = Confirm removal of Fortify Vulnerability Exporter.

#################################################################################################################
# The following are technical properties that shouldn't be internationalized ####################################
#################################################################################################################
fcli.tool.output.table.args = name,version,aliasesString,stable,installDir
fcli.tool.list-platforms.output.table.args = platform
fcli.tool.definitions.output.table.args = name,source,lastUpdate
