# yaml-language-server: $schema=https://fortify.github.io/fcli/schemas/action/fcli-action-schema-dev-2.x.json

author: Fortify
usage:
  header: Generate a BitBucket Code Insights report listing SSC SAST vulnerabilities. 
  description: |
    For information on how to import this report into BitBucket, see 
    https://support.atlassian.com/bitbucket-cloud/docs/code-insights/
    
config:
  rest.target.default: ssc
  
cli.options:
  report-file:
    names: --report-file, -r
    description: "Optional report output file name (or 'stdout' / 'stderr'). Default value: bb-fortify-report.json"
    required: false
    default: bb-fortify-report.json
  annotations-file:
    names: --annotations-file, -a
    description: "Optional annotations output file name (or 'stdout' / 'stderr'). Default value: bb-fortify-annotations.json"
    required: false
    default: bb-fortify-annotations.json
  appversion:
    names: --appversion, --av
    description: "Required application version id or <appName>:<versionName>"
  filterset:
    names: --filterset, --fs
    description: "Filter set name or guid from which to load issue data. Default value: Default filter set for given application version"
    required: false
  page-size:
    names: --page-size
    description: "Number of vulnerabilities to retrieve at a time. Higher numbers may reduce time required to build the report, at the cost of increased memory usage (on both fcli and SSC), and could potentially negatively affect overall SSC performance or result in read time-outs (see --socket-timeout option on fcli ssc session login command). Default value: 100"
    required: false
    default: "100"
  
steps:
  - var.set:
      av: ${#ssc.appVersion(cli.appversion)}
      fs: ${#ssc.filterSet(av, cli.filterset)}
  - log.progress: Loading latest static scan
  - rest.call:
      artifacts:
        uri:  /api/v1/projectVersions/${av.id}/artifacts
        type: paged
        query:
          embed: scans
        records.for-each:
          record.var-name: artifact
          breakIf: ${lastStaticScan!=null}
          do:
            - var.set:
                lastStaticScan: ${artifact._embed.scans?.^[type=='SCA']}
  - log.progress: Loading issue counts
  - rest.call:
      fpo_counts_sca:
        uri:  /api/v1/projectVersions/${av.id}/issueGroups
        query:
          filter: ISSUE[11111111-1111-1111-1111-111111111151]:SCA
          groupingtype: 11111111-1111-1111-1111-111111111150
          filterset: ${fs.guid}
  - rest.call: # TODO Can we merge this with rest.call above?
      fpo_counts_total:
        uri:  /api/v1/projectVersions/${av.id}/issueGroups
        query:
          groupingtype: 11111111-1111-1111-1111-111111111150
          filterset: ${fs.guid}      
  - log.progress: Processing issue data
  - with:
      writers:
        annotations:
          to: ${cli['annotations-file']}
          type: json
      do:
        - rest.call:
            issues:
              uri: /api/v1/projectVersions/${av.id}/issues
              query:
                filter: ISSUE[11111111-1111-1111-1111-111111111151]:SCA
                filterset: ${fs.guid}
                limit: ${cli['page-size']}
              log.progress:
                page.post-process: Processed ${totalIssueCount?:0} of ${issues_raw.count} issues
              records.for-each:
                record.var-name: issue
                embed:
                  details:
                    uri: /api/v1/issueDetails/${issue.id}
                do: 
                  - writer.append:
                      annotations: {fmt: annotation}
  - var.set:
      report: {fmt: report}
  - out.write:
      ${cli['report-file']}: ${report}
  - if: ${cli['annotations-file']!='stdout' && cli['report-file']!='stdout'}
    log.info: |
        Report written to ${cli['report-file']}
        Annotations written to ${cli['annotations-file']}

formatters:
  report:
      # uuid:
      title: Fortify Scan Report
      details: Fortify detected ${annotations.count} static ${annotations.count==1 ? 'vulnerability':'vulnerabilities'}
      #external_id:
      reporter: Fortify Static Code Analyzer ${lastStaticScan?.engineVersion?:''}
      link: ${#ssc.appversionBrowserUrl(av,fs)}
      # remote_link_enabled:
      logo_url: https://bitbucket.org/workspaces/fortifysoftware/avatar
      report_type: SECURITY
      result: 'PASSED'
      data:
        - type: TEXT
          title: Application Version
          value: ${av.project.name} - ${av.name}
        - type: DATE
          title: Last Static Scan
          value: ${#formatDateTime("yyyy-MM-dd'T'HH:mm:ss.SSSSSS'Z'", lastStaticScan?.uploadDate?:'1970-01-01T00:00:00')}
        - type: NUMBER
          title: Critical (SAST)
          value: ${fpo_counts_sca.^[id=='Critical']?.visibleCount?:0}
        - type: NUMBER
          title: Critical (Overall)
          value: ${fpo_counts_total.^[id=='Critical']?.visibleCount?:0}
        - type: NUMBER
          title: High (SAST)
          value: ${fpo_counts_sca.^[id=='High']?.visibleCount?:0}
        - type: NUMBER
          title: High (Overall)
          value: ${fpo_counts_total.^[id=='High']?.visibleCount?:0}
        - type: NUMBER
          title: Medium (SAST)
          value: ${fpo_counts_sca.^[id=='Medium']?.visibleCount?:0}
        - type: NUMBER
          title: Medium (Overall)
          value: ${fpo_counts_total.^[id=='Medium']?.visibleCount?:0}
        - type: NUMBER
          title: Low (SAST)
          value: ${fpo_counts_sca.^[id=='Low']?.visibleCount?:0}
        - type: NUMBER
          title: Low (Overall)
          value: ${fpo_counts_total.^[id=='Low']?.visibleCount?:0}

  annotation:
      external_id: FTFY-${issue.id}
      # uuid:
      annotation_type: VULNERABILITY
      path: ${issue.fullFileName}
      line: ${issue.lineNumber==0?1:issue.lineNumber}
      summary: ${issue.issueName}
      details: ${issue.details?.brief}
      # result: PASSED|FAILED|SKIPPED|IGNORED
      severity: ${issue.friority.toUpperCase()} 
      link: ${#ssc.issueBrowserUrl(issue,fs)}
      # created_on:
      # updated_on:
