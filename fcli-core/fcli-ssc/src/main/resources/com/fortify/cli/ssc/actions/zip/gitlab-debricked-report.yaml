# yaml-language-server: $schema=https://fortify.github.io/fcli/schemas/action/fcli-action-schema-dev-2.x.json

author: Fortify
usage:
  header: Generate a GitLab Dependency Scanning report listing SSC Debricked vulnerabilities. 
  description: |
    For information on how to import this report into GitLab, see 
    https://docs.gitlab.com/ee/ci/yaml/artifacts_reports.html#artifactsreportsdependency_scanning
  
config:
  rest.target.default: ssc
  
cli.options:
  file:
    names: --file, -f
    description: "Optional output file name (or 'stdout' / 'stderr'). Default value: gl-fortify-debricked-depscan.json"
    required: false
    default: gl-fortify-debricked-depscan.json
  appversion:
    names: --appversion, --av
    description: "Required application version id or <appName>:<versionName>"
  filterset:
    names: --filterset, --fs
    description: "Filter set name or guid from which to load issue data. Default value: Default filter set for given application version"
    required: false
  page-size:
    names: --page-size
    description: "Number of vulnerabilities to retrieve at a time. Higher numbers may reduce time required to build the report, at the cost of increased memory usage (on both fcli and SSC), and could potentially negatively affect overall SSC performance or result in read time-outs (see --socket-timeout option on fcli ssc session login command). Default value: 100"
    required: false
    default: "100"
  
steps:
  - var.set:
      av: ${#ssc.appVersion(cli.appversion)}
      fs: ${#ssc.filterSet(av, cli.filterset)}
  - log.progress: Loading latest Debricked scan
  - rest.call:
      artifacts:
        uri:  /api/v1/projectVersions/${av.id}/artifacts
        type: paged
        query:
          embed: scans
        records.for-each:
          record.var-name: artifact
          breakIf: ${lastDebrickedScan!=null}
          do:
            - var.set:
                lastDebrickedScan: ${artifact._embed.scans?.^[type=='DEBRICKED']}
  - log.progress: Processing issue data
  - rest.call:
      issues:
        uri: /api/v1/projectVersions/${av.id}/issues
        query:
          filter: ISSUE[11111111-1111-1111-1111-111111111151]:DEBRICKED
          filterset: ${fs.guid}
          limit: ${cli['page-size']}
        log.progress:
          page.post-process: Processed ${totalIssueCount?:0} of ${issues_raw.count} issues
        records.for-each:
          record.var-name: issue
          embed:
            details:
              uri: /api/v1/issueDetails/${issue.id}
          do:
            - var.set:
                vulnerabilities..: {fmt: vulnerabilities}
  - out.write:
      ${cli.file}: {fmt: gitlab-debricked-report}
  - if: ${!{'stdout','stderr'}.contains(cli.file)}
    log.info: Output written to ${cli.file}

formatters:
  gitlab-debricked-report:
      schema: https://gitlab.com/gitlab-org/security-products/security-report-schemas/-/raw/v15.0.0/dist/dependency-scanning-report-format.json
      version: 15.0.0
      scan:
        start_time: ${#formatDateTime("yyyy-MM-dd'T'HH:mm:ss", lastDebrickedScan?.uploadDate?:'1970-01-01T00:00:00')}
        end_time: ${#formatDateTime("yyyy-MM-dd'T'HH:mm:ss", lastDebrickedScan?.uploadDate?:'1970-01-01T00:00:00')}
        status: success
        type: dependency_scanning
        analyzer:
          id: fortify-debricked
          name: Fortify/Debricked
          url: https://www.microfocus.com/en-us/products/application-security-testing/overview
          version: Debricked Fortify Parser Plugin ${lastDebrickedScan?.engineVersion?:'version unknown'}
          vendor:
            name: Fortify+Debricked
        scanner:
          id: fortify-debricked
          name: Fortify/Debricked
          url: https://www.microfocus.com/en-us/products/application-security-testing/overview
          version: Debricked Fortify Parser Plugin ${lastDebrickedScan?.engineVersion?:'version unknown'}
          vendor: 
            name: Fortify+Debricked
      dependency_files: ${{}}
      vulnerabilities: ${vulnerabilities?:{}} 

  vulnerabilities:
      id: ${issue.issueInstanceId}
      category: dependency_scanning
      name: ${issue.issueName}
      message: ${issue.issueName}
      description: ${#abbreviate(#htmlToText(issue.details?.brief), 15000)}
      cve: ${issue.details?.customAttributes?.externalId}
      severity: ${issue.friority}
      confidence: ${(issue.friority matches "(Critical|Medium)") ? "High":"Low" }
      scanner:
        id: fortify-debricked
        name: Fortify/Debricked
      identifiers:
        - name:  "Instance id: ${issue.issueInstanceId}"
          type:  issueInstanceId
          value: ${issue.issueInstanceId}
          url:   ${#ssc.issueBrowserUrl(issue,fs)}
      links:
        - name: Additional issue details, including analysis trace, in Software Security Center
          url:  ${#ssc.issueBrowserUrl(issue,fs)}
        - name: CWE URL
          url:  ${issue.details?.customAttributes?.externalUrl}
      location:
        file:           ${issue.fullFileName}
        dependency:
          package:
            name: ${issue.details?.customAttributes?.componentName > '' ? issue.details?.customAttributes?.componentName :'Not Set'}
          version:      ${issue.details?.customAttributes?.componentVersion > '' ? issue.details?.customAttributes?.componentVersion :'Not Set'}    