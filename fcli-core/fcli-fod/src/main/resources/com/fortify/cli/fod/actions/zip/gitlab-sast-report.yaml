# yaml-language-server: $schema=https://fortify.github.io/fcli/schemas/action/fcli-action-schema-dev-2.x.json

author: Fortify
usage:
  header: Generate a GitLab SAST report listing FoD SAST vulnerabilities. 
  description: |
    For information on how to import this report into GitLab, see 
    https://docs.gitlab.com/ee/ci/yaml/artifacts_reports.html#artifactsreportssast

config:
  rest.target.default: fod
  
cli.options:
  file:
    names: --file, -f
    description: "Optional output file name (or 'stdout' / 'stderr'). Default value: gl-fortify-sast.json"
    required: false
    default: gl-fortify-sast.json
  release:
    names: --release, --rel
    description: "Required release id or <appName>:[<microserviceName>:]<releaseName>"
  
steps:
  - var.set:
      rel: ${#fod.release(cli.release)}
  - log.progress: Loading static scan summary
  - rest.call:
      staticScanSummary:
        uri:  /api/v3/scans/${rel.currentStaticScanId}/summary
        if:   ${rel.currentStaticScanId!=null}
        on.fail: 
          - log.warn: Unable to load static scan summary, some scan metadata may be missing from the report
  - log.progress: Processing issue data
  - rest.call:
      issues:
        uri: /api/v3/releases/${rel.releaseId}/vulnerabilities?limit=50
        query:
          filters: scantype:Static
        log.progress:
          page.post-process: Processed ${totalIssueCount?:0} of ${issues_raw.totalCount} issues
        records.for-each:
          record.var-name: issue
          embed:
            details:
              uri: /api/v3/releases/${rel.releaseId}/vulnerabilities/${issue.vulnId}/details
            recommendations:
              uri: /api/v3/releases/${rel.releaseId}/vulnerabilities/${issue.vulnId}/recommendations
          do:
            - var.set:
                vulnerabilities..: {fmt: vulnerabilities}
  - out.write:
      ${cli.file}: {fmt: gitlab-sast-report}
  - if: ${!{'stdout','stderr'}.contains(cli.file)}
    log.info: Output written to ${cli.file}

formatters:
  gitlab-sast-report:
      schema: https://gitlab.com/gitlab-org/security-products/security-report-schemas/-/raw/v15.0.0/dist/sast-report-format.json
      version: 15.0.0
      scan:
        start_time: ${#formatDateTime("yyyy-MM-dd'T'HH:mm:ss", staticScanSummary?.startedDateTime?:'1970-01-01T00:00:00')}
        end_time: ${#formatDateTime("yyyy-MM-dd'T'HH:mm:ss", staticScanSummary?.completedDateTime?:'1970-01-01T00:00:00')}
        status: ${rel.staticAnalysisStatusTypeId==2?'success':'failure'}
        type: sast
        analyzer:
          id: FoD-SAST
          name: Fortify on Demand
          url: https://www.microfocus.com/en-us/products/application-security-testing/overview
          version: SCA ${staticScanSummary?.staticScanSummaryDetails?.engineVersion?:'version unknown'}; Rulepack ${staticScanSummary?.staticScanSummaryDetails?.rulePackVersion?:'version unknown'}
          vendor:
            name: Fortify
        scanner:
          id: FoD-SAST
          name: Fortify on Demand
          url: https://www.microfocus.com/en-us/products/application-security-testing/overview
          version: SCA ${staticScanSummary?.staticScanSummaryDetails?.engineVersion?:'version unknown'}; Rulepack ${staticScanSummary?.staticScanSummaryDetails?.rulePackVersion?:'version unknown'}
          vendor: 
            name: Fortify
      vulnerabilities: ${vulnerabilities?:{}} 
     
  vulnerabilities:
      category: sast
      confidence: ${(issue.severityString matches "(Critical|Medium)") ? "High":"Low" }
      description: ${#abbreviate(#htmlToText(issue.details?.summary?:""), 15000)}
      id: ${issue.vulnId}
      cve: 'N/A'
      identifiers: |-
        ${{
            {
              name:  "Instance id: "+issue.instanceId,
              url:   #fod.issueBrowserUrl(issue),
              type:  "issueInstanceId",
              value: issue.instanceId
            }
        }}
      location:
        file:       ${issue.primaryLocationFull}
        start_line: ${issue.lineNumber}
      links:
        - name: Additional issue details, including analysis trace, in Fortify on Demand
          url:  ${#fod.issueBrowserUrl(issue)}
      message: ${issue.category}
      name: ${issue.category}
      scanner:
        id: FoD-SAST
        name: Fortify on Demand
      severity: ${issue.severityString}
      solution: ${#abbreviate(#htmlToText(issue.details?.explanation)+'\n\n'+#htmlToText(issue.recommendations?.recommendations), 7000)}
