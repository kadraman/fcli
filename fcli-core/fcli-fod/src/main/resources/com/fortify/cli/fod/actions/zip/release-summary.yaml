# yaml-language-server: $schema=https://fortify.github.io/fcli/schemas/action/fcli-action-schema-dev-2.x.json

author: Fortify
usage:
  header: (PREVIEW) Generate release summary. 
  description: |
    This action generates a short summary listing issue counts and other statistics
    for a given release. Based on user feedback on this initial version of this action, 
    parameters and output of this action may change in the next couple of fcli releases.

config:
  rest.target.default: fod

cli.options:
  file:
    names: --file, -f
    description: "Optional output file name (or 'stdout' / 'stderr'). Default value: stdout"
    required: false
    default: stdout
  release:
    names: --release, --rel
    description: "Required release id or <appName>:[<microserviceName>:]<releaseName>"
  
steps:
  - var.set:
      r: ${#fod.release(cli.release)}
      dateFmt: YYYY-MM-dd HH:mm
  # Update Note: although open source counts are now available on the release object, the date of last open source scan is not so still need below 
  - log.progress: Loading Scans
  - rest.call:
      scans:
        # we can't filter on scan type so we have to trawl through scans to find "latest" open source scan :(
        uri: /api/v3/releases/${r.releaseId}/scans?limit=50
        query:
          orderBy: completedDateTime
          orderByDirection: DESC
        type: paged
        records.for-each:
          record.var-name: scan
          breakIf: ${ossScanDate!=null}
          if: ${scan.scanType=='OpenSource'}
          do:
            - var.set:
                scanType: ${scan.scanType}
                ossScanDate: ${scan.completedDateTime} 

  - out.write:
      ${cli.file}: {fmt: summary-md}
  - if: ${!{'stdout','stderr'}.contains(cli.file)}
    log.info: Output written to ${cli.file}

# Note: update ossScanDate when it is available on release object ...
formatters:
  summary-md: |
      # Fortify on Demand Release Summary
      
      ## [${r.applicationName}${#isNotBlank(r.microserviceNae)?'- '+r.microserviceName:''} - ${r.releaseName}](${#fod.releaseBrowserUrl(r)})
      
      Summary generated on: ${#formatDateTime(dateFmt)}
      
      ### Security Policy
      **Rating:** ${#repeat("&bigstar;", r.rating)}${#repeat("&star;", 5-r.rating)}
      **Status:** ${r.isPassed?'Pass':'Fail'}
      
      ### Issue Counts
      | Type            | Last Scan Date   | Critical | High     | Medium   | Low      |
      | --------------- | ---------------- | -------- | -------- | -------- | -------- |
      | **Static**      | ${(#isBlank(r.staticScanDate)?#fmt('%-16s', 'N/A'):#formatDateTime(dateFmt, r.staticScanDate))  +' | '+#fmt('%8s', r.staticCritical)                                   +' | '+#fmt('%8s', r.staticHigh)                           +' | '+#fmt('%8s', r.staticMedium)                               +' | '+#fmt('%8s', r.staticLow)                         +' |'}
      | **Dynamic**     | ${(#isBlank(r.dynamicScanDate)?#fmt('%-16s', 'N/A'):#formatDateTime(dateFmt, r.dynamicScanDate))+' | '+#fmt('%8s', r.dynamicCritical)                                  +' | '+#fmt('%8s', r.dynamicHigh)                          +' | '+#fmt('%8s', r.dynamicMedium)                              +' | '+#fmt('%8s', r.dynamicLow)                        +' |'}
      | **Mobile**      | ${(#isBlank(r.mobileScanDate)?#fmt('%-16s', 'N/A'):#formatDateTime(dateFmt, r.mobileScanDate))  +' | '+#fmt('%8s', r.mobileCritical)                                   +' | '+#fmt('%8s', r.mobileHigh)                           +' | '+#fmt('%8s', r.mobileMedium)                               +' | '+#fmt('%8s', r.mobileLow)                         +' |'}
      | **Open Source** | ${(#isBlank(ossScanDate)?#fmt('%-16s', 'N/A'):#formatDateTime(dateFmt, ossScanDate))  +' | '+#fmt('%8s', r.openSourceCritical)                                   +' | '+#fmt('%8s', r.openSourceHigh)                           +' | '+#fmt('%8s', r.openSourceMedium)                               +' | '+#fmt('%8s', r.openSourceLow)                         +' |'}
      | **Total**       |                  | ${#fmt('%8s', r.staticCritical+r.dynamicCritical+r.mobileCritical+r.openSourceCritical)+' | '+#fmt('%8s', r.staticHigh+r.dynamicHigh+r.mobileHigh+r.openSourceHigh)+' | '+#fmt('%8s', r.staticMedium+r.dynamicMedium+r.mobileMedium+r.openSourceMedium)+' | '+#fmt('%8s', r.staticLow+r.dynamicLow+r.mobileLow+r.openSourceLow)+' |'}
      
      