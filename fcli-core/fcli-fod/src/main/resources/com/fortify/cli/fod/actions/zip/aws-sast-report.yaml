# yaml-language-server: $schema=https://fortify.github.io/fcli/schemas/action/fcli-action-schema-dev-2.x.json

author: Fortify
usage:
  header: Generate a AWS Security Hub SAST report listing FoD SAST vulnerabilities. 
  description: |
    This action generate a ASFF report to integrate AWS Security Hub, generated reports 
    then parsed by the lambda function, see: https://github.com/fortify/CloudDevSecOpsTemplates/
    For information on how to create or update findings into AWS Security Hub, see 
    https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-findings-update-types.html

config:
  rest.target.default: fod

cli.options:
  file:
    names: --file, -f
    description: "Optional report output file name (or 'stdout' / 'stderr'). Default value: aws-fortify-report.json"
    required: false
    default: aws-fortify-report.json
  release:
    names: --release, --rel
    description: "Required release id or <appName>:[<microserviceName>:]<releaseName>"
  aws-region:
    names: --aws-region
    description: 'Required AWS region. Default value: AWS_REGION environment variable.'
    required: true
    default: ${#env('AWS_REGION')}    
  aws-account:
    names: --aws-account
    description: 'Required AWS account id. Default value: AWS_ACCOUNT_ID environment variable.'
    required: true
    default: ${#env('AWS_ACCOUNT_ID')}

steps:
  - var.set:
      rel: ${#fod.release(cli.release)}
  - log.progress: Loading static scan summary
  - rest.call:
      staticScanSummary:
        uri:  /api/v3/scans/${rel.currentStaticScanId}/summary
        if:   ${rel.currentStaticScanId!=null}
  - log.progress: Processing issue data
  - rest.call:
      issues:
        uri: /api/v3/releases/${rel.releaseId}/vulnerabilities?limit=50
        query:
          filters: scantype:Static
        log.progress:
          page.post-process: Processed ${totalIssueCount?:0} of ${issues_raw.totalCount} issues
        records.for-each:
          record.var-name: issue
          embed:
            details:
                uri: /api/v3/releases/${rel.releaseId}/vulnerabilities/${issue.vulnId}/details
            recommendations:
                uri: /api/v3/releases/${rel.releaseId}/vulnerabilities/${issue.vulnId}/recommendations
          do:
            - var.set:
                vulnerabilities..: {fmt: issues}
  - out.write:
      ${cli['file']}: {fmt: report}
  - if: ${!{'stdout','stderr'}.contains(cli.file)}
    log.info: Report written to ${cli['report-file']}

formatters:
  report:
      issues: ${vulnerabilities?:{}} 
     
  issues:
      SchemaVersion: 2018-10-08
      Id: ${rel.releaseId}-${issue.id}
      ProductArn: "arn:aws:securityhub:${cli['aws-region']}:${cli['aws-account']}:product/${cli['aws-account']}/default"
      GeneratorId: "arn:aws:securityhub:${cli['aws-region']}:${cli['aws-account']}:product/${cli['aws-account']}/default"
      ProductName: 'Fortify SAST'
      CompanyName: OpenText
      Types: 
        - Software and Configuration Checks/Vulnerabilities/CVE
      CreatedAt: ${#formatDateTimewithZoneIdAsUTC("yyyy-MM-dd'T'HH:mm:ss'Z'",rel.staticScanDate?:'1970-01-01T00:00:00Z',rel.serverZoneId)}
      UpdatedAt: ${#formatDateTimewithZoneIdAsUTC("yyyy-MM-dd'T'HH:mm:ss'Z'",rel.staticScanSummary?.completedDateTime?:'1970-01-01T00:00:00Z',rel.serverZoneId)}
      Severity: 
        Label: ${(issue.severityString matches "(Critical|High|Medium|Low)") ? issue.severityString.toUpperCase():"LOW"}
        Original: ${issue.severityString}
      Title: ${issue.category}
      Description: ${#abbreviate(#htmlToText(issue.details?.summary), 510)}
      Remediation:
        Recommendation:
          Text: ${#abbreviate(#htmlToText(issue.recommendations?.recommendations), 510)}
          Url: ${#fod.issueBrowserUrl(issue)}
      ProductFields:
        Product Name: 'Fortify SAST'
        'aws/securityhub/CompanyName': OpenText
        'aws/securityhub/ProductName': 'Fortify SAST'
      Resources:
        - Type: Application
          Id: ${rel.releaseId}-${issue.id}
          Partition: aws
          Region: ${cli['aws-region']}
          Details:
            Other:
                APPLICATION ID: ${rel.applicationId+''}
                APPLICATION NAME: ${rel.applicationName}
                RELEASE ID: ${rel.releaseId+''}
                RELEASE NAME: ${rel.releaseName}
                PRIMARY LOCATION: ${issue.primaryLocationFull}
                LINE NUMBER: ${issue.lineNumber+''}
                INSTANCE ID: ${issue.instanceId}
      RecordState: ACTIVE