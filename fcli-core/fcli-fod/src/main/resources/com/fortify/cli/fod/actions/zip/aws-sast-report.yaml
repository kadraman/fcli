# yaml-language-server: $schema=https://fortify.github.io/fcli/schemas/action/fcli-action-schema-dev-2.x.json

author: Fortify
usage:
  header: Generate a AWS Security Hub SAST report listing FoD SAST vulnerabilities. 
  description: |
    This action generate a ASFF report to integrate AWS Security Hub, generated reports 
    then parsed by the lambda function, see: https://github.com/fortify/CloudDevSecOpsTemplates/
    For information on how to create or update findings into AWS Security Hub, see 
    https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-findings-update-types.html

config:
  rest.target.default: fod

parameters:
  - name: file
    cliAliases: f
    description: "Optional report output file name (or 'stdout' / 'stderr'). Default value: aws-fortify-report.json"
    required: false
    defaultValue: aws-fortify-report.json
  - name: release
    cliAliases: rel
    description: "Required release id or <appName>:[<microserviceName>:]<releaseName>"
  - name: aws-region
    description: 'Required AWS region. Default value: AWS_REGION environment variable.'
    required: true
    defaultValue: ${#env('AWS_REGION')}    
  - name: aws-account
    description: 'Required AWS account id. Default value: AWS_ACCOUNT_ID environment variable.'
    required: true
    defaultValue: ${#env('AWS_ACCOUNT_ID')}

steps:
  - var.set:
      rel: ${#fod.release(parameters.release)}
  - log.progress: Loading static scan summary
  - rest.call:
      - name: staticScanSummary
        uri:  /api/v3/scans/${rel.currentStaticScanId}/summary
        if:   ${rel.currentStaticScanId!=null}
  - log.progress: Processing issue data
  - rest.call:
    - name: issues
      uri: /api/v3/releases/${rel.releaseId}/vulnerabilities?limit=50
      query:
        filters: scantype:Static
      pagingProgress:
        postPageProcess: Processed ${totalIssueCount?:0} of ${issues_raw.totalCount} issues
      forEach:
        name: issue
        embed:
          - name: details
            uri: /api/v3/releases/${rel.releaseId}/vulnerabilities/${issue.vulnId}/details
          - name: recommendations
            uri: /api/v3/releases/${rel.releaseId}/vulnerabilities/${issue.vulnId}/recommendations
        do:
          - var.set:
              vulnerabilities..: ${#action.fmt('issues',#root)}
  - file.write:
    - to: ${parameters['file']}
      fmt: report
    - if: ${parameters.file!='stdout'}
      to: stdout
      value: |
        Report written to ${parameters['report-file']}

formatters:
  - name: report
    contents:
      issues: ${vulnerabilities?:{}} 
     
  - name: issues
    contents:
      SchemaVersion: 2018-10-08
      Id: ${rel.releaseId}-${issue.id}
      ProductArn: "arn:aws:securityhub:${parameters['aws-region']}:${parameters['aws-account']}:product/${parameters['aws-account']}/default"
      GeneratorId: "arn:aws:securityhub:${parameters['aws-region']}:${parameters['aws-account']}:product/${parameters['aws-account']}/default"
      ProductName: 'Fortify SAST'
      CompanyName: OpenText
      Types: 
        - Software and Configuration Checks/Vulnerabilities/CVE
      CreatedAt: ${#formatDateTimewithZoneIdAsUTC("yyyy-MM-dd'T'HH:mm:ss'Z'",rel.staticScanDate?:'1970-01-01T00:00:00Z',rel.serverZoneId)}
      UpdatedAt: ${#formatDateTimewithZoneIdAsUTC("yyyy-MM-dd'T'HH:mm:ss'Z'",rel.staticScanSummary?.completedDateTime?:'1970-01-01T00:00:00Z',rel.serverZoneId)}
      Severity: 
        Label: ${(issue.severityString matches "(Critical|High|Medium|Low)") ? issue.severityString.toUpperCase():"LOW"}
        Original: ${issue.severityString}
      Title: ${issue.category}
      Description: ${#abbreviate(#htmlToText(issue.details?.summary), 510)}
      Remediation:
        Recommendation:
          Text: ${#abbreviate(#htmlToText(issue.recommendations?.recommendations), 510)}
          Url: ${#fod.issueBrowserUrl(issue)}
      ProductFields:
        Product Name: 'Fortify SAST'
        'aws/securityhub/CompanyName': OpenText
        'aws/securityhub/ProductName': 'Fortify SAST'
      Resources:
        - Type: Application
          Id: ${rel.releaseId}-${issue.id}
          Partition: aws
          Region: ${parameters['aws-region']}
          Details:
            Other:
                APPLICATION ID: ${rel.applicationId+''}
                APPLICATION NAME: ${rel.applicationName}
                RELEASE ID: ${rel.releaseId+''}
                RELEASE NAME: ${rel.releaseName}
                PRIMARY LOCATION: ${issue.primaryLocationFull}
                LINE NUMBER: ${issue.lineNumber+''}
                INSTANCE ID: ${issue.instanceId}
      RecordState: ACTIVE