"Asset ID","Mac Address",FQDN,NETBIOS,"IP Address",Hostname,"Vulnerability ID","Vulnerability Summary",Severity,Port,Protocol,Proof,State
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3243/?engineType=WEBINSPECT&issue=66f83523-6f24-46d8-8489-7cddaf07f5fc&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"66f83523-6f24-46d8-8489-7cddaf07f5fc","

<i></i>
High session timeout values may allow older session identifiers to be reused by attackers. This vulnerability was scored because a timeout value greater than  minutes was detected. OWASP suggests 5 minutes for high-value applications, and 20 minutes for low-risk applications. While these are just suggestions, the exact session timeout depends on the usage and sensitivity of the application.

",High,,,/riches/,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3277/?engineType=WEBINSPECT&issue=8099b980-19c0-450b-8451-233fd894f23f&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"8099b980-19c0-450b-8451-233fd894f23f","

A privacy policy was not supplied by the web application within the scope of this audit. Many legislative initiatives require that organizations place a publicly accessible document within their web application that defines their website’s privacy policy.  As a general rule, these privacy policies must detail what information an organization collects, the purpose for collecting it, potential avenues of disclosure, and methods for addressing potential grievances.

Various laws governing privacy policies include the Gramm-Leach-Bliley Act, Health Insurance Portability and Accountability Act (HIPAA), the California Online Privacy Protection Act of 2003, European Union's Data Protection Directive and others.

",Low,,,/riches/,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3317/?engineType=WEBINSPECT&issue=aaa32421-4e17-43b1-9d85-f447285caf18&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"aaa32421-4e17-43b1-9d85-f447285caf18","

The web application does not utilize HTTP only cookies. This is a new security feature introduced by Microsoft in IE 6 SP1 to mitigate the possibility of a successful Cross-Site scripting attack by not allowing cookies with the HTTP only attribute to be accessed via client-side scripts. Recommendations include adopting a development policy that includes the utilization of HTTP only cookies, and performing other actions such as ensuring proper filtration of user-supplied data, utilizing client-side validation of user supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Low,,,/riches/,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3244/?engineType=WEBINSPECT&issue=67602869-cdcb-4100-91e0-9811140c7784&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"67602869-cdcb-4100-91e0-9811140c7784","

<i></i>
High session timeout values may allow older session identifiers to be reused by attackers. This vulnerability was scored because a timeout value greater than  minutes was detected. OWASP suggests 5 minutes for high-value applications, and 20 minutes for low-risk applications. While these are just suggestions, the exact session timeout depends on the usage and sensitivity of the application.

",High,,,"/riches/login/Login.action/",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3366/?engineType=WEBINSPECT&issue=d281e729-4146-4c24-adfb-b2b5241802a3&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"d281e729-4146-4c24-adfb-b2b5241802a3","

<i></i>
High session timeout values may allow older session identifiers to be reused by attackers. This vulnerability was scored because a timeout value greater than  minutes was detected. OWASP suggests 5 minutes for high-value applications, and 20 minutes for low-risk applications. While these are just suggestions, the exact session timeout depends on the usage and sensitivity of the application.

",High,,,"/riches/login/j_security_check/",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3308/?engineType=WEBINSPECT&issue=a4173076-bf2a-4aec-9cbb-c842b44f552e&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"a4173076-bf2a-4aec-9cbb-c842b44f552e","

A critical vulnerability has been detected within your web application due to the presence of one or more Credit Card Numbers. If this information is carried over to a production server, it can cause major security problems. Recommendations include not storing this information on your web application.

",Critical,,,/riches/rest/accounts/,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3159/?engineType=WEBINSPECT&issue=181bd8f9-b83e-4f2f-a27d-123ee55d345c&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"181bd8f9-b83e-4f2f-a27d-123ee55d345c","

<i></i>
High session timeout values may allow older session identifiers to be reused by attackers. This vulnerability was scored because a timeout value greater than  minutes was detected. OWASP suggests 5 minutes for high-value applications, and 20 minutes for low-risk applications. While these are just suggestions, the exact session timeout depends on the usage and sensitivity of the application.

",High,,,"/riches/${\""PRbjxbxaxdaeegchhffedbfhgiaeRP\""}",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3193/?engineType=WEBINSPECT&issue=39797b56-58a5-466c-aa02-0909adeec340&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"39797b56-58a5-466c-aa02-0909adeec340","

<i></i>
High session timeout values may allow older session identifiers to be reused by attackers. This vulnerability was scored because a timeout value greater than  minutes was detected. OWASP suggests 5 minutes for high-value applications, and 20 minutes for low-risk applications. While these are just suggestions, the exact session timeout depends on the usage and sensitivity of the application.

",High,,,"/riches/${\""PRbjxbxaxebbdfigefeigfjiheieRP\""}",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3199/?engineType=WEBINSPECT&issue=3fcb6ee6-c3ff-4267-89b0-c2ac8337d3f7&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"3fcb6ee6-c3ff-4267-89b0-c2ac8337d3f7","

<i></i>
High session timeout values may allow older session identifiers to be reused by attackers. This vulnerability was scored because a timeout value greater than  minutes was detected. OWASP suggests 5 minutes for high-value applications, and 20 minutes for low-risk applications. While these are just suggestions, the exact session timeout depends on the usage and sensitivity of the application.

",High,,,"/riches/auth/AccountSummary.action/${\""PRbjxdxaxdhcdiheeehgcfjafidRP\""}",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3179/?engineType=WEBINSPECT&issue=2e50acd9-d4eb-4388-a7cc-99b60ab919ec&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"2e50acd9-d4eb-4388-a7cc-99b60ab919ec","

<i></i>
High session timeout values may allow older session identifiers to be reused by attackers. This vulnerability was scored because a timeout value greater than  minutes was detected. OWASP suggests 5 minutes for high-value applications, and 20 minutes for low-risk applications. While these are just suggestions, the exact session timeout depends on the usage and sensitivity of the application.

",High,,,"/riches/login/Login.action/${\""PRbjxdxaxibcehhegbhbbcdjicacRP\""}",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3325/?engineType=WEBINSPECT&issue=b0f87ae5-d566-48fb-8a77-fc548e610ef7&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"b0f87ae5-d566-48fb-8a77-fc548e610ef7","

<i></i>
High session timeout values may allow older session identifiers to be reused by attackers. This vulnerability was scored because a timeout value greater than  minutes was detected. OWASP suggests 5 minutes for high-value applications, and 20 minutes for low-risk applications. While these are just suggestions, the exact session timeout depends on the usage and sensitivity of the application.

",High,,,"/riches/login/j_security_check/${\""PRbjxdxaxcfdiibebidjcjjcabbeRP\""}",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3389/?engineType=WEBINSPECT&issue=f1c1abb5-1fef-4122-ba79-9cb760d11317&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"f1c1abb5-1fef-4122-ba79-9cb760d11317","

<i></i>
High session timeout values may allow older session identifiers to be reused by attackers. This vulnerability was scored because a timeout value greater than  minutes was detected. OWASP suggests 5 minutes for high-value applications, and 20 minutes for low-risk applications. While these are just suggestions, the exact session timeout depends on the usage and sensitivity of the application.

",High,,,"/riches/login/#request['struts.valueStack'].context['com.opensymphony.xwork2.dispatcher.HttpServletResponse']).(",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3176/?engineType=WEBINSPECT&issue=2cf1b373-428e-4067-99c7-25caa2e90464&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"2cf1b373-428e-4067-99c7-25caa2e90464","

<i></i>
High session timeout values may allow older session identifiers to be reused by attackers. This vulnerability was scored because a timeout value greater than  minutes was detected. OWASP suggests 5 minutes for high-value applications, and 20 minutes for low-risk applications. While these are just suggestions, the exact session timeout depends on the usage and sensitivity of the application.

",High,,,/riches/..,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3222/?engineType=WEBINSPECT&issue=5977f462-dc6f-4639-9937-50f7cdb367b8&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"5977f462-dc6f-4639-9937-50f7cdb367b8","

<i></i>
High session timeout values may allow older session identifiers to be reused by attackers. This vulnerability was scored because a timeout value greater than  minutes was detected. OWASP suggests 5 minutes for high-value applications, and 20 minutes for low-risk applications. While these are just suggestions, the exact session timeout depends on the usage and sensitivity of the application.

",High,,,/riches/auth/..,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3134/?engineType=WEBINSPECT&issue=02a874d7-1b7a-45ca-8762-ab0dd9eb36f4&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"02a874d7-1b7a-45ca-8762-ab0dd9eb36f4","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,/riches/login/..,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3189/?engineType=WEBINSPECT&issue=36f209fc-6498-46fc-98d9-b70bd47573a4&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"36f209fc-6498-46fc-98d9-b70bd47573a4","

An unencrypted login form has been discovered. Any area of a web application that possibly contains sensitive information or access to privileged functionality such as remote site administration functionality should utilize SSL or another form of encryption to prevent login information from being sniffed or otherwise intercepted or stolen. If the login form is being served over SSL, the page that the form is being submitted to MUST be accessed over SSL.  Every link/URL present on that page (not just the form action) needs to be served over HTTPS. This will prevent Man-in-the-Middle attacks on the login form. Recommendations include ensuring that sensitive areas of your web application have proper encryption protocols in place to prevent login information and other data that could be helpful to an attacker from being intercepted.

",High,,,/riches/login/..,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3221/?engineType=WEBINSPECT&issue=5947c5c7-0fe3-4a05-ac10-de5c66d6a626&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"5947c5c7-0fe3-4a05-ac10-de5c66d6a626","

A Flash movie or Flash object was found. Flash movies and objects can be decompiled and may contain sensitive information. An attacker could decompile the Flash file and gain access to the confidential information, including any hard-coded passwords and keys, within the Flash file.

",Low,,,/riches/login/..,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3264/?engineType=WEBINSPECT&issue=7516fbf3-dbec-4972-8dca-3480f4c083e2&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"7516fbf3-dbec-4972-8dca-3480f4c083e2","

A Flash movie or Flash object was found and did not require the latest version of the Flash Player. The Flash Player itself has had many vulnerabilities reported against it. Allowing your website users to use an old and unsupported Flash Player introduces unnecessary risk. Generally web developers will allow the minimum required version run the flash object, but this exposes the website user to an exploitable situation. Requiring the latest Flash Player version will ensure your users are protected from known flaws in the player itself; these past vulnerabilities include Cross-Site Scripting, and Remote Code Execution (on the client machine). Recommendations include requiring the latest version of the Flash Player be utilized.

",Low,,,/riches/login/..,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3323/?engineType=WEBINSPECT&issue=aebe8948-5357-4262-a69a-e65017c5c53f&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"aebe8948-5357-4262-a69a-e65017c5c53f","

WebInspect detected the use of an ActiveX object. This could indicate a vulnerability is present if a vulnerable public version of the Microsoft Active Template was utilized. There are three vulnerabilities in the public versions of the Microsoft Active Template Library (ATL) included with Visual Studio. Applications and components created with these versions of ATL are vulnerable to remote code execution and information disclosure attacks.  Visual Studio itself is not vulnerable to these issues. In these three vulnerabilities, ATL processes data incorrectly which can lead to memory corruption, information disclosure, and instantiation of objects without regard to security policy. After Visual Studio is patched, it will no longer create applications and components with these vulnerabilities. However, applications and components compiled using the vulnerable version of ATL need to be rebuilt with the safe version released by Microsoft. Recommendations include applying any relevant service pack or patch as listed in the Fix section, then recompiling and redistrubiting any software created prior to the update. If you have already applied the proper fix, then this vulnerability can safely be ignored.

",Low,,,/riches/login/..,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3342/?engineType=WEBINSPECT&issue=be1be190-d573-458a-abe0-13bf43ee32f9&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"be1be190-d573-458a-abe0-13bf43ee32f9","

<i></i>
High session timeout values may allow older session identifiers to be reused by attackers. This vulnerability was scored because a timeout value greater than  minutes was detected. OWASP suggests 5 minutes for high-value applications, and 20 minutes for low-risk applications. While these are just suggestions, the exact session timeout depends on the usage and sensitivity of the application.

",High,,,/riches/login/..,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3372/?engineType=WEBINSPECT&issue=da9d38c6-da95-4f8d-a06e-6b217e9d9cc8&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"da9d38c6-da95-4f8d-a06e-6b217e9d9cc8","

Most recent browsers have features that will save form field content entered by users and then automatically complete form entry the next time the fields are encountered. This feature is enabled by default and could leak sensitive information since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to ""off"" on all your forms.

",Low,,,/riches/login/..,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3391/?engineType=WEBINSPECT&issue=f365eb7c-1ea7-4480-b5f4-44591ce534ce&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"f365eb7c-1ea7-4480-b5f4-44591ce534ce","

Any area of a web application that possibly contains sensitive information or access to privileged functionality such as remote site administration functionality should utilize SSL or another form of encryption to prevent login information from being sniffed or otherwise intercepted or stolen.   ~FullURL~ has failed this policy. Recommendations include ensuring that sensitive areas of your web application have proper encryption protocols in place to prevent login information and other data that could be helpful to an attacker from being intercepted.

",High,,,/riches/login/..,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3400/?engineType=WEBINSPECT&issue=f8ac8a13-5207-4b61-ac62-c43c85da791d&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"f8ac8a13-5207-4b61-ac62-c43c85da791d","

Most recent browsers have features that will save password field content entered by users and then automatically complete password entry the next time the field are encountered. This feature is enabled by default and could leak password since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to ""off"" on all your password fields.

Please Note: Recent versions of most browsers, as noted below, now ignore the autocomplete=""off"" attribute for password fields in html forms.  Users are allowed to decide the password policy at their own discretion using the password manager.  Although setting is ineffective on these versions of browsers, it would continue to protect website users of earlier versions of these and other browsers that support this attribute. 

Browsers NOT Supporting autocomplete=""off"": 

<ol><li>Internet Explorer version 11 or above</li>
<li>Firefox version 30 or above</li>
<li>Chrome version 34 or above</li>
<li>For other browsers, please refer to vendor specific documentation</li>
</ol>

",Low,,,/riches/login/..,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3136/?engineType=WEBINSPECT&issue=056e9b33-1e63-4454-8996-5f7346718fa7&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"056e9b33-1e63-4454-8996-5f7346718fa7","

An unencrypted login form has been discovered. Any area of a web application that possibly contains sensitive information or access to privileged functionality such as remote site administration functionality should utilize SSL or another form of encryption to prevent login information from being sniffed or otherwise intercepted or stolen. If the login form is being served over SSL, the page that the form is being submitted to MUST be accessed over SSL.  Every link/URL present on that page (not just the form action) needs to be served over HTTPS. This will prevent Man-in-the-Middle attacks on the login form. Recommendations include ensuring that sensitive areas of your web application have proper encryption protocols in place to prevent login information and other data that could be helpful to an attacker from being intercepted.

",High,,,"/riches/logiqFakeSuffix/..",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3150/?engineType=WEBINSPECT&issue=106d6af0-cf8e-431e-85d6-b610026f6014&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"106d6af0-cf8e-431e-85d6-b610026f6014","

Most recent browsers have features that will save password field content entered by users and then automatically complete password entry the next time the field are encountered. This feature is enabled by default and could leak password since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to ""off"" on all your password fields.

Please Note: Recent versions of most browsers, as noted below, now ignore the autocomplete=""off"" attribute for password fields in html forms.  Users are allowed to decide the password policy at their own discretion using the password manager.  Although setting is ineffective on these versions of browsers, it would continue to protect website users of earlier versions of these and other browsers that support this attribute. 

Browsers NOT Supporting autocomplete=""off"": 

<ol><li>Internet Explorer version 11 or above</li>
<li>Firefox version 30 or above</li>
<li>Chrome version 34 or above</li>
<li>For other browsers, please refer to vendor specific documentation</li>
</ol>

",Low,,,"/riches/logiqFakeSuffix/..",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3171/?engineType=WEBINSPECT&issue=26c510ae-c850-4155-b33d-39acab22870d&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"26c510ae-c850-4155-b33d-39acab22870d","

Most recent browsers have features that will save form field content entered by users and then automatically complete form entry the next time the fields are encountered. This feature is enabled by default and could leak sensitive information since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to ""off"" on all your forms.

",Low,,,"/riches/logiqFakeSuffix/..",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3178/?engineType=WEBINSPECT&issue=2d83dcae-9225-4fbd-a919-71c97a57b5d2&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"2d83dcae-9225-4fbd-a919-71c97a57b5d2","

Any area of a web application that possibly contains sensitive information or access to privileged functionality such as remote site administration functionality should utilize SSL or another form of encryption to prevent login information from being sniffed or otherwise intercepted or stolen.   ~FullURL~ has failed this policy. Recommendations include ensuring that sensitive areas of your web application have proper encryption protocols in place to prevent login information and other data that could be helpful to an attacker from being intercepted.

",High,,,"/riches/logiqFakeSuffix/..",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3265/?engineType=WEBINSPECT&issue=7529f4dd-7e6f-4071-bc79-600fbab4dbbc&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"7529f4dd-7e6f-4071-bc79-600fbab4dbbc","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/logiqFakeSuffix/..",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3311/?engineType=WEBINSPECT&issue=a4c3600e-3e7a-445b-b7d5-a004c6197293&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"a4c3600e-3e7a-445b-b7d5-a004c6197293","

WebInspect detected the use of an ActiveX object. This could indicate a vulnerability is present if a vulnerable public version of the Microsoft Active Template was utilized. There are three vulnerabilities in the public versions of the Microsoft Active Template Library (ATL) included with Visual Studio. Applications and components created with these versions of ATL are vulnerable to remote code execution and information disclosure attacks.  Visual Studio itself is not vulnerable to these issues. In these three vulnerabilities, ATL processes data incorrectly which can lead to memory corruption, information disclosure, and instantiation of objects without regard to security policy. After Visual Studio is patched, it will no longer create applications and components with these vulnerabilities. However, applications and components compiled using the vulnerable version of ATL need to be rebuilt with the safe version released by Microsoft. Recommendations include applying any relevant service pack or patch as listed in the Fix section, then recompiling and redistrubiting any software created prior to the update. If you have already applied the proper fix, then this vulnerability can safely be ignored.

",Low,,,"/riches/logiqFakeSuffix/..",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3335/?engineType=WEBINSPECT&issue=b881e4ab-7f45-40a9-bd37-4d27acf5278d&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"b881e4ab-7f45-40a9-bd37-4d27acf5278d","

<i></i>
High session timeout values may allow older session identifiers to be reused by attackers. This vulnerability was scored because a timeout value greater than  minutes was detected. OWASP suggests 5 minutes for high-value applications, and 20 minutes for low-risk applications. While these are just suggestions, the exact session timeout depends on the usage and sensitivity of the application.

",High,,,"/riches/logiqFakeSuffix/..",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3361/?engineType=WEBINSPECT&issue=d01d089a-c2f4-4c78-bc6a-5b8f4cdc0644&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"d01d089a-c2f4-4c78-bc6a-5b8f4cdc0644","

A Flash movie or Flash object was found and did not require the latest version of the Flash Player. The Flash Player itself has had many vulnerabilities reported against it. Allowing your website users to use an old and unsupported Flash Player introduces unnecessary risk. Generally web developers will allow the minimum required version run the flash object, but this exposes the website user to an exploitable situation. Requiring the latest Flash Player version will ensure your users are protected from known flaws in the player itself; these past vulnerabilities include Cross-Site Scripting, and Remote Code Execution (on the client machine). Recommendations include requiring the latest version of the Flash Player be utilized.

",Low,,,"/riches/logiqFakeSuffix/..",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3381/?engineType=WEBINSPECT&issue=ea40809a-46a2-441b-98d8-d95b36f01313&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"ea40809a-46a2-441b-98d8-d95b36f01313","

A Flash movie or Flash object was found. Flash movies and objects can be decompiled and may contain sensitive information. An attacker could decompile the Flash file and gain access to the confidential information, including any hard-coded passwords and keys, within the Flash file.

",Low,,,"/riches/logiqFakeSuffix/..",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3364/?engineType=WEBINSPECT&issue=d11b0dde-1f7a-49f1-8d1c-a94d9536c725&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"d11b0dde-1f7a-49f1-8d1c-a94d9536c725","

<i></i>
High session timeout values may allow older session identifiers to be reused by attackers. This vulnerability was scored because a timeout value greater than  minutes was detected. OWASP suggests 5 minutes for high-value applications, and 20 minutes for low-risk applications. While these are just suggestions, the exact session timeout depends on the usage and sensitivity of the application.

",High,,,/riches/rest/accounts/..,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3356/?engineType=WEBINSPECT&issue=ce497dc1-d57c-4a51-a55b-7b4953bc05b5&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"ce497dc1-d57c-4a51-a55b-7b4953bc05b5","

<i></i>
High session timeout values may allow older session identifiers to be reused by attackers. This vulnerability was scored because a timeout value greater than  minutes was detected. OWASP suggests 5 minutes for high-value applications, and 20 minutes for low-risk applications. While these are just suggestions, the exact session timeout depends on the usage and sensitivity of the application.

",High,,,"/riches/rest/accounts/12345/..",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3245/?engineType=WEBINSPECT&issue=67f577f0-7b91-472e-8c1e-8b8131dc8bf9&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"67f577f0-7b91-472e-8c1e-8b8131dc8bf9","

Critical SQL Injection vulnerabilities have been identified in the web application. SQL injection is a method of attack where an attacker can exploit vulnerable code and the type of data an application will accept, and can be exploited in any application parameter that influences a database query. Examples include parameters within the url itself, post data, or cookie values. If successful, SQL Injection can give an attacker access to backend database contents, the ability to remotely execute system commands, or in some circumstances the means to take control of the server hosting the database. Recommendations include employing a layered approach to security that includes utilizing parameterized queries when accepting user input, ensuring that only expected data is accepted by an application, and hardening the database server to prevent data from being accessed inappropriately.

",Critical,,,"/riches/rest/accounts/12345%27%09OR",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3161/?engineType=WEBINSPECT&issue=1aa10539-392a-4e54-acdd-522d19542477&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"1aa10539-392a-4e54-acdd-522d19542477","

HTML tag injection vulnerabilities were identified on this web application.  HTML tag injections are used to aid in Cross-Site Request Forgeries and phishing attacks against third-party web sites, and can often double as Cross-Site Scripting vulnerabilities.  Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Medium,,,"/riches/rest/accounts/12345%3ciMg%20SrC%3dxSrFtEsT.sPi%3e",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3302/?engineType=WEBINSPECT&issue=9fec707a-84f0-42da-aaa5-a38026532e87&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"9fec707a-84f0-42da-aaa5-a38026532e87","

The WebInspect Agent has detected a potential compromise of Social Security Numbers. The issue arises when an application outputs Social Security Numbers to an external location such as the system console, file system or network.
Developers must thoroughly review logging practices employed by their web applications and ensure that private data is not part of the information being recorded. 
Various federal and state regulations require secure collection and management of private data such as Social Security Numbers or passwords. To comply with such requirements, applications must avoid storing or communicating personal information in plaintext.

",Critical,,,"/riches/auth/AccountDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3328/?engineType=WEBINSPECT&issue=b19d5ab4-6fa7-4a27-a668-4590e9091fc3&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"b19d5ab4-6fa7-4a27-a668-4590e9091fc3","

Critical SQL Injection vulnerabilities have been identified in the web application. SQL injection is a method of attack where an attacker can exploit vulnerable code and the type of data an application will accept, and can be exploited in any application parameter that influences a database query. Examples include parameters within the url itself, post data, or cookie values. If successful, SQL Injection can give an attacker access to backend database contents, the ability to remotely execute system commands, or in some circumstances the means to take control of the server hosting the database. Recommendations include employing a layered approach to security that includes utilizing parameterized queries when accepting user input, ensuring that only expected data is accepted by an application, and hardening the database server to prevent data from being accessed inappropriately.

",Critical,,,"/riches/auth/AccountDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3368/?engineType=WEBINSPECT&issue=d3feb717-fd31-4d0e-809f-b3e637db44e8&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"d3feb717-fd31-4d0e-809f-b3e637db44e8","

To ease development and increase productivity, most modern frameworks allow an object to be automatically instantiated and populated with the HTTP request parameters whose names match an attribute of the class to be bound. Automatic instantiation and population of objects speeds up development, but can lead to serious problems if implemented without caution. Any attribute in the bound classes, or nested classes, will be automatically bound to the HTTP request parameters. Therefore malicious users will be able to assign a value to any attribute in bound or nested classes, even if they are not exposed to the client through web forms or API contracts.

For example, an object may contain a member variable named “IsAdmin”, and is set to false by default, unless the admin user is logged in to the application. If the application supports autobinding, a malicious user could send a request with a parameter “IsAdmin=true”, and this would allow the user into the application’s admin sections.

<i>In this case, the vulnerable parameters are: </i>

",High,,,"/riches/auth/AccountDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3373/?engineType=WEBINSPECT&issue=db05d8d7-eb49-4656-9478-58bfc81260f5&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"db05d8d7-eb49-4656-9478-58bfc81260f5","

A critical vulnerability has been detected within your web application due to the presence of one or more Social Security Numbers. If this information is carried over to a production server, it can cause major security problems. Recommendations include not storing this information on your web application.

",Critical,,,"/riches/auth/AccountDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3203/?engineType=WEBINSPECT&issue=4306cbff-3318-4c10-bbea-98e93a67fefb&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"4306cbff-3318-4c10-bbea-98e93a67fefb","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/pages/content/AccountDetails.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3359/?engineType=WEBINSPECT&issue=cfe63d2d-d1b0-4f39-bc38-60c0d2e0d174&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"cfe63d2d-d1b0-4f39-bc38-60c0d2e0d174","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/pages/content/AccountDetails.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3101/?engineType=SECURITYSCOPE&issue=6290D0092328C542496138D267014E3F&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"6290D0092328C542496138D267014E3F","<a rel=""nofollow"">null/java/empty.htm?version=2018.3.1.1</a>",Critical,,,"pages/content/AccountDetails.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2695/?engineType=SCA&issue=92319B67597E150084CE27397114E3DF&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"92319B67597E150084CE27397114E3DF","The method GetAccounts_JSON() in AccountResources.java sends unvalidated data to a web browser on line 33, which can result in the browser executing malicious code.


",Critical,,,"restful/AccountResources.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2784/?engineType=SCA&issue=DAED7F7502889D323ACD8462B770FF55&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"DAED7F7502889D323ACD8462B770FF55","The method GetAccounts_JSON() in AccountResources.java mishandles confidential information, which can compromise user privacy and is often illegal.


",Critical,,,"restful/AccountResources.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2820/?engineType=SCA&issue=F8DA890C0BDF4AC3A1453902C7950F5B&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"F8DA890C0BDF4AC3A1453902C7950F5B","The method GetAccounts_JSON() in AccountResources.java mishandles confidential information, which can compromise user privacy and is often illegal.


",Critical,,,"restful/AccountResources.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2692/?engineType=SCA&issue=910023951115A48BDAE72236E9044942&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"910023951115A48BDAE72236E9044942","The method GetAccounts() in AccountResources.java mishandles confidential information, which can compromise user privacy and is often illegal.


",Critical,,,"restful/AccountResources.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2736/?engineType=SCA&issue=B3B5F025479BF51A4FF4AC203E8D2BAD&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"B3B5F025479BF51A4FF4AC203E8D2BAD","The method GetAccounts() in AccountResources.java sends unvalidated data to a web browser on line 49, which can result in the browser executing malicious code.


",Critical,,,"restful/AccountResources.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2796/?engineType=SCA&issue=E48EAC84661A2BAC2DD75CE4E35601F7&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"E48EAC84661A2BAC2DD75CE4E35601F7","The method GetAccounts() in AccountResources.java mishandles confidential information, which can compromise user privacy and is often illegal.


",Critical,,,"restful/AccountResources.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2807/?engineType=SCA&issue=EFFCDC8EA4719DCD5480891F332FC5E1&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"EFFCDC8EA4719DCD5480891F332FC5E1","The method GetAccountsByName() in AccountResources.java sends unvalidated data to a web browser on line 65, which can result in the browser executing malicious code.


",Critical,,,"restful/AccountResources.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2610/?engineType=SCA&issue=3750C3DAAB59EFC478307384E5793B6D&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"3750C3DAAB59EFC478307384E5793B6D","The method GetAccountsByName() in AccountResources.java sends unvalidated data to a web browser on line 69, which can result in the browser executing malicious code.


",Critical,,,"restful/AccountResources.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2613/?engineType=SCA&issue=3C2E693898F88A2984E96FCE175B9376&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"3C2E693898F88A2984E96FCE175B9376","The method GetAccountsByName() in AccountResources.java mishandles confidential information, which can compromise user privacy and is often illegal.


",Critical,,,"restful/AccountResources.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2737/?engineType=SCA&issue=B45F7998935D8B99A250771F6B05BFC1&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"B45F7998935D8B99A250771F6B05BFC1","The method GetAccountsByName() in AccountResources.java mishandles confidential information, which can compromise user privacy and is often illegal.


",Critical,,,"restful/AccountResources.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2730/?engineType=SCA&issue=AC0BEE3871C1C724AE2BB5608A42414A&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"AC0BEE3871C1C724AE2BB5608A42414A","The method GetAccountsByName_JSON() in AccountResources.java mishandles confidential information, which can compromise user privacy and is often illegal.


",Critical,,,"restful/AccountResources.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2790/?engineType=SCA&issue=E00DFDB912DA02F9D36A2DF5DCB06543&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"E00DFDB912DA02F9D36A2DF5DCB06543","The method GetAccountsByName_JSON() in AccountResources.java mishandles confidential information, which can compromise user privacy and is often illegal.


",Critical,,,"restful/AccountResources.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2652/?engineType=SCA&issue=6B443017083821C47FC1CA8BD6F776D0&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"6B443017083821C47FC1CA8BD6F776D0","The method DeleteAccount() in AccountResources.java sends unvalidated data to a web browser on line 144, which can result in the browser executing malicious code.


",Critical,,,"restful/AccountResources.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2786/?engineType=SCA&issue=DBF681C718E9A931D6D71F5A8310BF63&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"DBF681C718E9A931D6D71F5A8310BF63","The method DeleteAccount() in AccountResources.java sends unvalidated data to a web browser on line 147, which can result in the browser executing malicious code.


",Critical,,,"restful/AccountResources.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3125/?engineType=SECURITYSCOPE&issue=DAE41F06CED3F3AFAC7C1515702AB73B&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"DAE41F06CED3F3AFAC7C1515702AB73B","<a rel=""nofollow"">null/java/privacy_violation.htm?version=2018.3.1.1</a>",High,,,"com/fortify/samples/riches/model/AccountService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2609/?engineType=SCA&issue=34A50D24068532BB24417F0FBC244E8E&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"34A50D24068532BB24417F0FBC244E8E","The method addAccount() in AccountService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/AccountService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2815/?engineType=SCA&issue=F5CBAD0E9C7CBA7CFC07BA169D734F6F&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"F5CBAD0E9C7CBA7CFC07BA169D734F6F","Using a <code>throw</code> statement inside a <code>finally</code> block breaks the logical progression through the <code>try-catch-finally</code>.


",Low,,,"model/AccountService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2797/?engineType=SCA&issue=E4C0D19B7624F30E51529B5A6E4346E6&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"E4C0D19B7624F30E51529B5A6E4346E6","The method getAllAccounts() in AccountService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/AccountService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2582/?engineType=SCA&issue=1AE1F56ED631924F37FEC1DBB06955C1&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"1AE1F56ED631924F37FEC1DBB06955C1","Using a <code>throw</code> statement inside a <code>finally</code> block breaks the logical progression through the <code>try-catch-finally</code>.


",Low,,,"model/AccountService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2563/?engineType=SCA&issue=03213BD36F78FCCA237910BE2B4F677B&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"03213BD36F78FCCA237910BE2B4F677B","The method getAccounts() in AccountService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/AccountService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2560/?engineType=SCA&issue=001E1E1C836A7411BE22538063CA4B13&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"001E1E1C836A7411BE22538063CA4B13","Using a <code>throw</code> statement inside a <code>finally</code> block breaks the logical progression through the <code>try-catch-finally</code>.


",Low,,,"model/AccountService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2822/?engineType=SCA&issue=F97179F7726EBCD9A71D5E283C5C2681&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"F97179F7726EBCD9A71D5E283C5C2681","The method deposit() in AccountService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/AccountService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2801/?engineType=SCA&issue=E992F47DB9AEC9E4C9FAAC8A4E48263D&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"E992F47DB9AEC9E4C9FAAC8A4E48263D","Using a <code>throw</code> statement inside a <code>finally</code> block breaks the logical progression through the <code>try-catch-finally</code>.


",Low,,,"model/AccountService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2824/?engineType=SCA&issue=FBA6B228B97B8B473FD55B814B28389C&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"FBA6B228B97B8B473FD55B814B28389C","The method writeCheck() in AccountService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/AccountService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2702/?engineType=SCA&issue=99208C08E3658FD59780F5D1AA5D8D7B&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"99208C08E3658FD59780F5D1AA5D8D7B","The method writeCheck() in AccountService.java mishandles confidential information, which can compromise user privacy and is often illegal.


",Critical,,,"model/AccountService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2781/?engineType=SCA&issue=D7D3A0CF880E5AB12A70575C177A787C&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"D7D3A0CF880E5AB12A70575C177A787C","The method writeCheck() in AccountService.java mishandles confidential information, which can compromise user privacy and is often illegal.


",Critical,,,"model/AccountService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2666/?engineType=SCA&issue=7679EF29E1F68CB71BFF9742E7AB50FF&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"7679EF29E1F68CB71BFF9742E7AB50FF","Using a <code>throw</code> statement inside a <code>finally</code> block breaks the logical progression through the <code>try-catch-finally</code>.


",Low,,,"model/AccountService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2646/?engineType=SCA&issue=5F8A13E4A7F4DDABF13EBE3B10317AB8&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"5F8A13E4A7F4DDABF13EBE3B10317AB8","The method tranferFunds() in AccountService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/AccountService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2798/?engineType=SCA&issue=E796FB53B0914B6A3458F61BCFD047CB&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"E796FB53B0914B6A3458F61BCFD047CB","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,"model/AccountService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2699/?engineType=SCA&issue=946C811BCD01B25FA6006E03BE589232&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"946C811BCD01B25FA6006E03BE589232","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,"model/AccountService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2734/?engineType=SCA&issue=B1FF387C4FAE66A0FC17FE20C35612D8&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"B1FF387C4FAE66A0FC17FE20C35612D8","Using a <code>throw</code> statement inside a <code>finally</code> block breaks the logical progression through the <code>try-catch-finally</code>.


",Low,,,"model/AccountService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2671/?engineType=SCA&issue=79BEF5420B6C7AA95B2BCEC57DBD3437&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"79BEF5420B6C7AA95B2BCEC57DBD3437","The method changePassword() in AccountService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/AccountService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2576/?engineType=SCA&issue=1483212FE21E843DC765482817D6C30F&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"1483212FE21E843DC765482817D6C30F","Storing passwords or password details in plain text anywhere in the system or system code may compromise system security in a way that cannot be easily remedied.


",Low,,,"model/AccountService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2626/?engineType=SCA&issue=4F6D1969D287FCFDD2312B7D4DBFB91E&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"4F6D1969D287FCFDD2312B7D4DBFB91E","The method changePassword() in AccountService.java ignores an exception on line 256, which could cause the program to overlook unexpected states and conditions.


",Low,,,"model/AccountService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2774/?engineType=SCA&issue=D4DEA40C01BE5765777CC168E6330E55&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"D4DEA40C01BE5765777CC168E6330E55","The catch block at AccountService.java line 256 handles a broad swath of exceptions,  potentially trapping dissimilar issues or problems that should not be dealt with at this point in the program.


",Low,,,"model/AccountService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2592/?engineType=SCA&issue=26C56B1F346A32AF1AB326A520D68002&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"26C56B1F346A32AF1AB326A520D68002","Using a <code>throw</code> statement inside a <code>finally</code> block breaks the logical progression through the <code>try-catch-finally</code>.


",Low,,,"model/AccountService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2709/?engineType=SCA&issue=9C3AFFF96D8EC24D9DD199D1F2BB6203&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"9C3AFFF96D8EC24D9DD199D1F2BB6203","The method deleteAccount() in AccountService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/AccountService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2690/?engineType=SCA&issue=8CC60A27BE1E07FD9E991A4BD5010C1E&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"8CC60A27BE1E07FD9E991A4BD5010C1E","Using a <code>throw</code> statement inside a <code>finally</code> block breaks the logical progression through the <code>try-catch-finally</code>.


",Low,,,"model/AccountService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2579/?engineType=SCA&issue=16532165D0AAFB72D95D5FB16F9B29E6&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"16532165D0AAFB72D95D5FB16F9B29E6","The method IsAccountExist() in AccountService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/AccountService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2567/?engineType=SCA&issue=04A68488FD896ABE42D1623AF415CA5C&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"04A68488FD896ABE42D1623AF415CA5C","The call to append() in AccountService.java on line 318 appends untrusted data to a <code>StringBuilder</code> instance initialized with the default backing-array size (16). This can cause the JVM to over-consume heap memory space.


",Low,,,"model/AccountService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2791/?engineType=SCA&issue=E1563936A659A6B49EA3F2CC8975CA5C&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"E1563936A659A6B49EA3F2CC8975CA5C","On line 318 of AccountService.java, IsAccountExist() uses Hibernate to execute a dynamic SQL statement built with input coming from an untrusted source. An attacker could modify the statement's meaning or execute arbitrary SQL commands. 


",Critical,,,"model/AccountService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2640/?engineType=SCA&issue=5BB2982FFEBA5BCD7E24879CD5795B57&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"5BB2982FFEBA5BCD7E24879CD5795B57","Using a <code>throw</code> statement inside a <code>finally</code> block breaks the logical progression through the <code>try-catch-finally</code>.


",Low,,,"model/AccountService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3181/?engineType=WEBINSPECT&issue=2eabf2db-6391-43e2-b0da-dff443a16990&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"2eabf2db-6391-43e2-b0da-dff443a16990","

The WebInspect Agent has detected a potential compromise of Social Security Numbers. The issue arises when an application outputs Social Security Numbers to an external location such as the system console, file system or network.
Developers must thoroughly review logging practices employed by their web applications and ensure that private data is not part of the information being recorded. 
Various federal and state regulations require secure collection and management of private data such as Social Security Numbers or passwords. To comply with such requirements, applications must avoid storing or communicating personal information in plaintext.

",Critical,,,"/riches/auth/AccountSummary.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3332/?engineType=WEBINSPECT&issue=b6832cc6-1a80-4eda-a95c-00c02a3f0db0&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"b6832cc6-1a80-4eda-a95c-00c02a3f0db0","

A critical vulnerability has been detected within your web application due to the presence of one or more Social Security Numbers. If this information is carried over to a production server, it can cause major security problems. Recommendations include not storing this information on your web application.

",Critical,,,"/riches/auth/AccountSummary.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3396/?engineType=WEBINSPECT&issue=f769c31a-ade0-4b83-9eea-8219c4595f47&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"f769c31a-ade0-4b83-9eea-8219c4595f47","

<i></i>
High session timeout values may allow older session identifiers to be reused by attackers. This vulnerability was scored because a timeout value greater than  minutes was detected. OWASP suggests 5 minutes for high-value applications, and 20 minutes for low-risk applications. While these are just suggestions, the exact session timeout depends on the usage and sensitivity of the application.

",High,,,"/riches/auth/AccountSummary.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2676/?engineType=SCA&issue=7F0126512764FE3247B23C45BCFE417E&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"7F0126512764FE3247B23C45BCFE417E","The method execute() in AccountSummary.java mishandles confidential information, which can compromise user privacy and is often illegal.


",Critical,,,AccountSummary.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2760/?engineType=SCA&issue=C8C6CFFAC5D6B7BBCC2AA9EB6458CF9A&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"C8C6CFFAC5D6B7BBCC2AA9EB6458CF9A","The method execute() in AccountSummary.java mishandles confidential information, which can compromise user privacy and is often illegal.


",Critical,,,AccountSummary.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3100/?engineType=SECURITYSCOPE&issue=62762E796039591C2B5E253CE64EFA62&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"62762E796039591C2B5E253CE64EFA62","<a rel=""nofollow"">null/java/privacy_violation.htm?version=2018.3.1.1</a>",High,,,"com/fortify/samples/riches/AccountSummary.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3240/?engineType=WEBINSPECT&issue=6631356d-f111-4eb8-bb81-a2e28fbbba49&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"6631356d-f111-4eb8-bb81-a2e28fbbba49","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/pages/content/AccountSummary.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3296/?engineType=WEBINSPECT&issue=95504d3d-35e0-4eee-9381-e1bfd09ca611&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"95504d3d-35e0-4eee-9381-e1bfd09ca611","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/pages/content/AccountSummary.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2706/?engineType=SCA&issue=9B72D41665F32079F4DE8D04E794FE68&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"9B72D41665F32079F4DE8D04E794FE68","The catch block at AdminUtil.java line 38 handles a broad swath of exceptions,  potentially trapping dissimilar issues or problems that should not be dealt with at this point in the program.


",Low,,,oper/AdminUtil.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2680/?engineType=SCA&issue=81016D20E2E8A83827AE42569978E648&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"81016D20E2E8A83827AE42569978E648","The method isAdmin() in AdminUtil.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,oper/AdminUtil.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2632/?engineType=SCA&issue=53AF51482E59E80A7763DDFF6244C82C&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"53AF51482E59E80A7763DDFF6244C82C","Without proper access control, the method isAdmin() in AdminUtil.java can execute a SQL statement on line 55 that contains an attacker-controlled primary key, thereby allowing the attacker to access unauthorized records.


",Low,,,oper/AdminUtil.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2758/?engineType=SCA&issue=C65B0AD1C2F47B054FE435FA80EE6418&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"C65B0AD1C2F47B054FE435FA80EE6418","The method debugAdminRoles() in AdminUtil.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,oper/AdminUtil.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2770/?engineType=SCA&issue=D24438484920D4F29AF7ADB83C2C5CD3&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"D24438484920D4F29AF7ADB83C2C5CD3","The function debugAdminRoles() in AdminUtil.java sometimes fails to release a database resource allocated by <a href=""event:file=database/ConnFactory.java&amp;lineNo=66"" rel=""nofollow"">getConnection()</a> on line 84.


",High,,,oper/AdminUtil.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2789/?engineType=SCA&issue=DDDFFD158E1321D75C769E64E3E39605&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"DDDFFD158E1321D75C769E64E3E39605","The function debugAdminRoles() in AdminUtil.java sometimes fails to release a database resource allocated by <a href=""event:file=database/ConnFactory.java&amp;lineNo=66"" rel=""nofollow"">getConnection()</a> on line 84.


",High,,,oper/AdminUtil.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2608/?engineType=SCA&issue=33CE7726847CB5E469F26DDEF4B5896F&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"33CE7726847CB5E469F26DDEF4B5896F","On line 90 of AdminUtil.java, the method debugAdminRoles() invokes a SQL query built using input potentially coming from an untrusted source. This call could allow an attacker to modify the statement's meaning or to execute arbitrary SQL commands.


",Low,,,oper/AdminUtil.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2649/?engineType=SCA&issue=646145467E09C67677752BDDD85AA1B6&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"646145467E09C67677752BDDD85AA1B6","The function debugAdminRoles() in AdminUtil.java sometimes fails to release a database resource allocated by <a href=""event:file=database/ConnFactory.java&amp;lineNo=66"" rel=""nofollow"">getConnection()</a> on line 84.


",High,,,oper/AdminUtil.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2799/?engineType=SCA&issue=E7A59D23DF50C6486A11C31B1D7403D3&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"E7A59D23DF50C6486A11C31B1D7403D3","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,oper/AdminUtil.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2612/?engineType=SCA&issue=3B78230E815319B3DBAE0BD82E13EED2&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"3B78230E815319B3DBAE0BD82E13EED2","Using a <code>throw</code> statement inside a <code>finally</code> block breaks the logical progression through the <code>try-catch-finally</code>.


",Low,,,oper/AdminUtil.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2733/?engineType=SCA&issue=B1DB06639CE920817B93AAA6B2F416FE&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"B1DB06639CE920817B93AAA6B2F416FE","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,oper/AdminUtil.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2721/?engineType=SCA&issue=A43147258BD2DB5E9810D681F3087FFA&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"A43147258BD2DB5E9810D681F3087FFA","The method isAuth() in AdminUtil.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,oper/AdminUtil.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2636/?engineType=SCA&issue=544E616D7AFFCFB81DED685CCC141593&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"544E616D7AFFCFB81DED685CCC141593","The method isAuth() in AdminUtil.java ignores an exception on line 134, which could cause the program to overlook unexpected states and conditions.


",Low,,,oper/AdminUtil.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3334/?engineType=WEBINSPECT&issue=b839faa2-a053-43ee-84ca-d76c689bc784&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"b839faa2-a053-43ee-84ca-d76c689bc784","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,/riches/pages/Backup.jsp,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3402/?engineType=WEBINSPECT&issue=f8fb5684-f769-46fd-b8cc-aec60a536d09&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"f8fb5684-f769-46fd-b8cc-aec60a536d09","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,/riches/pages/Backup.jsp,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2569/?engineType=SCA&issue=09B0BEF2F67A7E019194F800712C774D&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"09B0BEF2F67A7E019194F800712C774D","Attackers are able to control the file system path argument to FileInputStream() at BannerAdClient.java line 37, which allows them to access or modify otherwise protected files.


",Critical,,,"webservices/BannerAdClient.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2606/?engineType=SCA&issue=32E949B42CD9930634D2173CEC7D335A&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"32E949B42CD9930634D2173CEC7D335A","The function copy() in BannerAdClient.java sometimes fails to release a system resource allocated by FileInputStream() on line 37.


",High,,,"webservices/BannerAdClient.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2743/?engineType=SCA&issue=BA5BD48E6B407F8A9A0793B504EFA8E3&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"BA5BD48E6B407F8A9A0793B504EFA8E3","The function copy() in BannerAdClient.java sometimes fails to release a system resource allocated by FileOutputStream() on line 39.


",High,,,"webservices/BannerAdClient.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2631/?engineType=SCA&issue=51459A7195AD3C4E4B6A1C6AD0139F3F&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"51459A7195AD3C4E4B6A1C6AD0139F3F","The class BannerAdClient contains debug code, which can create unintended entry points in a deployed web application.


",Low,,,"webservices/BannerAdClient.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2570/?engineType=SCA&issue=0A737866A868108DAC36F0B9C1F5934C&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"0A737866A868108DAC36F0B9C1F5934C","Deserializing user-controlled object streams at runtime can allow attackers to execute arbitrary code on the server, abuse application logic, and/or lead to denial of service.


",High,,,"webservices/BannerAdClient.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2615/?engineType=SCA&issue=4489941CA52E527B382DB4EAEE1B350B&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"4489941CA52E527B382DB4EAEE1B350B","Attackers are able to control the file system path argument to File() at BannerAdClient.java line 81, which allows them to access or modify otherwise protected files.


",Critical,,,"webservices/BannerAdClient.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2819/?engineType=SCA&issue=F8680C3BD7C9852841F10F9E85DBA2F4&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"F8680C3BD7C9852841F10F9E85DBA2F4","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,"webservices/BannerAdClient.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2595/?engineType=SCA&issue=29FDD229BF0516BF3EFBA49AF7862655&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"29FDD229BF0516BF3EFBA49AF7862655","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,"webservices/BannerAdClient.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2809/?engineType=SCA&issue=F2FB98FEBBE949D636148216C38E83DC&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"F2FB98FEBBE949D636148216C38E83DC","The function main() in BannerAdClient.java might reveal system data or debugging information by calling println() on line 95. The information revealed by println() could help an adversary form a plan of attack.


",Low,,,"webservices/BannerAdClient.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2769/?engineType=SCA&issue=D212974E6ADB5E17D12AED6542204DCD&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"D212974E6ADB5E17D12AED6542204DCD","The function main() in BannerAdClient.java might reveal system data or debugging information by calling printStackTrace() on line 97. The information revealed by printStackTrace() could help an adversary form a plan of attack.


",Low,,,"webservices/BannerAdClient.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2629/?engineType=SCA&issue=506F88E419543F2E628B067FB3119708&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"506F88E419543F2E628B067FB3119708","Deserializing user-controlled object streams at runtime can allow attackers to execute arbitrary code on the server, abuse application logic, and/or lead to denial of service.


",High,,,"webservices/BannerAdServer.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2795/?engineType=SCA&issue=E25C4CCA4165D5503E8E106C8815B811&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"E25C4CCA4165D5503E8E106C8815B811","Attackers are able to control the file system path argument to File() at BannerAdServer.java line 31, which allows them to access or modify otherwise protected files.


",Critical,,,"webservices/BannerAdServer.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2720/?engineType=SCA&issue=A227EBF38A11EEE7A4E7DF359FEAF99C&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"A227EBF38A11EEE7A4E7DF359FEAF99C","The class BannerAdServer contains debug code, which can create unintended entry points in a deployed web application.


",Low,,,"webservices/BannerAdServer.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2710/?engineType=SCA&issue=9C6AEF4E7BBA2054C820ACD0A492B5E9&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"9C6AEF4E7BBA2054C820ACD0A492B5E9","The method main() in BannerAdServer.java ignores an exception on line 63, which could cause the program to overlook unexpected states and conditions.


",Low,,,"webservices/BannerAdServer.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2638/?engineType=SCA&issue=56ADCC4435F55205D31AC81FA27D2C6F&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"56ADCC4435F55205D31AC81FA27D2C6F","The method retrieveBannerAd() in BannerAdSource.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"webservices/BannerAdSource.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3135/?engineType=WEBINSPECT&issue=034e9eeb-d0e4-49f2-8f05-eb46a4cd7b01&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"034e9eeb-d0e4-49f2-8f05-eb46a4cd7b01","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/pages/content/oper/BrowseAccount.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3220/?engineType=WEBINSPECT&issue=58e6580e-2273-491c-9106-8bcc6828fe31&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"58e6580e-2273-491c-9106-8bcc6828fe31","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/pages/content/oper/BrowseAccount.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3137/?engineType=WEBINSPECT&issue=077ac9f8-98af-433a-8a08-9473ea99e293&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"077ac9f8-98af-433a-8a08-9473ea99e293","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3140/?engineType=WEBINSPECT&issue=091f5673-5a09-401d-b455-b98d4167c19c&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"091f5673-5a09-401d-b455-b98d4167c19c","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3146/?engineType=WEBINSPECT&issue=0ba292e9-b29c-4df7-984f-f7d5eb66b979&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"0ba292e9-b29c-4df7-984f-f7d5eb66b979","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3147/?engineType=WEBINSPECT&issue=0c462d2a-ea8a-4243-8c35-4aa1af3eb964&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"0c462d2a-ea8a-4243-8c35-4aa1af3eb964","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3154/?engineType=WEBINSPECT&issue=1336e960-5e5a-424f-8657-1fad1cff6140&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"1336e960-5e5a-424f-8657-1fad1cff6140","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3155/?engineType=WEBINSPECT&issue=1392bea7-f20d-4a76-9fd1-71c2086d83d5&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"1392bea7-f20d-4a76-9fd1-71c2086d83d5","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3157/?engineType=WEBINSPECT&issue=17d18f93-dc7f-466d-9a9d-7d19a0078202&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"17d18f93-dc7f-466d-9a9d-7d19a0078202","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3164/?engineType=WEBINSPECT&issue=1d493756-a8d7-478b-beeb-8f5c69b7b423&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"1d493756-a8d7-478b-beeb-8f5c69b7b423","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3170/?engineType=WEBINSPECT&issue=251fb262-8995-4583-87c8-37c6a10de940&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"251fb262-8995-4583-87c8-37c6a10de940","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3180/?engineType=WEBINSPECT&issue=2e5ca728-310b-4c57-b2ef-1d30c1dfbc52&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"2e5ca728-310b-4c57-b2ef-1d30c1dfbc52","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3195/?engineType=WEBINSPECT&issue=3c1edb37-fec1-483f-acfb-2e94d9dbeb7c&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"3c1edb37-fec1-483f-acfb-2e94d9dbeb7c","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3205/?engineType=WEBINSPECT&issue=489eb8eb-1daf-476b-9fb3-eb401269502a&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"489eb8eb-1daf-476b-9fb3-eb401269502a","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3211/?engineType=WEBINSPECT&issue=5161edda-eb61-4827-b019-f23ee3762ab4&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"5161edda-eb61-4827-b019-f23ee3762ab4","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3216/?engineType=WEBINSPECT&issue=54d519ed-7b54-47a2-92f4-1efa882e2b75&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"54d519ed-7b54-47a2-92f4-1efa882e2b75","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3226/?engineType=WEBINSPECT&issue=5dac5735-ec8e-4f93-8106-100b983edefb&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"5dac5735-ec8e-4f93-8106-100b983edefb","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3228/?engineType=WEBINSPECT&issue=5dfffec2-0b83-4699-8f44-6d7c7f6f9490&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"5dfffec2-0b83-4699-8f44-6d7c7f6f9490","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3233/?engineType=WEBINSPECT&issue=62fc0454-1cb5-4944-b80c-60902fa93d80&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"62fc0454-1cb5-4944-b80c-60902fa93d80","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3255/?engineType=WEBINSPECT&issue=70318977-a00b-475d-ad4d-65b74028f2c9&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"70318977-a00b-475d-ad4d-65b74028f2c9","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3256/?engineType=WEBINSPECT&issue=706d8420-7954-41d6-8f67-cb70a3cbc8f1&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"706d8420-7954-41d6-8f67-cb70a3cbc8f1","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3267/?engineType=WEBINSPECT&issue=77b08c00-459c-4bc4-9e9c-b80b31b379e3&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"77b08c00-459c-4bc4-9e9c-b80b31b379e3","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3270/?engineType=WEBINSPECT&issue=7855001b-74b3-4af3-a58c-47f0730241ce&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"7855001b-74b3-4af3-a58c-47f0730241ce","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3278/?engineType=WEBINSPECT&issue=80d6287b-f41b-4434-ade2-48cd4fc42ae9&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"80d6287b-f41b-4434-ade2-48cd4fc42ae9","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3284/?engineType=WEBINSPECT&issue=86c86085-935b-4232-97b4-dfe8d2203ce6&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"86c86085-935b-4232-97b4-dfe8d2203ce6","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3286/?engineType=WEBINSPECT&issue=8b5cba80-4bd8-45e9-9bf9-2bf2baad2472&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"8b5cba80-4bd8-45e9-9bf9-2bf2baad2472","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3289/?engineType=WEBINSPECT&issue=8d30d0c8-6ac5-4bab-9fbe-bd6c4bf2fa90&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"8d30d0c8-6ac5-4bab-9fbe-bd6c4bf2fa90","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3290/?engineType=WEBINSPECT&issue=8dc70a98-274e-48e9-ad52-070688e6393b&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"8dc70a98-274e-48e9-ad52-070688e6393b","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3295/?engineType=WEBINSPECT&issue=9318ca29-fac2-4455-926d-f13b86e5703a&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"9318ca29-fac2-4455-926d-f13b86e5703a","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3298/?engineType=WEBINSPECT&issue=99fc80fb-6f5a-4526-b7d9-4fade0d742ca&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"99fc80fb-6f5a-4526-b7d9-4fade0d742ca","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3303/?engineType=WEBINSPECT&issue=a0643224-1396-4800-8e5f-42b5729b39e2&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"a0643224-1396-4800-8e5f-42b5729b39e2","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3309/?engineType=WEBINSPECT&issue=a45330af-a7ba-4a3a-9988-66bf0bfe6c63&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"a45330af-a7ba-4a3a-9988-66bf0bfe6c63","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3315/?engineType=WEBINSPECT&issue=a927d816-f3c4-4cef-a8d0-32adf9b42b25&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"a927d816-f3c4-4cef-a8d0-32adf9b42b25","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3320/?engineType=WEBINSPECT&issue=abf8ae95-8de9-42e7-89a2-4eb29144c81a&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"abf8ae95-8de9-42e7-89a2-4eb29144c81a","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3324/?engineType=WEBINSPECT&issue=b0dffc43-781c-4dfd-80a1-8da72304c12c&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"b0dffc43-781c-4dfd-80a1-8da72304c12c","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3333/?engineType=WEBINSPECT&issue=b81dae15-3c86-4f01-bb46-56956b493ed1&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"b81dae15-3c86-4f01-bb46-56956b493ed1","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3344/?engineType=WEBINSPECT&issue=c1ad4719-7626-41db-a553-6cbb559de784&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"c1ad4719-7626-41db-a553-6cbb559de784","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3350/?engineType=WEBINSPECT&issue=c744e709-840a-45c8-a80c-ff5aea7d99d3&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"c744e709-840a-45c8-a80c-ff5aea7d99d3","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3369/?engineType=WEBINSPECT&issue=d7b38e7b-5859-4c93-9f9f-003f59efa81e&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"d7b38e7b-5859-4c93-9f9f-003f59efa81e","

Most recent browsers have features that will save form field content entered by users and then automatically complete form entry the next time the fields are encountered. This feature is enabled by default and could leak sensitive information since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to ""off"" on all your forms.

",Low,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3387/?engineType=WEBINSPECT&issue=f08a7459-e422-42aa-a144-9c40a467fb97&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"f08a7459-e422-42aa-a144-9c40a467fb97","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3404/?engineType=WEBINSPECT&issue=fb1f92f3-5abb-4e13-bf5f-c848e0d9d9ba&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"fb1f92f3-5abb-4e13-bf5f-c848e0d9d9ba","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/CareerDetails.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3237/?engineType=WEBINSPECT&issue=6572b820-520c-4fd4-a675-d793b84dc639&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"6572b820-520c-4fd4-a675-d793b84dc639","

<i></i>
High session timeout values may allow older session identifiers to be reused by attackers. This vulnerability was scored because a timeout value greater than  minutes was detected. OWASP suggests 5 minutes for high-value applications, and 20 minutes for low-risk applications. While these are just suggestions, the exact session timeout depends on the usage and sensitivity of the application.

",High,,,"/riches/pages/CareerDetails.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3348/?engineType=WEBINSPECT&issue=c6dc340f-493e-44cd-959c-8cb52959aad4&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"c6dc340f-493e-44cd-959c-8cb52959aad4","

<i></i>
High session timeout values may allow older session identifiers to be reused by attackers. This vulnerability was scored because a timeout value greater than  minutes was detected. OWASP suggests 5 minutes for high-value applications, and 20 minutes for low-risk applications. While these are just suggestions, the exact session timeout depends on the usage and sensitivity of the application.

",High,,,"/riches/pages/content/CareerDetails.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3092/?engineType=SECURITYSCOPE&issue=54DCB3747C2002238737C32B44A734B1&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"54DCB3747C2002238737C32B44A734B1","<a rel=""nofollow"">null/java/empty.htm?version=2018.3.1.1</a>",Critical,,,"pages/content/CareerDetails.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3120/?engineType=SECURITYSCOPE&issue=C947D6B42A71B8B1D4347A9F04F6ADDC&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"C947D6B42A71B8B1D4347A9F04F6ADDC","<a rel=""nofollow"">null/java/empty.htm?version=2018.3.1.1</a>",Critical,,,"pages/content/CareerDetails.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3090/?engineType=SECURITYSCOPE&issue=4611DF3C9C4D94792318A8C506012B35&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"4611DF3C9C4D94792318A8C506012B35","<a rel=""nofollow"">null/java/empty.htm?version=2018.3.1.1</a>",Critical,,,"pages/content/CareerDetails.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3094/?engineType=SECURITYSCOPE&issue=5B70D8B678DF1D25B572D2DE85725840&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"5B70D8B678DF1D25B572D2DE85725840","<a rel=""nofollow"">null/java/empty.htm?version=2018.3.1.1</a>",Critical,,,"pages/content/CareerDetails.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3096/?engineType=SECURITYSCOPE&issue=5F191E75BC3C84005E2E7DBFC9F74714&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"5F191E75BC3C84005E2E7DBFC9F74714","<a rel=""nofollow"">null/java/empty.htm?version=2018.3.1.1</a>",Critical,,,"pages/content/CareerDetails.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3355/?engineType=WEBINSPECT&issue=ce2a1c59-e69d-49a5-8b4d-fab78bb6299e&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"ce2a1c59-e69d-49a5-8b4d-fab78bb6299e","

Most recent browsers have features that will save form field content entered by users and then automatically complete form entry the next time the fields are encountered. This feature is enabled by default and could leak sensitive information since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to ""off"" on all your forms.

",Low,,,/riches/Careers.action,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3219/?engineType=WEBINSPECT&issue=576e31bd-61bb-4c4f-bb29-d10cc07072e4&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"576e31bd-61bb-4c4f-bb29-d10cc07072e4","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/pages/content/Careers.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3388/?engineType=WEBINSPECT&issue=f1ab7a8e-a1c3-4d8e-b4b0-f48395d7efa9&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"f1ab7a8e-a1c3-4d8e-b4b0-f48395d7efa9","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/pages/content/Careers.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3112/?engineType=SECURITYSCOPE&issue=9A7D8B091E81B77264940AA8C4F6B896&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"9A7D8B091E81B77264940AA8C4F6B896","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,"pages/content/Careers.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3108/?engineType=SECURITYSCOPE&issue=84675FB479EECF6F2DE423372C4E61F7&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"84675FB479EECF6F2DE423372C4E61F7","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,"pages/content/Careers.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3115/?engineType=SECURITYSCOPE&issue=AEDFD9156A75D73123C008523EF6ACEC&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"AEDFD9156A75D73123C008523EF6ACEC","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,"pages/content/Careers.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3078/?engineType=SECURITYSCOPE&issue=21302B7DA5C04D1EF1720DE6B4FEDACB&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"21302B7DA5C04D1EF1720DE6B4FEDACB","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,"pages/content/Careers.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3077/?engineType=SECURITYSCOPE&issue=1998200BFAD7FCE728C83128E9B65351&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"1998200BFAD7FCE728C83128E9B65351","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,"pages/content/Careers.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3102/?engineType=SECURITYSCOPE&issue=652E550F3499EE043959C567F08E2D46&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"652E550F3499EE043959C567F08E2D46","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,"pages/content/Careers.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3116/?engineType=SECURITYSCOPE&issue=BE3ADE42721A7227DE8D5989B7C07B33&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"BE3ADE42721A7227DE8D5989B7C07B33","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,"pages/content/Careers.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3105/?engineType=SECURITYSCOPE&issue=6FD4072532C748F941D0FF9A03DAEFAF&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"6FD4072532C748F941D0FF9A03DAEFAF","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,"pages/content/Careers.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3126/?engineType=SECURITYSCOPE&issue=E62F74CC85DDA351FD51F15AA85AA631&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"E62F74CC85DDA351FD51F15AA85AA631","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,"pages/content/Careers.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3213/?engineType=WEBINSPECT&issue=534a3655-2fe4-4486-a18e-0ffc5ebaebcf&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"534a3655-2fe4-4486-a18e-0ffc5ebaebcf","

Most recent browsers have features that will save password field content entered by users and then automatically complete password entry the next time the field are encountered. This feature is enabled by default and could leak password since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to ""off"" on all your password fields.

Please Note: Recent versions of most browsers, as noted below, now ignore the autocomplete=""off"" attribute for password fields in html forms.  Users are allowed to decide the password policy at their own discretion using the password manager.  Although setting is ineffective on these versions of browsers, it would continue to protect website users of earlier versions of these and other browsers that support this attribute. 

Browsers NOT Supporting autocomplete=""off"": 

<ol><li>Internet Explorer version 11 or above</li>
<li>Firefox version 30 or above</li>
<li>Chrome version 34 or above</li>
<li>For other browsers, please refer to vendor specific documentation</li>
</ol>

",Low,,,"/riches/auth/ChangePass.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3285/?engineType=WEBINSPECT&issue=8b20092a-324b-4d1f-b0a2-a3ebcf331660&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"8b20092a-324b-4d1f-b0a2-a3ebcf331660","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/pages/content/ChangePass.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3316/?engineType=WEBINSPECT&issue=aa4142cd-ea24-4b02-84af-10a253ca6d23&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"aa4142cd-ea24-4b02-84af-10a253ca6d23","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/pages/content/ChangePass.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3194/?engineType=WEBINSPECT&issue=39ec03a7-84b5-438f-8c47-5f9e17f83255&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"39ec03a7-84b5-438f-8c47-5f9e17f83255","

Most recent browsers have features that will save form field content entered by users and then automatically complete form entry the next time the fields are encountered. This feature is enabled by default and could leak sensitive information since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to ""off"" on all your forms.

",Low,,,"/riches/auth/Check.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3175/?engineType=WEBINSPECT&issue=2c592845-6620-4930-a03c-f9b7deaf12f9&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"2c592845-6620-4930-a03c-f9b7deaf12f9","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/pages/content/Check.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3299/?engineType=WEBINSPECT&issue=9ca9a11b-a6e3-4e4a-aed1-135fd0d45f17&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"9ca9a11b-a6e3-4e4a-aed1-135fd0d45f17","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/pages/content/Check.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2562/?engineType=SCA&issue=01F60530B37664B38085F29BB102896D&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"01F60530B37664B38085F29BB102896D","The function ConnFactory() in ConnFactory.java sometimes fails to release a system resource allocated by FileInputStream() on line 20.


",High,,,"database/ConnFactory.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2675/?engineType=SCA&issue=7B071C48A5A67BAD2F0DE3FA28C4ED6E&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"7B071C48A5A67BAD2F0DE3FA28C4ED6E","Attackers are able to control the file system path argument to FileInputStream() at ConnFactory.java line 20, which allows them to access or modify otherwise protected files.


",Critical,,,"database/ConnFactory.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2723/?engineType=SCA&issue=A6BF7D9843FA84897510E11B26E8F251&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"A6BF7D9843FA84897510E11B26E8F251","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,"database/ConnFactory.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2597/?engineType=SCA&issue=2B7B34C0375AAD2E26514AA6E56AE454&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"2B7B34C0375AAD2E26514AA6E56AE454","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,"database/ConnFactory.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2566/?engineType=SCA&issue=0490353C75987A209426996BE948A675&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"0490353C75987A209426996BE948A675","The catch block at ConnFactory.java line 35 handles a broad swath of exceptions,  potentially trapping dissimilar issues or problems that should not be dealt with at this point in the program.


",Low,,,"database/ConnFactory.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2719/?engineType=SCA&issue=A1A027DE5A316C0051DC43E45EBF7D53&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"A1A027DE5A316C0051DC43E45EBF7D53","The function ConnFactory() in ConnFactory.java might reveal system data or debugging information by calling printStackTrace() on line 37. The information revealed by printStackTrace() could help an adversary form a plan of attack.


",Low,,,"database/ConnFactory.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2740/?engineType=SCA&issue=B91F6E09628ABF694C3D3B8D69C307C8&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"B91F6E09628ABF694C3D3B8D69C307C8","The catch block at ConnFactory.java line 74 handles a broad swath of exceptions,  potentially trapping dissimilar issues or problems that should not be dealt with at this point in the program.


",Low,,,"database/ConnFactory.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2772/?engineType=SCA&issue=D2783906CB9E709A16D415E9FCBACB36&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"D2783906CB9E709A16D415E9FCBACB36","The function getConnection() in ConnFactory.java might reveal system data or debugging information by calling printStackTrace() on line 76. The information revealed by printStackTrace() could help an adversary form a plan of attack.


",Low,,,"database/ConnFactory.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2588/?engineType=SCA&issue=23F9CE587987F540BCCF37CEED4858BE&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"23F9CE587987F540BCCF37CEED4858BE","Attackers are able to control the file system path argument to FileInputStream() at ConnectionFactory.java line 28, which allows them to access or modify otherwise protected files.


",Critical,,,"database/ConnectionFactory.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2749/?engineType=SCA&issue=C059BA80170F1862AD796FA3BD53E949&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"C059BA80170F1862AD796FA3BD53E949","The function ConnectionFactory() in ConnectionFactory.java sometimes fails to release a system resource allocated by FileInputStream() on line 28.


",High,,,"database/ConnectionFactory.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2718/?engineType=SCA&issue=A13F3C106134CCE7994D38F510549FD8&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"A13F3C106134CCE7994D38F510549FD8","The catch block at ConnectionFactory.java line 31 handles a broad swath of exceptions,  potentially trapping dissimilar issues or problems that should not be dealt with at this point in the program.


",Low,,,"database/ConnectionFactory.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2729/?engineType=SCA&issue=ABF9546DF83AE597ED8A526B79370EFD&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"ABF9546DF83AE597ED8A526B79370EFD","The method ConnectionFactory() in ConnectionFactory.java ignores an exception on line 31, which could cause the program to overlook unexpected states and conditions.


",Low,,,"database/ConnectionFactory.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2660/?engineType=SCA&issue=7096BFD73D6055A19DC7013292887252&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"7096BFD73D6055A19DC7013292887252","The function ConnectionFactory() in ConnectionFactory.java might reveal system data or debugging information by calling throwing() on line 67. The information revealed by throwing() could help an adversary form a plan of attack.


",Low,,,"database/ConnectionFactory.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2661/?engineType=SCA&issue=7096BFD73D6055A19DC7013292887253&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"7096BFD73D6055A19DC7013292887253","The function ConnectionFactory() in ConnectionFactory.java might reveal system data or debugging information by calling throwing() on line 77. The information revealed by throwing() could help an adversary form a plan of attack.


",Low,,,"database/ConnectionFactory.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2714/?engineType=SCA&issue=9EBDCE1203CADB2976C1A992DD759647&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"9EBDCE1203CADB2976C1A992DD759647","The function getSession() in ConnectionFactory.java might reveal system data or debugging information by calling throwing() on line 129. The information revealed by throwing() could help an adversary form a plan of attack.


",Low,,,"database/ConnectionFactory.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3152/?engineType=WEBINSPECT&issue=12b7c777-8a66-4da9-8f0c-2c1e089fe566&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"12b7c777-8a66-4da9-8f0c-2c1e089fe566","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/pages/content/oper/CreateAccount.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3322/?engineType=WEBINSPECT&issue=ad13f325-30cc-462f-9040-a209e8b4c376&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"ad13f325-30cc-462f-9040-a209e8b4c376","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/pages/content/oper/CreateAccount.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3143/?engineType=WEBINSPECT&issue=0ae088e7-4549-4b2d-8251-b5955bf8fca6&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"0ae088e7-4549-4b2d-8251-b5955bf8fca6","

<i></i>
High session timeout values may allow older session identifiers to be reused by attackers. This vulnerability was scored because a timeout value greater than  minutes was detected. OWASP suggests 5 minutes for high-value applications, and 20 minutes for low-risk applications. While these are just suggestions, the exact session timeout depends on the usage and sensitivity of the application.

",High,,,"/riches/pages/oper/CreateAccount.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2662/?engineType=SCA&issue=70FD4FDB934DFE608E51773D41AFE94E&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"70FD4FDB934DFE608E51773D41AFE94E","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,"database/DatabaseController.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2627/?engineType=SCA&issue=4FB75AEB68C5DF6BE6AA41AC54DDE1F5&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"4FB75AEB68C5DF6BE6AA41AC54DDE1F5","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,"database/DatabaseController.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2746/?engineType=SCA&issue=BE3FD973042D09AE4A8A0E576D7F8B23&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"BE3FD973042D09AE4A8A0E576D7F8B23","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,"database/DatabaseController.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2681/?engineType=SCA&issue=820EBFAF1D058D4E4952B761F48B8D85&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"820EBFAF1D058D4E4952B761F48B8D85","The function contextDestroyed() in DatabaseController.java sometimes fails to release a database resource allocated by getConnection() on line 56.


",High,,,"database/DatabaseController.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2596/?engineType=SCA&issue=2B5A6761EDACFE7676753C518047084A&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"2B5A6761EDACFE7676753C518047084A","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,"database/DatabaseController.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2691/?engineType=SCA&issue=8D044A80083F2710B84B6ED8B8B22EBD&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"8D044A80083F2710B84B6ED8B8B22EBD","The function contextDestroyed() in DatabaseController.java might reveal system data or debugging information by calling println() on line 61. The information revealed by println() could help an adversary form a plan of attack.


",Low,,,"database/DatabaseController.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3210/?engineType=WEBINSPECT&issue=51136ec4-97b5-4798-bb4d-2b7224c45369&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"51136ec4-97b5-4798-bb4d-2b7224c45369","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/pages/content/oper/DeleteAccount.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3386/?engineType=WEBINSPECT&issue=f023f524-1a00-41ca-a461-c0ae88f67028&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"f023f524-1a00-41ca-a461-c0ae88f67028","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/pages/content/oper/DeleteAccount.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3144/?engineType=WEBINSPECT&issue=0b9314d9-1405-48b3-8d20-efc1859dd180&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"0b9314d9-1405-48b3-8d20-efc1859dd180","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/auth/DeleteMessage.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3202/?engineType=WEBINSPECT&issue=4205c439-bc27-4f2b-860f-a06f596f126e&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"4205c439-bc27-4f2b-860f-a06f596f126e","

WebInspect has detected an LDAP Injection vulnerability.  LDAP injection errors occur when:
1.  Data enters a program from an untrusted source.
2.  The data is used to dynamically construct an LDAP filter.
<b>Example 1:</b>The following code dynamically constructs and executes an LDAP query that retrieves records for all the employees who report to a given manager. The manager's name is read from an HTTP request, and is therefore untrusted.<pre>...
$managerName = $_POST[""managerName""]];
//retrieve all of the employees who report to a specific sales manager
$filter = ""(&amp;(manager="" . $managerName . "")(dep=sales))"";
$result = ldap_search($ds, ""ou=People,dc=example,dc=com"", $filter);
...</pre>Under normal conditions, such as searching for employees who report to the sales manager, John Smith, the query that this code executes looks similar to the following:<pre>(&amp;(manager=Smith, John)(dep=sales))</pre>However, because the filter is constructed dynamically by concatenating a constant base query string and a user input string, the query only behaves correctly if <code>managerName</code> does not contain any LDAP meta characters. If an attacker enters a valid name of a manager from another department and adds an additional filter condition that returns true <code>Hacker, Wiley)(uid=*</code> for <code>managerName</code>, then the query becomes the following:<pre>(&amp;(manager=Hacker, Wiley)(uid=*)(dep=sales))</pre>The last condition, <code>(dep=sales)</code> is ignored and the results will  include employees from all departments.

",High,,,"/riches/auth/DeleteMessage.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3287/?engineType=WEBINSPECT&issue=8c9efb27-1d40-458e-9dd6-dc1ae9c4be86&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"8c9efb27-1d40-458e-9dd6-dc1ae9c4be86","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/auth/DeleteMessage.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3288/?engineType=WEBINSPECT&issue=8d0a8bb3-cd9f-43c9-9e20-966f1e91c584&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"8d0a8bb3-cd9f-43c9-9e20-966f1e91c584","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/auth/DeleteMessage.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3357/?engineType=WEBINSPECT&issue=ce79fe20-207c-4e6d-b3e1-d96fbc4ce050&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"ce79fe20-207c-4e6d-b3e1-d96fbc4ce050","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/auth/DeleteMessage.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3394/?engineType=WEBINSPECT&issue=f6945784-bcaa-49ef-ae2f-387ba8613ef0&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"f6945784-bcaa-49ef-ae2f-387ba8613ef0","

WebInspect has detected an LDAP Injection vulnerability.  LDAP injection errors occur when:
1.  Data enters a program from an untrusted source.
2.  The data is used to dynamically construct an LDAP filter.
<b>Example 1:</b>The following code dynamically constructs and executes an LDAP query that retrieves records for all the employees who report to a given manager. The manager's name is read from an HTTP request, and is therefore untrusted.<pre>...
$managerName = $_POST[""managerName""]];
//retrieve all of the employees who report to a specific sales manager
$filter = ""(&amp;(manager="" . $managerName . "")(dep=sales))"";
$result = ldap_search($ds, ""ou=People,dc=example,dc=com"", $filter);
...</pre>Under normal conditions, such as searching for employees who report to the sales manager, John Smith, the query that this code executes looks similar to the following:<pre>(&amp;(manager=Smith, John)(dep=sales))</pre>However, because the filter is constructed dynamically by concatenating a constant base query string and a user input string, the query only behaves correctly if <code>managerName</code> does not contain any LDAP meta characters. If an attacker enters a valid name of a manager from another department and adds an additional filter condition that returns true <code>Hacker, Wiley)(uid=*</code> for <code>managerName</code>, then the query becomes the following:<pre>(&amp;(manager=Hacker, Wiley)(uid=*)(dep=sales))</pre>The last condition, <code>(dep=sales)</code> is ignored and the results will  include employees from all departments.

",High,,,"/riches/auth/DeleteMessage.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3292/?engineType=WEBINSPECT&issue=8f74fe48-0f20-43a7-b993-3791688907f4&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"8f74fe48-0f20-43a7-b993-3791688907f4","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/pages/content/DeleteMessage.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3343/?engineType=WEBINSPECT&issue=bf9c4a28-15f3-46a7-8cba-8d54ec8ed176&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"bf9c4a28-15f3-46a7-8cba-8d54ec8ed176","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/pages/content/DeleteMessage.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3119/?engineType=SECURITYSCOPE&issue=C68A666D96B6D10BFE7A70BC9329B6A6&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"C68A666D96B6D10BFE7A70BC9329B6A6","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,"freemarker/core/DollarVariable.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3251/?engineType=WEBINSPECT&issue=69a220f8-16aa-4d69-a37f-b9f9b0d0a3a4&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"69a220f8-16aa-4d69-a37f-b9f9b0d0a3a4","

Most recent browsers have features that will save form field content entered by users and then automatically complete form entry the next time the fields are encountered. This feature is enabled by default and could leak sensitive information since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to ""off"" on all your forms.

",Low,,,"/riches/FindLocations.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3266/?engineType=WEBINSPECT&issue=75bd5b95-0649-4d5b-9f58-2bd9bb89d4a2&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"75bd5b95-0649-4d5b-9f58-2bd9bb89d4a2","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/pages/content/FindLocations.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3318/?engineType=WEBINSPECT&issue=aae953d5-e916-43b1-af9b-dc3086bafad6&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"aae953d5-e916-43b1-af9b-dc3086bafad6","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/pages/content/FindLocations.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3087/?engineType=SECURITYSCOPE&issue=3ECAEF84BB07E3C03B7CCAA3BE81291E&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"3ECAEF84BB07E3C03B7CCAA3BE81291E","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,"sun/reflect/GeneratedMethodAccessor166.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3111/?engineType=SECURITYSCOPE&issue=971E532BDF44C1456C247E2652149240&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"971E532BDF44C1456C247E2652149240","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,"sun/reflect/GeneratedMethodAccessor167.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3232/?engineType=WEBINSPECT&issue=62d22b23-df4e-4c89-9f56-be526d457422&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"62d22b23-df4e-4c89-9f56-be526d457422","

<i></i>
High session timeout values may allow older session identifiers to be reused by attackers. This vulnerability was scored because a timeout value greater than  minutes was detected. OWASP suggests 5 minutes for high-value applications, and 20 minutes for low-risk applications. While these are just suggestions, the exact session timeout depends on the usage and sensitivity of the application.

",High,,,"/riches/auth/oper/HP404_89.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3190/?engineType=WEBINSPECT&issue=37a012e5-319c-4181-b6a6-7cb5445d227f&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"37a012e5-319c-4181-b6a6-7cb5445d227f","

<i></i>
High session timeout values may allow older session identifiers to be reused by attackers. This vulnerability was scored because a timeout value greater than  minutes was detected. OWASP suggests 5 minutes for high-value applications, and 20 minutes for low-risk applications. While these are just suggestions, the exact session timeout depends on the usage and sensitivity of the application.

",High,,,"/riches/pages/content/oper/InvalidEmail.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3072/?engineType=SECURITYSCOPE&issue=0BA3182220887C2C44588637FA6D3CEF&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"0BA3182220887C2C44588637FA6D3CEF","<a rel=""nofollow"">null/java/sql_injection.htm?version=2018.3.1.1</a>",Critical,,,"com/fortify/samples/riches/model/LocationService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3095/?engineType=SECURITYSCOPE&issue=5DE0BC69A8B3A5A4BBE9B0994923A58A&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"5DE0BC69A8B3A5A4BBE9B0994923A58A","<a rel=""nofollow"">null/java/sql_injection.htm?version=2018.3.1.1</a>",Critical,,,"com/fortify/samples/riches/model/LocationService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2584/?engineType=SCA&issue=22D966465D9742DF98077376CE037C43&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"22D966465D9742DF98077376CE037C43","The catch block at LocationService.java line 55 handles a broad swath of exceptions,  potentially trapping dissimilar issues or problems that should not be dealt with at this point in the program.


",Low,,,"model/LocationService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2768/?engineType=SCA&issue=D159FD560B345C2ABBD30C7A2DE32582&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"D159FD560B345C2ABBD30C7A2DE32582","On line 69 of LocationService.java, the method findAtmByZip() invokes a SQL query built using input potentially coming from an untrusted source. This call could allow an attacker to modify the statement's meaning or to execute arbitrary SQL commands.


",Low,,,"model/LocationService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2752/?engineType=SCA&issue=C229EECF8D63827B278DC757A6697DE8&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"C229EECF8D63827B278DC757A6697DE8","The method findAtmByZip() in LocationService.java ignores an exception on line 72, which could cause the program to overlook unexpected states and conditions.


",Low,,,"model/LocationService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2826/?engineType=SCA&issue=FD60A66AF69666DB25A4972D8D92A788&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"FD60A66AF69666DB25A4972D8D92A788","The catch block at LocationService.java line 72 handles a broad swath of exceptions,  potentially trapping dissimilar issues or problems that should not be dealt with at this point in the program.


",Low,,,"model/LocationService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2657/?engineType=SCA&issue=701BC55927BDE20C887BBFFD59045C08&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"701BC55927BDE20C887BBFFD59045C08","The method findBranchByZip() in LocationService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/LocationService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2806/?engineType=SCA&issue=EC97C21B88AFAF2463ACE4DB282F0706&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"EC97C21B88AFAF2463ACE4DB282F0706","The method findByZip() in LocationService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/LocationService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2800/?engineType=SCA&issue=E8E910D82EF66399F5A101045C58E7CC&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"E8E910D82EF66399F5A101045C58E7CC","On line 110 of LocationService.java, the method findByZip() invokes a SQL query built using input potentially coming from an untrusted source. This call could allow an attacker to modify the statement's meaning or to execute arbitrary SQL commands.


",Low,,,"model/LocationService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2620/?engineType=SCA&issue=4779DEC5DDC610B114996590938589C2&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"4779DEC5DDC610B114996590938589C2","The method findAtmByAddress() in LocationService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/LocationService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2659/?engineType=SCA&issue=704636AAA6B5456A4B980F439D3AA0E5&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"704636AAA6B5456A4B980F439D3AA0E5","On line 139 of LocationService.java, the method findAtmByAddress() invokes a SQL query built using input potentially coming from an untrusted source. This call could allow an attacker to modify the statement's meaning or to execute arbitrary SQL commands.


",Low,,,"model/LocationService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2705/?engineType=SCA&issue=9B41AA1CC858CCC818EAD1BDBBD35869&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"9B41AA1CC858CCC818EAD1BDBBD35869","The method findBranchByAddress() in LocationService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/LocationService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3138/?engineType=WEBINSPECT&issue=081d14b4-decb-42a6-a9b4-3bf29d2bf39d&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"081d14b4-decb-42a6-a9b4-3bf29d2bf39d","

A Flash movie or Flash object was found. Flash movies and objects can be decompiled and may contain sensitive information. An attacker could decompile the Flash file and gain access to the confidential information, including any hard-coded passwords and keys, within the Flash file.

",Low,,,"/riches/login/Login.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3145/?engineType=WEBINSPECT&issue=0b987956-6ebc-47ad-9d00-bd414ac78091&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"0b987956-6ebc-47ad-9d00-bd414ac78091","

An unencrypted login form has been discovered. Any area of a web application that possibly contains sensitive information or access to privileged functionality such as remote site administration functionality should utilize SSL or another form of encryption to prevent login information from being sniffed or otherwise intercepted or stolen. If the login form is being served over SSL, the page that the form is being submitted to MUST be accessed over SSL.  Every link/URL present on that page (not just the form action) needs to be served over HTTPS. This will prevent Man-in-the-Middle attacks on the login form. Recommendations include ensuring that sensitive areas of your web application have proper encryption protocols in place to prevent login information and other data that could be helpful to an attacker from being intercepted.

",High,,,"/riches/login/Login.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3151/?engineType=WEBINSPECT&issue=123da185-7901-459b-ba53-03a668cf8988&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"123da185-7901-459b-ba53-03a668cf8988","

A Flash movie or Flash object was found and did not require the latest version of the Flash Player. The Flash Player itself has had many vulnerabilities reported against it. Allowing your website users to use an old and unsupported Flash Player introduces unnecessary risk. Generally web developers will allow the minimum required version run the flash object, but this exposes the website user to an exploitable situation. Requiring the latest Flash Player version will ensure your users are protected from known flaws in the player itself; these past vulnerabilities include Cross-Site Scripting, and Remote Code Execution (on the client machine). Recommendations include requiring the latest version of the Flash Player be utilized.

",Low,,,"/riches/login/Login.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3167/?engineType=WEBINSPECT&issue=2252aaf9-e860-41bb-917d-66001eb50183&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"2252aaf9-e860-41bb-917d-66001eb50183","

Most recent browsers have features that will save password field content entered by users and then automatically complete password entry the next time the field are encountered. This feature is enabled by default and could leak password since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to ""off"" on all your password fields.

Please Note: Recent versions of most browsers, as noted below, now ignore the autocomplete=""off"" attribute for password fields in html forms.  Users are allowed to decide the password policy at their own discretion using the password manager.  Although setting is ineffective on these versions of browsers, it would continue to protect website users of earlier versions of these and other browsers that support this attribute. 

Browsers NOT Supporting autocomplete=""off"": 

<ol><li>Internet Explorer version 11 or above</li>
<li>Firefox version 30 or above</li>
<li>Chrome version 34 or above</li>
<li>For other browsers, please refer to vendor specific documentation</li>
</ol>

",Low,,,"/riches/login/Login.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3174/?engineType=WEBINSPECT&issue=2aa9df3a-d944-4cd5-ac98-b67cd308dced&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"2aa9df3a-d944-4cd5-ac98-b67cd308dced","

Critical vulnerabilities exist in Apache Struts 2 versions 2.3.15 and below  that would allow an attacker to remotely execute code on the application server by injecting Open-Graph Navigation Language (OGNL) expressions into parameters prefixed with action:, redirect: and redirectAction. These vulnerabilities result from improper user input validation. Remote attackers could exploit this vulnerability to execute arbitrary commands with the privileges of the affected application, possibly leading to a compromise of the application and the underlying web server. It is recommended to upgrade to Apache Struts 2 version 2.3.15.1 or above.

",Critical,,,"/riches/login/Login.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3187/?engineType=WEBINSPECT&issue=3528275e-df27-42a9-95b0-0cea6614cf17&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"3528275e-df27-42a9-95b0-0cea6614cf17","

WebInspect detected the use of an ActiveX object. This could indicate a vulnerability is present if a vulnerable public version of the Microsoft Active Template was utilized. There are three vulnerabilities in the public versions of the Microsoft Active Template Library (ATL) included with Visual Studio. Applications and components created with these versions of ATL are vulnerable to remote code execution and information disclosure attacks.  Visual Studio itself is not vulnerable to these issues. In these three vulnerabilities, ATL processes data incorrectly which can lead to memory corruption, information disclosure, and instantiation of objects without regard to security policy. After Visual Studio is patched, it will no longer create applications and components with these vulnerabilities. However, applications and components compiled using the vulnerable version of ATL need to be rebuilt with the safe version released by Microsoft. Recommendations include applying any relevant service pack or patch as listed in the Fix section, then recompiling and redistrubiting any software created prior to the update. If you have already applied the proper fix, then this vulnerability can safely be ignored.

",Low,,,"/riches/login/Login.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3207/?engineType=WEBINSPECT&issue=4e774ac5-9b1e-4283-92ce-48737080e3f2&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"4e774ac5-9b1e-4283-92ce-48737080e3f2","

Most recent browsers have features that will save form field content entered by users and then automatically complete form entry the next time the fields are encountered. This feature is enabled by default and could leak sensitive information since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to ""off"" on all your forms.

",Low,,,"/riches/login/Login.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3257/?engineType=WEBINSPECT&issue=70d01e0b-5029-4b29-8a55-e453f5aa043d&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"70d01e0b-5029-4b29-8a55-e453f5aa043d","

Critical vulnerabilities exist in Apache Struts 2 versions 2.3.14 and below  that would allow an attacker to remotely execute code on the application server by supplying specially crafted request parameters containing Open Graph Navigation Language (OGNL) code. This vulnerability is triggered due to the includeParams attribute of the &lt;s:url&gt; or the &lt;s:a&gt; tag. Remote attackers could exploit this vulnerability to execute arbitrary commands with the privileges of the affected application, possibly leading to a compromise of the application and the underlying web server. It is recommended to upgrade to Apache Struts 2 version 2.3.14.1 or above.

",Critical,,,"/riches/login/Login.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3300/?engineType=WEBINSPECT&issue=9ceac171-9ce5-45b6-8467-162851759e97&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"9ceac171-9ce5-45b6-8467-162851759e97","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/login/Login.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3371/?engineType=WEBINSPECT&issue=d8d316e0-f381-4e28-8d75-3dcc82e852f9&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"d8d316e0-f381-4e28-8d75-3dcc82e852f9","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/login/Login.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3374/?engineType=WEBINSPECT&issue=db10b391-0cf1-4c68-a0b8-8594e80cb57b&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"db10b391-0cf1-4c68-a0b8-8594e80cb57b","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/login/Login.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3383/?engineType=WEBINSPECT&issue=eaf9e373-291c-43c0-b286-6dcf5d4cf2e2&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"eaf9e373-291c-43c0-b286-6dcf5d4cf2e2","

Any area of a web application that possibly contains sensitive information or access to privileged functionality such as remote site administration functionality should utilize SSL or another form of encryption to prevent login information from being sniffed or otherwise intercepted or stolen.   ~FullURL~ has failed this policy. Recommendations include ensuring that sensitive areas of your web application have proper encryption protocols in place to prevent login information and other data that could be helpful to an attacker from being intercepted.

",High,,,"/riches/login/Login.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3405/?engineType=WEBINSPECT&issue=fcf9b3cd-c1fa-484f-928a-7dcadbce6400&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"fcf9b3cd-c1fa-484f-928a-7dcadbce6400","

A Cross-Frame Scripting (XFS) vulnerability can allow an attacker to load the vulnerable application inside an HTML iframe tag on a malicious page. The attacker could use this weakness to devise a Clickjacking attack to conduct phishing, frame sniffing, social engineering or Cross-Site Request Forgery attacks.

<b>Clickjacking</b>
The goal of a Clickjacking attack is to deceive the victim user into interacting with UI elements of the attacker’s choice on the target web site without her knowledge and in turn executing privileged functionality on the victim’s behalf. To achieve this goal, the attacker must exploit the XFS vulnerability to load the attack target inside an iframe tag, hide it using Cascading Style Sheets (CSS) and overlay the phishing content on the malicious page. By placing the UI elements on the phishing page to overlap with those on the page targeted in the attack, the attacker can ensure that the victim is forced to interact with the UI elements on the target page not visible to the victim.
 WebInspect has detected a page which potentially handles sensitive information using an HTML form with a password input field and is missing XFS protection. 
<i></i>

",High,,,"/riches/login/Login.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2716/?engineType=SCA&issue=9F7BB6E82D200329EB887528131A247A&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"9F7BB6E82D200329EB887528131A247A","The function addMessage() in MessageService.java sometimes fails to release a database resource allocated by <a href=""event:file=database/ConnectionFactory.java&amp;lineNo=112"" rel=""nofollow"">getSession()</a> on line 20.


",High,,,"model/MessageService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2586/?engineType=SCA&issue=23BD561433B9C2960E0935592162A928&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"23BD561433B9C2960E0935592162A928","The catch block at MessageService.java line 27 handles a broad swath of exceptions,  potentially trapping dissimilar issues or problems that should not be dealt with at this point in the program.


",Low,,,"model/MessageService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2663/?engineType=SCA&issue=71EAFA2683B8869FB0549EDBE503AF70&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"71EAFA2683B8869FB0549EDBE503AF70","The method addMessage() in MessageService.java ignores an exception on line 27, which could cause the program to overlook unexpected states and conditions.


",Low,,,"model/MessageService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2700/?engineType=SCA&issue=967C2B54EC85F08555E98F18F30D0B65&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"967C2B54EC85F08555E98F18F30D0B65","The method deleteMessages() in MessageService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/MessageService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2744/?engineType=SCA&issue=BB391E50453F1D0B3A2D5025CDD870AC&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"BB391E50453F1D0B3A2D5025CDD870AC","Without proper access control, the method deleteMessages() in MessageService.java can execute a SQL statement on line 44 that contains an attacker-controlled primary key, thereby allowing the attacker to access unauthorized records.


",High,,,"model/MessageService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2625/?engineType=SCA&issue=4E404752B3F4AE189C8875E251E17F8E&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"4E404752B3F4AE189C8875E251E17F8E","Using a <code>throw</code> statement inside a <code>finally</code> block breaks the logical progression through the <code>try-catch-finally</code>.


",Low,,,"model/MessageService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2619/?engineType=SCA&issue=47232A093A07E68AB6F61E3CEDADC8C0&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"47232A093A07E68AB6F61E3CEDADC8C0","The method getMessage() in MessageService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/MessageService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2682/?engineType=SCA&issue=85C283834AA3257C1F269A17C9949342&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"85C283834AA3257C1F269A17C9949342","The function getMessage() in MessageService.java sometimes fails to release a database resource allocated by <a href=""event:file=database/ConnectionFactory.java&amp;lineNo=112"" rel=""nofollow"">getSession()</a> on line 67.


",High,,,"model/MessageService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2811/?engineType=SCA&issue=F40AE9EDC4F5927C6DBD694EEBA01E08&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"F40AE9EDC4F5927C6DBD694EEBA01E08","On line 70 of MessageService.java, the method getMessage() invokes a SQL query built using input potentially coming from an untrusted source. This call could allow an attacker to modify the statement's meaning or to execute arbitrary SQL commands.


",Low,,,"model/MessageService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2573/?engineType=SCA&issue=0CAF4FFEBFB5003E5F16452C7D122BBE&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"0CAF4FFEBFB5003E5F16452C7D122BBE","The method validateMessage() in MessageService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/MessageService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2731/?engineType=SCA&issue=ACC5C0E040433BEDABD141C904C459DB&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"ACC5C0E040433BEDABD141C904C459DB","The method debugMessages() in MessageService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/MessageService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2745/?engineType=SCA&issue=BCFD33C604F2B1CB147E40292C7F8A13&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"BCFD33C604F2B1CB147E40292C7F8A13","The method getMessage() in MessageService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/MessageService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2776/?engineType=SCA&issue=D584CC6CB606F50CE1E13A8B37AB7E30&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"D584CC6CB606F50CE1E13A8B37AB7E30","The function getMessage() in MessageService.java sometimes fails to release a database resource allocated by <a href=""event:file=database/ConnectionFactory.java&amp;lineNo=112"" rel=""nofollow"">getSession()</a> on line 134.


",High,,,"model/MessageService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2600/?engineType=SCA&issue=2D3F043EBA74B7A6A68094B5FE2E4704&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"2D3F043EBA74B7A6A68094B5FE2E4704","On line 137 of MessageService.java, getMessage() uses Hibernate to execute a dynamic SQL statement built with input coming from an untrusted source. An attacker could modify the statement's meaning or execute arbitrary SQL commands. 


",Critical,,,"model/MessageService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3201/?engineType=WEBINSPECT&issue=4184faa8-0bdf-4aa8-9661-3796888d9200&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"4184faa8-0bdf-4aa8-9661-3796888d9200","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/pages/content/Messages.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3209/?engineType=WEBINSPECT&issue=4f760611-2506-478c-9899-230642055999&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"4f760611-2506-478c-9899-230642055999","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/pages/content/Messages.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3104/?engineType=SECURITYSCOPE&issue=6D9900CB79342748BF6076A50945E1DB&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"6D9900CB79342748BF6076A50945E1DB","<a rel=""nofollow"">null/java/privacy_violation.htm?version=2018.3.1.1</a>",High,,,"org/apache/juli/OneLineFormatter.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3110/?engineType=SECURITYSCOPE&issue=90C22DB8187845CF7E15C035B94287BB&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"90C22DB8187845CF7E15C035B94287BB","<a rel=""nofollow"">null/java/privacy_violation.htm?version=2018.3.1.1</a>",High,,,"org/apache/juli/OneLineFormatter.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3305/?engineType=WEBINSPECT&issue=a1ff69e2-649c-460d-918d-4c022e841985&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"a1ff69e2-649c-460d-918d-4c022e841985","

<i></i>
High session timeout values may allow older session identifiers to be reused by attackers. This vulnerability was scored because a timeout value greater than  minutes was detected. OWASP suggests 5 minutes for high-value applications, and 20 minutes for low-risk applications. While these are just suggestions, the exact session timeout depends on the usage and sensitivity of the application.

",High,,,"/riches/auth/AccountSummary.action/PRbjx^bxaxdacihagedaeeahifjaeRP",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3346/?engineType=WEBINSPECT&issue=c3563bab-2028-4dc7-ab03-dd1aaf468a7f&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"c3563bab-2028-4dc7-ab03-dd1aaf468a7f","

<i></i>
High session timeout values may allow older session identifiers to be reused by attackers. This vulnerability was scored because a timeout value greater than  minutes was detected. OWASP suggests 5 minutes for high-value applications, and 20 minutes for low-risk applications. While these are just suggestions, the exact session timeout depends on the usage and sensitivity of the application.

",High,,,"/riches/rwi-1.swf/PRbjx^bxaxjgjjiaeficbajaedaeRP",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3312/?engineType=WEBINSPECT&issue=a6f85b01-ab0e-4636-b6b3-c2ce0e65311a&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"a6f85b01-ab0e-4636-b6b3-c2ce0e65311a","

Most recent browsers have features that will save form field content entered by users and then automatically complete form entry the next time the fields are encountered. This feature is enabled by default and could leak sensitive information since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to ""off"" on all your forms.

",Low,,,"/riches/auth/PayBill.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3261/?engineType=WEBINSPECT&issue=7348fbee-30cb-4153-b2a3-970862a3faec&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"7348fbee-30cb-4153-b2a3-970862a3faec","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/pages/content/PayBill.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3314/?engineType=WEBINSPECT&issue=a8212e21-d640-431c-b2e8-d68e61100f5e&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"a8212e21-d640-431c-b2e8-d68e61100f5e","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/pages/content/PayBill.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3224/?engineType=WEBINSPECT&issue=5a0b2960-85fa-4c6f-b82a-b08e59e8d367&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"5a0b2960-85fa-4c6f-b82a-b08e59e8d367","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/pages/content/PerformChangePass.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3321/?engineType=WEBINSPECT&issue=ac2eb88c-5b92-453b-b9b3-d05ede791225&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"ac2eb88c-5b92-453b-b9b3-d05ede791225","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/pages/content/PerformChangePass.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3249/?engineType=WEBINSPECT&issue=693c0a49-30ed-465c-ab26-5483260107e2&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"693c0a49-30ed-465c-ab26-5483260107e2","

The WebInspect Agent has detected a potential compromise of credit card numbers. The issue arises when an application outputs credit card numbers to an external location such as the system console, file system or network.
Developers must thoroughly review logging practices employed by their web applications and ensure that private data is not part of the information being recorded. 
Various federal and state regulations require secure collection and management of private data such as credit card numbers, account or passwords. To comply with such requirements, applications must avoid storing or communicating personal information in plaintext.

",Critical,,,"/riches/auth/PerformCheck.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3291/?engineType=WEBINSPECT&issue=8ebba540-267f-49e0-8f99-34ecc95a09a7&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"8ebba540-267f-49e0-8f99-34ecc95a09a7","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/auth/PerformCheck.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3382/?engineType=WEBINSPECT&issue=eac25bb9-7009-494b-ae16-1e3ed4595f93&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"eac25bb9-7009-494b-ae16-1e3ed4595f93","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/auth/PerformCheck.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2726/?engineType=SCA&issue=A8EE83455F7402E4E4653C46E444FB12&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"A8EE83455F7402E4E4653C46E444FB12","The catch block at PerformCheck.java line 35 handles a broad swath of exceptions,  potentially trapping dissimilar issues or problems that should not be dealt with at this point in the program.


",Low,,,PerformCheck.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2755/?engineType=SCA&issue=C4BB9F599964C65F0A09B40EB8555B1F&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"C4BB9F599964C65F0A09B40EB8555B1F","The method execute() in PerformCheck.java ignores an exception on line 35, which could cause the program to overlook unexpected states and conditions.


",Low,,,PerformCheck.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3331/?engineType=WEBINSPECT&issue=b5fe9002-54ba-41d0-b078-8ecf0e3b58fa&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"b5fe9002-54ba-41d0-b078-8ecf0e3b58fa","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/pages/content/PerformCheck.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3392/?engineType=WEBINSPECT&issue=f550bf63-40d9-492c-8cf0-abbbf495f0fc&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"f550bf63-40d9-492c-8cf0-abbbf495f0fc","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/pages/content/PerformCheck.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3163/?engineType=WEBINSPECT&issue=1c0dd6f3-2b3c-4fc1-a588-f2644d807f71&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"1c0dd6f3-2b3c-4fc1-a588-f2644d807f71","

WebInspect has detected an Expression Language (EL) injection vulnerability. EL injection vulnerabilities are introduced when an application fails to sufficiently validate untrusted user data before assigning it to attribute values of certain Spring MVC JSP tags. 

Expression Language allows JSP pages to easily access application data stored in user-defined JavaBeans components as well the implicit objects. In addition, JSP pages can also invoke arbitrary public and static methods and perform arithmetic operations using EL expressions. 

By allowing attackers to inject EL expressions through insufficiently validated user input, an application could grant unauthorized access to sensitive application and server information. Expression Language injection could also let attackers bypass HTTPOnly access restrictions imposed on cookies by exploiting access to the implicit <i><b>cookie</b></i> object made available in EL expressions.

The affected spring framework versions include
<ul><li>3.0.0 to 3.0.5</li>
<li>2.5.0 to 2.5.6.SEC02 (community releases)</li>
<li>2.5.0 to 2.5.7.SR01 (subscription customers)</li>
</ul>

",High,,,"/riches/login/PerformRegistration.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3188/?engineType=WEBINSPECT&issue=35348855-1626-4f41-a0fd-0cdb8c2a64df&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"35348855-1626-4f41-a0fd-0cdb8c2a64df","

Most recent browsers have features that will save form field content entered by users and then automatically complete form entry the next time the fields are encountered. This feature is enabled by default and could leak sensitive information since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to ""off"" on all your forms.

",Low,,,"/riches/login/PerformRegistration.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3239/?engineType=WEBINSPECT&issue=662f250f-e5fd-4f35-96b6-351e7425e347&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"662f250f-e5fd-4f35-96b6-351e7425e347","

An unencrypted login form has been discovered. Any area of a web application that possibly contains sensitive information or access to privileged functionality such as remote site administration functionality should utilize SSL or another form of encryption to prevent login information from being sniffed or otherwise intercepted or stolen. If the login form is being served over SSL, the page that the form is being submitted to MUST be accessed over SSL.  Every link/URL present on that page (not just the form action) needs to be served over HTTPS. This will prevent Man-in-the-Middle attacks on the login form. Recommendations include ensuring that sensitive areas of your web application have proper encryption protocols in place to prevent login information and other data that could be helpful to an attacker from being intercepted.

",High,,,"/riches/login/PerformRegistration.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3280/?engineType=WEBINSPECT&issue=85b168c1-6e51-4193-b9bf-51b481e32dad&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"85b168c1-6e51-4193-b9bf-51b481e32dad","

WebInspect has detected an Expression Language (EL) injection vulnerability. EL injection vulnerabilities are introduced when an application fails to sufficiently validate untrusted user data before assigning it to attribute values of certain Spring MVC JSP tags. 

Expression Language allows JSP pages to easily access application data stored in user-defined JavaBeans components as well the implicit objects. In addition, JSP pages can also invoke arbitrary public and static methods and perform arithmetic operations using EL expressions. 

By allowing attackers to inject EL expressions through insufficiently validated user input, an application could grant unauthorized access to sensitive application and server information. Expression Language injection could also let attackers bypass HTTPOnly access restrictions imposed on cookies by exploiting access to the implicit <i><b>cookie</b></i> object made available in EL expressions.

The affected spring framework versions include
<ul><li>3.0.0 to 3.0.5</li>
<li>2.5.0 to 2.5.6.SEC02 (community releases)</li>
<li>2.5.0 to 2.5.7.SR01 (subscription customers)</li>
</ul>

",High,,,"/riches/login/PerformRegistration.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3326/?engineType=WEBINSPECT&issue=b1385817-5c83-40b1-a1fe-f1626cccd578&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"b1385817-5c83-40b1-a1fe-f1626cccd578","

Any area of a web application that possibly contains sensitive information or access to privileged functionality such as remote site administration functionality should utilize SSL or another form of encryption to prevent login information from being sniffed or otherwise intercepted or stolen.   ~FullURL~ has failed this policy. Recommendations include ensuring that sensitive areas of your web application have proper encryption protocols in place to prevent login information and other data that could be helpful to an attacker from being intercepted.

",High,,,"/riches/login/PerformRegistration.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2653/?engineType=SCA&issue=6E570D464B87368F0F9D6CAB1D134FCE&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"6E570D464B87368F0F9D6CAB1D134FCE","The random number generator implemented by random() cannot withstand a cryptographic attack.


",High,,,PerformRegistration.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2825/?engineType=SCA&issue=FD54E88F730C71B60F5204723852D5F5&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"FD54E88F730C71B60F5204723852D5F5","The random number generator implemented by random() cannot withstand a cryptographic attack.


",High,,,PerformRegistration.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3156/?engineType=WEBINSPECT&issue=15b59f27-6bb0-44d4-ba6d-a5bdb3239371&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"15b59f27-6bb0-44d4-ba6d-a5bdb3239371","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/login/PerformRegistration.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3307/?engineType=WEBINSPECT&issue=a4106e34-d999-48ec-9cc2-989a74b9596c&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"a4106e34-d999-48ec-9cc2-989a74b9596c","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/login/PerformRegistration.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3127/?engineType=SECURITYSCOPE&issue=EA8C3B5EE4566037DA01D5D21CFB259E&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"EA8C3B5EE4566037DA01D5D21CFB259E","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,"login/PerformRegistration.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3091/?engineType=SECURITYSCOPE&issue=51E41B5498BE739C659E44C68062D378&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"51E41B5498BE739C659E44C68062D378","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,"login/PerformRegistration.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3117/?engineType=SECURITYSCOPE&issue=C397713839457EFB4D716860D3391134&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"C397713839457EFB4D716860D3391134","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,"login/PerformRegistration.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3089/?engineType=SECURITYSCOPE&issue=41F064C713358C3F030FA7DA3BED40A9&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"41F064C713358C3F030FA7DA3BED40A9","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,"login/PerformRegistration.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3227/?engineType=WEBINSPECT&issue=5deb6550-fd9e-4d98-8e3c-4912cae145b4&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"5deb6550-fd9e-4d98-8e3c-4912cae145b4","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/auth/PerformTransfer.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3354/?engineType=WEBINSPECT&issue=cd1bc208-2116-4875-babe-6d907e343b8e&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"cd1bc208-2116-4875-babe-6d907e343b8e","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/auth/PerformTransfer.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3367/?engineType=WEBINSPECT&issue=d2ebd729-f61d-4c78-bbb2-35c7bf5dd40a&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"d2ebd729-f61d-4c78-bbb2-35c7bf5dd40a","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/auth/PerformTransfer.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2639/?engineType=SCA&issue=57DCA6D531F5A85A7875523B3F4781DF&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"57DCA6D531F5A85A7875523B3F4781DF","Hardcoded encryption keys can compromise security in a way that cannot be easily remedied.


",High,,,PerformTransfer.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2679/?engineType=SCA&issue=80C024779717C2610D20D4CEDC83F814&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"80C024779717C2610D20D4CEDC83F814","The function execute() in PerformTransfer.java uses a cryptographic encryption algorithm with an insecure mode of operation on line 46.


",Critical,,,PerformTransfer.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2603/?engineType=SCA&issue=31AEAE3AD0A93CBB3B0C03B0D06FCB99&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"31AEAE3AD0A93CBB3B0C03B0D06FCB99","The method execute() in PerformTransfer.java ignores an exception on line 49, which could cause the program to overlook unexpected states and conditions.


",Low,,,PerformTransfer.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2727/?engineType=SCA&issue=AB54B50263C91EC31A39BC60DA278340&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"AB54B50263C91EC31A39BC60DA278340","The catch block at PerformTransfer.java line 49 handles a broad swath of exceptions,  potentially trapping dissimilar issues or problems that should not be dealt with at this point in the program.


",Low,,,PerformTransfer.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2604/?engineType=SCA&issue=31AEAE3AD0A93CBB3B0C03B0D06FCB9A&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"31AEAE3AD0A93CBB3B0C03B0D06FCB9A","The method execute() in PerformTransfer.java ignores an exception on line 57, which could cause the program to overlook unexpected states and conditions.


",Low,,,PerformTransfer.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2728/?engineType=SCA&issue=AB54B50263C91EC31A39BC60DA278341&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"AB54B50263C91EC31A39BC60DA278341","The catch block at PerformTransfer.java line 57 handles a broad swath of exceptions,  potentially trapping dissimilar issues or problems that should not be dealt with at this point in the program.


",Low,,,PerformTransfer.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3196/?engineType=WEBINSPECT&issue=3cfe9371-c488-4970-9a28-438895b709d3&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"3cfe9371-c488-4970-9a28-438895b709d3","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/pages/content/PerformTransfer.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3385/?engineType=WEBINSPECT&issue=eb6e69c7-701b-43c8-bba8-d08cf2a5c52f&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"eb6e69c7-701b-43c8-bba8-d08cf2a5c52f","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/pages/content/PerformTransfer.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3148/?engineType=WEBINSPECT&issue=0d221a56-945e-4746-b38a-aa8bf1a4b471&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"0d221a56-945e-4746-b38a-aa8bf1a4b471","

An indicator of file upload capability was found.  File upload capability allows a web user to send a file from his or her computer to the webserver.  If the web application that receives the file does not carefully examine it for malicious content, an attacker may be able to use file uploads to execute arbitrary commands on the server. Recommendations include adopting a strict file upload policy that prevents malicious material from being uploaded via sanitization and filtering.

",Low,,,"/riches/auth/oper/ProfilePicture.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3254/?engineType=WEBINSPECT&issue=6ddab505-26d2-4f21-80dc-9554e6b0392e&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"6ddab505-26d2-4f21-80dc-9554e6b0392e","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/pages/content/oper/ProfilePicture.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3297/?engineType=WEBINSPECT&issue=962f2cbe-e7b1-4913-ba72-32d635eec648&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"962f2cbe-e7b1-4913-ba72-32d635eec648","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/pages/content/oper/ProfilePicture.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3075/?engineType=SECURITYSCOPE&issue=1500CB3E92F81B4337FAFFFD09052817&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"1500CB3E92F81B4337FAFFFD09052817","<a rel=""nofollow"">null/java/sql_injection.htm?version=2018.3.1.1</a>",Critical,,,"com/fortify/samples/riches/model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2574/?engineType=SCA&issue=0E1DF2DE004C630D5CC1109D215F1073&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"0E1DF2DE004C630D5CC1109D215F1073","Storing passwords or password details in plain text anywhere in the system or system code may compromise system security in a way that cannot be easily remedied.


",Low,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2696/?engineType=SCA&issue=92AE19FEEFBD7404B44ACDAECED0B641&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"92AE19FEEFBD7404B44ACDAECED0B641","The method addProfile() in ProfileService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2644/?engineType=SCA&issue=5E8FC770E027396509A40DAB38B0D646&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"5E8FC770E027396509A40DAB38B0D646","The method addProfile() in ProfileService.java mishandles confidential information, which can compromise user privacy and is often illegal.


",Critical,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2674/?engineType=SCA&issue=7AADF1F39A4E40208615F8264701C949&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"7AADF1F39A4E40208615F8264701C949","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2703/?engineType=SCA&issue=99DBEB8F48A4EA4B9FBCF7D4B00B70F6&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"99DBEB8F48A4EA4B9FBCF7D4B00B70F6","The method addProfile() in ProfileService.java mishandles confidential information, which can compromise user privacy and is often illegal.


",Critical,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2779/?engineType=SCA&issue=D6E9781369BE03EAFED60917058B1EBB&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"D6E9781369BE03EAFED60917058B1EBB","The method addProfile() in ProfileService.java mishandles confidential information, which can compromise user privacy and is often illegal.


",Critical,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2754/?engineType=SCA&issue=C4829A428004FC08C5AF7161810FB0BD&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"C4829A428004FC08C5AF7161810FB0BD","The catch block at ProfileService.java line 47 handles a broad swath of exceptions,  potentially trapping dissimilar issues or problems that should not be dealt with at this point in the program.


",Low,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2650/?engineType=SCA&issue=661041EE2BB1FBC57AB5E9BB094B1658&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"661041EE2BB1FBC57AB5E9BB094B1658","Using a <code>throw</code> statement inside a <code>finally</code> block breaks the logical progression through the <code>try-catch-finally</code>.


",Low,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2739/?engineType=SCA&issue=B79DAE2C7CEE94B357ED6A83A506CF08&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"B79DAE2C7CEE94B357ED6A83A506CF08","The method getProfile() in ProfileService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2741/?engineType=SCA&issue=B93C778F31B5C60C219589E4E981A928&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"B93C778F31B5C60C219589E4E981A928","Using a <code>throw</code> statement inside a <code>finally</code> block breaks the logical progression through the <code>try-catch-finally</code>.


",Low,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2635/?engineType=SCA&issue=540D6665CC5BC06818952D6C107701D7&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"540D6665CC5BC06818952D6C107701D7","The method getAllProfiles() in ProfileService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2725/?engineType=SCA&issue=A8CD5EBCCBBCA5F912DA1EE08A3CA5FA&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"A8CD5EBCCBBCA5F912DA1EE08A3CA5FA","Using a <code>throw</code> statement inside a <code>finally</code> block breaks the logical progression through the <code>try-catch-finally</code>.


",Low,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2590/?engineType=SCA&issue=258EC47097AFDBE54BBCAC731A719E7F&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"258EC47097AFDBE54BBCAC731A719E7F","The method getFirstname() in ProfileService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2704/?engineType=SCA&issue=9AC78FD5D82588F42AB74231857553A3&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"9AC78FD5D82588F42AB74231857553A3","Using a <code>throw</code> statement inside a <code>finally</code> block breaks the logical progression through the <code>try-catch-finally</code>.


",Low,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2668/?engineType=SCA&issue=787BC085668B6B6C4B0090CF3B89AD0F&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"787BC085668B6B6C4B0090CF3B89AD0F","The method getLastname() in ProfileService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2753/?engineType=SCA&issue=C2DC7C8E72C9D246002A71CF4F023755&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"C2DC7C8E72C9D246002A71CF4F023755","Using a <code>throw</code> statement inside a <code>finally</code> block breaks the logical progression through the <code>try-catch-finally</code>.


",Low,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2763/?engineType=SCA&issue=CAAC63A323CF46345849E9A4B4FFB0F5&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"CAAC63A323CF46345849E9A4B4FFB0F5","The method getFullname() in ProfileService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2651/?engineType=SCA&issue=692215F831437E8C6F5CB6EB20E99B53&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"692215F831437E8C6F5CB6EB20E99B53","On line 152 of ProfileService.java, the method getFullname() invokes a SQL query built using input potentially coming from an untrusted source. This call could allow an attacker to modify the statement's meaning or to execute arbitrary SQL commands.


",Low,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2589/?engineType=SCA&issue=24C2AD76E27E12BF4ACC08B5539D9BB8&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"24C2AD76E27E12BF4ACC08B5539D9BB8","Using a <code>throw</code> statement inside a <code>finally</code> block breaks the logical progression through the <code>try-catch-finally</code>.


",Low,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2713/?engineType=SCA&issue=9D046B17B62801017F2E0530357DF596&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"9D046B17B62801017F2E0530357DF596","The method getAllEmail() in ProfileService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2585/?engineType=SCA&issue=23B11ECFB546608413786BAE0F7C1400&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"23B11ECFB546608413786BAE0F7C1400","Using a <code>throw</code> statement inside a <code>finally</code> block breaks the logical progression through the <code>try-catch-finally</code>.


",Low,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2765/?engineType=SCA&issue=CDBA0B71DC3693AE1B2302817E7FCE18&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"CDBA0B71DC3693AE1B2302817E7FCE18","The method getUsername() in ProfileService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2568/?engineType=SCA&issue=06A5AA6749DFEE3E597A04C3E8A1BF10&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"06A5AA6749DFEE3E597A04C3E8A1BF10","Using a <code>throw</code> statement inside a <code>finally</code> block breaks the logical progression through the <code>try-catch-finally</code>.


",Low,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2715/?engineType=SCA&issue=9F1ADE572790BD1F33C8AB98609F7439&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"9F1ADE572790BD1F33C8AB98609F7439","The method getUsernameBySsn() in ProfileService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2670/?engineType=SCA&issue=792DB15217E05951F0B581A351AEF8E1&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"792DB15217E05951F0B581A351AEF8E1","Using a <code>throw</code> statement inside a <code>finally</code> block breaks the logical progression through the <code>try-catch-finally</code>.


",Low,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2658/?engineType=SCA&issue=703764880335BE68C103178812A57D04&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"703764880335BE68C103178812A57D04","The method IsProfileExist() in ProfileService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2577/?engineType=SCA&issue=14DEC130475B82A3C7A9A8A5771C81EE&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"14DEC130475B82A3C7A9A8A5771C81EE","On line 247 of ProfileService.java, IsProfileExist() uses Hibernate to execute a dynamic SQL statement built with input coming from an untrusted source. An attacker could modify the statement's meaning or execute arbitrary SQL commands. 


",Critical,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2621/?engineType=SCA&issue=47F504D618C7B36B300D3FA4D0195901&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"47F504D618C7B36B300D3FA4D0195901","On line 247 of ProfileService.java, IsProfileExist() uses Hibernate to execute a dynamic SQL statement built with input coming from an untrusted source. An attacker could modify the statement's meaning or execute arbitrary SQL commands. 


",Critical,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2622/?engineType=SCA&issue=49100962ECACD2C55E7425BC49E5B2DA&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"49100962ECACD2C55E7425BC49E5B2DA","On line 247 of ProfileService.java, IsProfileExist() uses Hibernate to execute a dynamic SQL statement built with input coming from an untrusted source. An attacker could modify the statement's meaning or execute arbitrary SQL commands. 


",Critical,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2641/?engineType=SCA&issue=5BEE0E0F4F29EA6DA7E69022B238638A&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"5BEE0E0F4F29EA6DA7E69022B238638A","The call to append() in ProfileService.java on line 247 appends untrusted data to a <code>StringBuilder</code> instance initialized with the default backing-array size (16). This can cause the JVM to over-consume heap memory space.


",Low,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2673/?engineType=SCA&issue=7A44B2F88F2F2364A6CAB6FA2E57476E&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"7A44B2F88F2F2364A6CAB6FA2E57476E","The call to append() in ProfileService.java on line 247 appends untrusted data to a <code>StringBuilder</code> instance initialized with the default backing-array size (16). This can cause the JVM to over-consume heap memory space.


",Low,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2785/?engineType=SCA&issue=DAF3E3602C86DD8134813B9B4309DF93&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"DAF3E3602C86DD8134813B9B4309DF93","The call to append() in ProfileService.java on line 247 appends untrusted data to a <code>StringBuilder</code> instance initialized with the default backing-array size (16). This can cause the JVM to over-consume heap memory space.


",Low,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2611/?engineType=SCA&issue=3934A4B8DE5622B53873529280C76AD4&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"3934A4B8DE5622B53873529280C76AD4","Using a <code>throw</code> statement inside a <code>finally</code> block breaks the logical progression through the <code>try-catch-finally</code>.


",Low,,,"model/ProfileService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3197/?engineType=WEBINSPECT&issue=3d26edb5-6cf3-4079-ab9a-dc278f46df90&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"3d26edb5-6cf3-4079-ab9a-dc278f46df90","

Severe vulnerabilities have been identified that would allow an attacker to remotely view the contents of files due to improper validation of input. The specific risks from exploitation depend upon the contents of the file being requested. Recommendations include adopting secure programming techniques to ensure that only expected data is accepted by an application.

",High,,,"/riches/login/Register.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3347/?engineType=WEBINSPECT&issue=c36ce31b-e7b2-40e6-a405-3ea291fa1a0d&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"c36ce31b-e7b2-40e6-a405-3ea291fa1a0d","

An unencrypted login form has been discovered. Any area of a web application that possibly contains sensitive information or access to privileged functionality such as remote site administration functionality should utilize SSL or another form of encryption to prevent login information from being sniffed or otherwise intercepted or stolen. If the login form is being served over SSL, the page that the form is being submitted to MUST be accessed over SSL.  Every link/URL present on that page (not just the form action) needs to be served over HTTPS. This will prevent Man-in-the-Middle attacks on the login form. Recommendations include ensuring that sensitive areas of your web application have proper encryption protocols in place to prevent login information and other data that could be helpful to an attacker from being intercepted.

",High,,,"/riches/login/Register.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3349/?engineType=WEBINSPECT&issue=c6e69d68-942c-463f-ab9d-e77b4a41fd20&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"c6e69d68-942c-463f-ab9d-e77b4a41fd20","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/login/Register.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3365/?engineType=WEBINSPECT&issue=d2067dce-0fff-4bee-9e7f-377b84fe8f8a&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"d2067dce-0fff-4bee-9e7f-377b84fe8f8a","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/login/Register.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3376/?engineType=WEBINSPECT&issue=e122f866-87c4-4c61-ac0e-861a13ace53d&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"e122f866-87c4-4c61-ac0e-861a13ace53d","

Any area of a web application that possibly contains sensitive information or access to privileged functionality such as remote site administration functionality should utilize SSL or another form of encryption to prevent login information from being sniffed or otherwise intercepted or stolen.   ~FullURL~ has failed this policy. Recommendations include ensuring that sensitive areas of your web application have proper encryption protocols in place to prevent login information and other data that could be helpful to an attacker from being intercepted.

",High,,,"/riches/login/Register.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3399/?engineType=WEBINSPECT&issue=f88c60f3-450b-4a9d-abb1-2936c6b0876d&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"f88c60f3-450b-4a9d-abb1-2936c6b0876d","

Most recent browsers have features that will save password field content entered by users and then automatically complete password entry the next time the field are encountered. This feature is enabled by default and could leak password since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to ""off"" on all your password fields.

Please Note: Recent versions of most browsers, as noted below, now ignore the autocomplete=""off"" attribute for password fields in html forms.  Users are allowed to decide the password policy at their own discretion using the password manager.  Although setting is ineffective on these versions of browsers, it would continue to protect website users of earlier versions of these and other browsers that support this attribute. 

Browsers NOT Supporting autocomplete=""off"": 

<ol><li>Internet Explorer version 11 or above</li>
<li>Firefox version 30 or above</li>
<li>Chrome version 34 or above</li>
<li>For other browsers, please refer to vendor specific documentation</li>
</ol>

",Low,,,"/riches/login/Register.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3403/?engineType=WEBINSPECT&issue=f966e50f-64c4-40fa-a648-76617fe3ad00&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"f966e50f-64c4-40fa-a648-76617fe3ad00","

Most recent browsers have features that will save form field content entered by users and then automatically complete form entry the next time the fields are encountered. This feature is enabled by default and could leak sensitive information since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to ""off"" on all your forms.

",Low,,,"/riches/login/Register.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3246/?engineType=WEBINSPECT&issue=67fceba1-47f0-4018-8aa2-cc538df16237&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"67fceba1-47f0-4018-8aa2-cc538df16237","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/login/Register.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3336/?engineType=WEBINSPECT&issue=b91f20b1-3c27-412a-a13f-d48bc02b820a&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"b91f20b1-3c27-412a-a13f-d48bc02b820a","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/login/Register.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3082/?engineType=SECURITYSCOPE&issue=33356A37212EB0D8463065EDFCAD65B7&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"33356A37212EB0D8463065EDFCAD65B7","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,login/Register.jsp,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3114/?engineType=SECURITYSCOPE&issue=AE262A88638752FF45EB4F3DF5FDB2C1&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"AE262A88638752FF45EB4F3DF5FDB2C1","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,login/Register.jsp,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3113/?engineType=SECURITYSCOPE&issue=A988F955D3D58C37C35ADA70B1B1DA7D&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"A988F955D3D58C37C35ADA70B1B1DA7D","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,login/Register.jsp,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3099/?engineType=SECURITYSCOPE&issue=62116309330B936D5B5D90506FE870DA&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"62116309330B936D5B5D90506FE870DA","<a rel=""nofollow"">null/java/local_file_inclusion.htm?version=2018.3.1.1</a>",Critical,,,login/Register.jsp,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3262/?engineType=WEBINSPECT&issue=749889f5-e8d8-44c2-aa90-951f531055ae&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"749889f5-e8d8-44c2-aa90-951f531055ae","

Severe vulnerabilities have been identified that would allow an attacker to remotely view the contents of files due to improper validation of input. The specific risks from exploitation depend upon the contents of the file being requested. Recommendations include adopting secure programming techniques to ensure that only expected data is accepted by an application.

",High,,,/riches/Security.action,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3390/?engineType=WEBINSPECT&issue=f2d5b010-2178-418f-9583-12b33382284d&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"f2d5b010-2178-418f-9583-12b33382284d","

A high level vulnerability was discovered in your web application due it possibly fetching and incorporating data from arbitrary URLs supplied by an attacker.  This can have multiple consequences, ranging from a Cross-Site Scripting vulnerabilities to the execution of arbitrary script code. Recommendations include implementing a design policy that requires stringent definition of the values an application will accept, and adding logic to your application that enforces domain control when accepting a full URL as a valid parameter value.

",High,,,/riches/Security.action,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3327/?engineType=WEBINSPECT&issue=b139939a-15be-4e2a-8845-69d72b59182e&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"b139939a-15be-4e2a-8845-69d72b59182e","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/pages/content/Security.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3339/?engineType=WEBINSPECT&issue=bc39aaf2-0320-4149-b9a2-e309d8a26477&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"bc39aaf2-0320-4149-b9a2-e309d8a26477","

A high level vulnerability was discovered in your web application due it possibly fetching and incorporating data from arbitrary URLs supplied by an attacker.  This can have multiple consequences, ranging from a Cross-Site Scripting vulnerabilities to the execution of arbitrary script code. Recommendations include implementing a design policy that requires stringent definition of the values an application will accept, and adding logic to your application that enforces domain control when accepting a full URL as a valid parameter value.

",High,,,"/riches/pages/content/Security.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3393/?engineType=WEBINSPECT&issue=f61f2e94-83c3-4f2c-942a-43fa818a6989&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"f61f2e94-83c3-4f2c-942a-43fa818a6989","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/pages/content/Security.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3397/?engineType=WEBINSPECT&issue=f80dccef-7f97-45d7-a178-cd63e1e8ee3a&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"f80dccef-7f97-45d7-a178-cd63e1e8ee3a","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/pages/content/Security.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3073/?engineType=SECURITYSCOPE&issue=0C930E7C7DF48AA0C6903389407F506D&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"0C930E7C7DF48AA0C6903389407F506D","<a rel=""nofollow"">null/java/local_file_inclusion.htm?version=2018.3.1.1</a>",Critical,,,"pages/content/Security.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3124/?engineType=SECURITYSCOPE&issue=D7F7E668A440D387955170A781D8676B&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"D7F7E668A440D387955170A781D8676B","<a rel=""nofollow"">null/java/remote_file_inclusion.htm?version=2018.3.1.1</a>",Critical,,,"pages/content/Security.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2802/?engineType=SCA&issue=E9F9DAB6A6D8A5F0243DE536F9A4537E&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"E9F9DAB6A6D8A5F0243DE536F9A4537E","The function () in SendMail.java sometimes fails to release a system resource allocated by FileInputStream() on line 23.


",High,,,"legacy/mail/SendMail.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2724/?engineType=SCA&issue=A7257D3AE874E899ABC7585DF8D73D24&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"A7257D3AE874E899ABC7585DF8D73D24","The function () in SendMail.java might reveal system data or debugging information by calling printStackTrace() on line 32. The information revealed by printStackTrace() could help an adversary form a plan of attack.


",Low,,,"legacy/mail/SendMail.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2616/?engineType=SCA&issue=44B4F756ABA9F608B9DCBA52F8BA6928&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"44B4F756ABA9F608B9DCBA52F8BA6928","The class SendMail contains debug code, which can create unintended entry points in a deployed web application.


",Low,,,"legacy/mail/SendMail.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2598/?engineType=SCA&issue=2BE10493E4FCBC55CB0440536EAFF18F&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"2BE10493E4FCBC55CB0440536EAFF18F","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,"legacy/mail/SendMail.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2794/?engineType=SCA&issue=E2330007A97C39BE648ABDFA0916EACD&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"E2330007A97C39BE648ABDFA0916EACD","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,oper/SendMessage.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2766/?engineType=SCA&issue=CEF59D01681F3F5A97A932E20E15C135&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"CEF59D01681F3F5A97A932E20E15C135","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,oper/SendMessage.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2633/?engineType=SCA&issue=53EB7325AE5CA0159286B8E6B531C615&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"53EB7325AE5CA0159286B8E6B531C615","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,oper/SendMessage.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2693/?engineType=SCA&issue=91B58786AD1EF1DDC6AA145A49641FCD&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"91B58786AD1EF1DDC6AA145A49641FCD","The function sendMail() in SendMessage.java might reveal system data or debugging information by calling println() on line 77. The information revealed by println() could help an adversary form a plan of attack.


",Low,,,oper/SendMessage.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2694/?engineType=SCA&issue=91B58786AD1EF1DDC6AA145A49641FCE&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"91B58786AD1EF1DDC6AA145A49641FCE","The function sendMail() in SendMessage.java might reveal system data or debugging information by calling println() on line 77. The information revealed by println() could help an adversary form a plan of attack.


",Low,,,oper/SendMessage.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2782/?engineType=SCA&issue=D9AB9151306341C65DFEB474784D185D&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"D9AB9151306341C65DFEB474784D185D","The function sendMail() in SendMessage.java might reveal system data or debugging information by calling println() on line 77. The information revealed by println() could help an adversary form a plan of attack.


",Low,,,oper/SendMessage.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2783/?engineType=SCA&issue=D9AB9151306341C65DFEB474784D185E&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"D9AB9151306341C65DFEB474784D185E","The function sendMail() in SendMessage.java might reveal system data or debugging information by calling println() on line 77. The information revealed by println() could help an adversary form a plan of attack.


",Low,,,oper/SendMessage.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2812/?engineType=SCA&issue=F470B30FC974A01416153C62492C0ADD&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"F470B30FC974A01416153C62492C0ADD","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,oper/SendMessage.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2697/?engineType=SCA&issue=938FE8C9CDF9AAE08B9813722B18DFA7&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"938FE8C9CDF9AAE08B9813722B18DFA7","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,oper/SendMessage.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2711/?engineType=SCA&issue=9CB1F51CDA3D2636E8C1C599E376D494&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"9CB1F51CDA3D2636E8C1C599E376D494","The method sendMail() in SendMessage.java calls exec() with a command built from untrusted data. This call can cause the program to execute malicious commands on behalf of an attacker.


",Critical,,,oper/SendMessage.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2712/?engineType=SCA&issue=9CB1F51CDA3D2636E8C1C599E376D495&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"9CB1F51CDA3D2636E8C1C599E376D495","The method sendMail() in SendMessage.java calls exec() with a command built from untrusted data. This call can cause the program to execute malicious commands on behalf of an attacker.


",Critical,,,oper/SendMessage.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2804/?engineType=SCA&issue=EC900FC8F8B0EA6F2E270DE218713051&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"EC900FC8F8B0EA6F2E270DE218713051","The method sendMail() in SendMessage.java calls exec() with a command built from untrusted data. This call can cause the program to execute malicious commands on behalf of an attacker.


",Critical,,,oper/SendMessage.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2805/?engineType=SCA&issue=EC900FC8F8B0EA6F2E270DE218713052&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"EC900FC8F8B0EA6F2E270DE218713052","The method sendMail() in SendMessage.java calls exec() with a command built from untrusted data. This call can cause the program to execute malicious commands on behalf of an attacker.


",Critical,,,oper/SendMessage.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2564/?engineType=SCA&issue=035D9B7D0D34B5609E7A8D67CE3DC57F&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"035D9B7D0D34B5609E7A8D67CE3DC57F","The catch block at SendMessage.java line 92 handles a broad swath of exceptions,  potentially trapping dissimilar issues or problems that should not be dealt with at this point in the program.


",Low,,,oper/SendMessage.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2637/?engineType=SCA&issue=554E03C416E18686A6640840477BC725&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"554E03C416E18686A6640840477BC725","The function sendMail() in SendMessage.java might reveal system data or debugging information by calling printStackTrace() on line 94. The information revealed by printStackTrace() could help an adversary form a plan of attack.


",Low,,,oper/SendMessage.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2701/?engineType=SCA&issue=987D6D81A7D405EA63B218396F6D770F&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"987D6D81A7D405EA63B218396F6D770F","The function sendMail() in SendMessage.java might reveal system data or debugging information by calling println() on line 95. The information revealed by println() could help an adversary form a plan of attack.


",Low,,,oper/SendMessage.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2751/?engineType=SCA&issue=C0AF4460CB616C8FE857DC08D31C2039&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"C0AF4460CB616C8FE857DC08D31C2039","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,oper/SendMessage.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2678/?engineType=SCA&issue=800E668A1DD8814BB909DEC920A3FF8F&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"800E668A1DD8814BB909DEC920A3FF8F","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,oper/SendMessage.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2803/?engineType=SCA&issue=EC1C1DC569925F8CC5FE94D1BEA3DE0D&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"EC1C1DC569925F8CC5FE94D1BEA3DE0D","The function sendMail() in SendMessage.java might reveal system data or debugging information by calling println() on line 96. The information revealed by println() could help an adversary form a plan of attack.


",Low,,,oper/SendMessage.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2648/?engineType=SCA&issue=62F22D9AF3313DD3381050EBFC4D3918&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"62F22D9AF3313DD3381050EBFC4D3918","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,oper/SendMessage.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2732/?engineType=SCA&issue=B14CF351AE0787D45081278F1897927A&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"B14CF351AE0787D45081278F1897927A","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,oper/SendMessage.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2685/?engineType=SCA&issue=8A3E6A43CED48E47E50580CB96739637&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"8A3E6A43CED48E47E50580CB96739637","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,oper/SendMessage.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2572/?engineType=SCA&issue=0C91EEE48CBF3CA3B58D239C4BE42696&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"0C91EEE48CBF3CA3B58D239C4BE42696","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,oper/SendMessage.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2747/?engineType=SCA&issue=BE537DE4C9C32576678DB5EA0A028135&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"BE537DE4C9C32576678DB5EA0A028135","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,oper/SendMessage.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2683/?engineType=SCA&issue=85F3AF37C4F0338626920003ED63EE27&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"85F3AF37C4F0338626920003ED63EE27","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,oper/SendMessage.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2587/?engineType=SCA&issue=23E2D1349161F70FB2246CDADE365286&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"23E2D1349161F70FB2246CDADE365286","The catch block at SendMessage.java line 124 handles a broad swath of exceptions,  potentially trapping dissimilar issues or problems that should not be dealt with at this point in the program.


",Low,,,oper/SendMessage.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2813/?engineType=SCA&issue=F530CCCF0508821BF79787E639D13D6E&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"F530CCCF0508821BF79787E639D13D6E","The function updateMail() in SendMessage.java might reveal system data or debugging information by calling printStackTrace() on line 126. The information revealed by printStackTrace() could help an adversary form a plan of attack.


",Low,,,oper/SendMessage.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3142/?engineType=WEBINSPECT&issue=0a894374-b8c9-4327-8999-91b1c8645404&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"0a894374-b8c9-4327-8999-91b1c8645404","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/pages/content/oper/SendMessage.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3230/?engineType=WEBINSPECT&issue=5fc91487-5cea-4901-99ce-179c22ed1407&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"5fc91487-5cea-4901-99ce-179c22ed1407","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/pages/content/oper/SendMessage.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2707/?engineType=SCA&issue=9BF1CF0EB53D5865FA2AD17F694E4A85&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"9BF1CF0EB53D5865FA2AD17F694E4A85","The method sendMail() in SendNewsletter.java calls exec() with a command built from untrusted data. This call can cause the program to execute malicious commands on behalf of an attacker.


",Critical,,,oper/SendNewsletter.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2708/?engineType=SCA&issue=9BF1CF0EB53D5865FA2AD17F694E4A86&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"9BF1CF0EB53D5865FA2AD17F694E4A86","The method sendMail() in SendNewsletter.java calls exec() with a command built from untrusted data. This call can cause the program to execute malicious commands on behalf of an attacker.


",Critical,,,oper/SendNewsletter.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2817/?engineType=SCA&issue=F7C1C0E250FF45AF4D51B5E8203005B8&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"F7C1C0E250FF45AF4D51B5E8203005B8","The method sendMail() in SendNewsletter.java calls exec() with a command built from untrusted data. This call can cause the program to execute malicious commands on behalf of an attacker.


",Critical,,,oper/SendNewsletter.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2818/?engineType=SCA&issue=F7C1C0E250FF45AF4D51B5E8203005B9&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"F7C1C0E250FF45AF4D51B5E8203005B9","The method sendMail() in SendNewsletter.java calls exec() with a command built from untrusted data. This call can cause the program to execute malicious commands on behalf of an attacker.


",Critical,,,oper/SendNewsletter.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2654/?engineType=SCA&issue=6E9B524D3D361FAA138A591A3EC15FFD&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"6E9B524D3D361FAA138A591A3EC15FFD","The function sendMail() in SendNewsletter.java might reveal system data or debugging information by calling println() on line 62. The information revealed by println() could help an adversary form a plan of attack.


",Low,,,oper/SendNewsletter.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2655/?engineType=SCA&issue=6E9B524D3D361FAA138A591A3EC15FFE&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"6E9B524D3D361FAA138A591A3EC15FFE","The function sendMail() in SendNewsletter.java might reveal system data or debugging information by calling println() on line 62. The information revealed by println() could help an adversary form a plan of attack.


",Low,,,oper/SendNewsletter.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2792/?engineType=SCA&issue=E195484BEBFD4B0AC907B58E82B5E87A&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"E195484BEBFD4B0AC907B58E82B5E87A","The function sendMail() in SendNewsletter.java might reveal system data or debugging information by calling println() on line 62. The information revealed by println() could help an adversary form a plan of attack.


",Low,,,oper/SendNewsletter.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2793/?engineType=SCA&issue=E195484BEBFD4B0AC907B58E82B5E87B&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"E195484BEBFD4B0AC907B58E82B5E87B","The function sendMail() in SendNewsletter.java might reveal system data or debugging information by calling println() on line 62. The information revealed by println() could help an adversary form a plan of attack.


",Low,,,oper/SendNewsletter.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2808/?engineType=SCA&issue=F2567A6DA588EA228661916427DF25B0&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"F2567A6DA588EA228661916427DF25B0","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,oper/SendNewsletter.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2591/?engineType=SCA&issue=266705C0F791E3B00E931F465C2CD1C5&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"266705C0F791E3B00E931F465C2CD1C5","The catch block at SendNewsletter.java line 72 handles a broad swath of exceptions,  potentially trapping dissimilar issues or problems that should not be dealt with at this point in the program.


",Low,,,oper/SendNewsletter.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2684/?engineType=SCA&issue=88889F0D514CEDEADDFEA1B1B6CB763C&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"88889F0D514CEDEADDFEA1B1B6CB763C","The function sendMail() in SendNewsletter.java might reveal system data or debugging information by calling printStackTrace() on line 74. The information revealed by printStackTrace() could help an adversary form a plan of attack.


",Low,,,oper/SendNewsletter.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2722/?engineType=SCA&issue=A67BA8DE3AB03DB948754868F3BE63D8&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"A67BA8DE3AB03DB948754868F3BE63D8","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,oper/SendNewsletter.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2578/?engineType=SCA&issue=15AE09CC4C0B9229DB2D02505C7213A3&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"15AE09CC4C0B9229DB2D02505C7213A3","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,oper/SendNewsletter.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2614/?engineType=SCA&issue=3D5DC515CEE10904742F5A88FA3AB3BC&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"3D5DC515CEE10904742F5A88FA3AB3BC","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,oper/SendNewsletter.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2767/?engineType=SCA&issue=CF07354C749898AB2A4E2FDB786A498F&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"CF07354C749898AB2A4E2FDB786A498F","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,oper/SendNewsletter.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2667/?engineType=SCA&issue=7860CA185DB80EF94B6444FE2565074C&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"7860CA185DB80EF94B6444FE2565074C","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,oper/SendNewsletter.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2816/?engineType=SCA&issue=F749CF50775242C4289FB0B4E907AC22&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"F749CF50775242C4289FB0B4E907AC22","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,oper/SendNewsletter.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2643/?engineType=SCA&issue=5D670A9CC0956931FDC5E8E8700B49B7&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"5D670A9CC0956931FDC5E8E8700B49B7","The catch block at SendNewsletter.java line 107 handles a broad swath of exceptions,  potentially trapping dissimilar issues or problems that should not be dealt with at this point in the program.


",Low,,,oper/SendNewsletter.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2575/?engineType=SCA&issue=13806A8F29ABE7942E8202DF0CEE6047&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"13806A8F29ABE7942E8202DF0CEE6047","The function updateMail() in SendNewsletter.java might reveal system data or debugging information by calling printStackTrace() on line 109. The information revealed by printStackTrace() could help an adversary form a plan of attack.


",Low,,,oper/SendNewsletter.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3269/?engineType=WEBINSPECT&issue=7822f022-cc84-4f9f-b1e5-93cb28daaf8e&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"7822f022-cc84-4f9f-b1e5-93cb28daaf8e","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/pages/content/oper/SendNewsletter.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3353/?engineType=WEBINSPECT&issue=cd11223e-3c33-454e-a40d-2d430444affd&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"cd11223e-3c33-454e-a40d-2d430444affd","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/pages/content/oper/SendNewsletter.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3139/?engineType=WEBINSPECT&issue=08df7b99-f831-46da-89a8-09a4ce81006c&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"08df7b99-f831-46da-89a8-09a4ce81006c","

Critical SQL Injection vulnerabilities have been identified in the web application. SQL injection is a method of attack where an attacker can exploit vulnerable code and the type of data an application will accept, and can be exploited in any application parameter that influences a database query. Examples include parameters within the url itself, post data, or cookie values. If successful, SQL Injection can give an attacker access to backend database contents, the ability to remotely execute system commands, or in some circumstances the means to take control of the server hosting the database. Recommendations include employing a layered approach to security that includes utilizing parameterized queries when accepting user input, ensuring that only expected data is accepted by an application, and hardening the database server to prevent data from being accessed inappropriately.

",Critical,,,"/riches/ShowLocations.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3166/?engineType=WEBINSPECT&issue=21ee0b92-61b9-48df-a01e-d9b2125eed11&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"21ee0b92-61b9-48df-a01e-d9b2125eed11","

Critical SQL Injection vulnerabilities have been identified in the web application. SQL injection is a method of attack where an attacker can exploit vulnerable code and the type of data an application will accept, and can be exploited in any application parameter that influences a database query. Examples include parameters within the url itself, post data, or cookie values. If successful, SQL Injection can give an attacker access to backend database contents, the ability to remotely execute system commands, or in some circumstances the means to take control of the server hosting the database. Recommendations include employing a layered approach to security that includes utilizing parameterized queries when accepting user input, ensuring that only expected data is accepted by an application, and hardening the database server to prevent data from being accessed inappropriately.

",Critical,,,"/riches/ShowLocations.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3169/?engineType=WEBINSPECT&issue=24e0bea4-1ae6-4c35-a4fa-c6b5c58ced3c&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"24e0bea4-1ae6-4c35-a4fa-c6b5c58ced3c","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/ShowLocations.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3204/?engineType=WEBINSPECT&issue=474f9f3e-899d-4f96-a7a0-9778a12a3d65&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"474f9f3e-899d-4f96-a7a0-9778a12a3d65","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/ShowLocations.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3268/?engineType=WEBINSPECT&issue=77d781f1-896b-4daa-8250-e2e96af47cf6&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"77d781f1-896b-4daa-8250-e2e96af47cf6","

Critical SQL Injection vulnerabilities have been identified in the web application. SQL injection is a method of attack where an attacker can exploit vulnerable code and the type of data an application will accept, and can be exploited in any application parameter that influences a database query. Examples include parameters within the url itself, post data, or cookie values. If successful, SQL Injection can give an attacker access to backend database contents, the ability to remotely execute system commands, or in some circumstances the means to take control of the server hosting the database. Recommendations include employing a layered approach to security that includes utilizing parameterized queries when accepting user input, ensuring that only expected data is accepted by an application, and hardening the database server to prevent data from being accessed inappropriately.

",Critical,,,"/riches/ShowLocations.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3275/?engineType=WEBINSPECT&issue=7f40373c-e96f-40a6-a5ff-26d7b980d803&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"7f40373c-e96f-40a6-a5ff-26d7b980d803","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/ShowLocations.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3301/?engineType=WEBINSPECT&issue=9d49a054-892c-4158-b2d9-f8abab9facf9&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"9d49a054-892c-4158-b2d9-f8abab9facf9","

Most recent browsers have features that will save form field content entered by users and then automatically complete form entry the next time the fields are encountered. This feature is enabled by default and could leak sensitive information since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to ""off"" on all your forms.

",Low,,,"/riches/ShowLocations.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3362/?engineType=WEBINSPECT&issue=d103d256-30e2-46f6-8e72-293b41c5c6c2&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"d103d256-30e2-46f6-8e72-293b41c5c6c2","

Critical SQL Injection vulnerabilities have been identified in the web application. SQL injection is a method of attack where an attacker can exploit vulnerable code and the type of data an application will accept, and can be exploited in any application parameter that influences a database query. Examples include parameters within the url itself, post data, or cookie values. If successful, SQL Injection can give an attacker access to backend database contents, the ability to remotely execute system commands, or in some circumstances the means to take control of the server hosting the database. Recommendations include employing a layered approach to security that includes utilizing parameterized queries when accepting user input, ensuring that only expected data is accepted by an application, and hardening the database server to prevent data from being accessed inappropriately.

",Critical,,,"/riches/ShowLocations.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3395/?engineType=WEBINSPECT&issue=f6b7fb0a-e5dc-46b3-8d02-29c42c3fc0fa&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"f6b7fb0a-e5dc-46b3-8d02-29c42c3fc0fa","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/ShowLocations.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3141/?engineType=WEBINSPECT&issue=0a88f7eb-bd32-4457-ae55-093c1d339481&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"0a88f7eb-bd32-4457-ae55-093c1d339481","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/pages/content/ShowLocations.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3306/?engineType=WEBINSPECT&issue=a3ddc355-1606-4b36-b0a8-0879656bff6c&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"a3ddc355-1606-4b36-b0a8-0879656bff6c","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/pages/content/ShowLocations.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2642/?engineType=SCA&issue=5C96CE2AB4A4C7D6686CEA9F3B8407E5&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"5C96CE2AB4A4C7D6686CEA9F3B8407E5","The method GetTransactions() in TransactionResources.java sends unvalidated data to a web browser on line 112, which can result in the browser executing malicious code.


",Critical,,,"restful/TransactionResources.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2773/?engineType=SCA&issue=D30837C104CA58B3DF6F5CED83302262&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"D30837C104CA58B3DF6F5CED83302262","The call to append() in TransactionResources.java on line 112 appends untrusted data to a <code>StringBuilder</code> instance initialized with the default backing-array size (16). This can cause the JVM to over-consume heap memory space.


",Low,,,"restful/TransactionResources.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2787/?engineType=SCA&issue=DC0DC720F59839D5FFC344370A0F1D05&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"DC0DC720F59839D5FFC344370A0F1D05","The method GetTransactions() in TransactionResources.java sends unvalidated data to a web browser on line 118, which can result in the browser executing malicious code.


",Critical,,,"restful/TransactionResources.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3088/?engineType=SECURITYSCOPE&issue=41C00F39101FB5DF90C0B0E81B321CE7&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"41C00F39101FB5DF90C0B0E81B321CE7","<a rel=""nofollow"">null/java/sql_injection.htm?version=2018.3.1.1</a>",Critical,,,"com/fortify/samples/riches/model/TransactionService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2698/?engineType=SCA&issue=93E9130EDEDAA2B93CCBF8B04DF7FA39&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"93E9130EDEDAA2B93CCBF8B04DF7FA39","The method getTransactions() in TransactionService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/TransactionService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2762/?engineType=SCA&issue=C8ECA66DDA5E62EEF36AE789CB8B1484&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"C8ECA66DDA5E62EEF36AE789CB8B1484","On line 43 of TransactionService.java, the method getTransactions() invokes a SQL query built using input potentially coming from an untrusted source. This call could allow an attacker to modify the statement's meaning or to execute arbitrary SQL commands.


",Low,,,"model/TransactionService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2571/?engineType=SCA&issue=0A925ACDF1AF6D491F23EEBB39CD8A8E&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"0A925ACDF1AF6D491F23EEBB39CD8A8E","The method getTransactionsDebug() in TransactionService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/TransactionService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2759/?engineType=SCA&issue=C6C9094F8B586175036FC4421493DA85&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"C6C9094F8B586175036FC4421493DA85","The function getTransactionsDebug() in TransactionService.java sometimes fails to release a database resource allocated by <a href=""event:file=database/ConnectionFactory.java&amp;lineNo=112"" rel=""nofollow"">getSession()</a> on line 59.


",High,,,"model/TransactionService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2717/?engineType=SCA&issue=A021ED0DAA9FCBC9AD03709BE16D3D22&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"A021ED0DAA9FCBC9AD03709BE16D3D22","On line 62 of TransactionService.java, the method getTransactionsDebug() invokes a SQL query built using input potentially coming from an untrusted source. This call could allow an attacker to modify the statement's meaning or to execute arbitrary SQL commands.


",Low,,,"model/TransactionService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2647/?engineType=SCA&issue=618968FDC548B857BD26F7F2BD265716&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"618968FDC548B857BD26F7F2BD265716","The method getTransactions() in TransactionService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/TransactionService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2761/?engineType=SCA&issue=C8ECA66DDA5E62EEF36AE789CB8B1483&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"C8ECA66DDA5E62EEF36AE789CB8B1483","On line 79 of TransactionService.java, the method getTransactions() invokes a SQL query built using input potentially coming from an untrusted source. This call could allow an attacker to modify the statement's meaning or to execute arbitrary SQL commands.


",Low,,,"model/TransactionService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2688/?engineType=SCA&issue=8BF122E4F1B01A9AB2041297DFF77D07&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"8BF122E4F1B01A9AB2041297DFF77D07","The method debugTransactions() in TransactionService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/TransactionService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2583/?engineType=SCA&issue=1B9A7F79ED5DF3AAB5A6DEC33C7392DE&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"1B9A7F79ED5DF3AAB5A6DEC33C7392DE","The method debugTransactions() in TransactionService.java writes unvalidated user input to the log on line 113. An attacker could take advantage of this behavior to forge log entries or inject malicious content into the log.


",High,,,"model/TransactionService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2565/?engineType=SCA&issue=03AD58186B2DE5F389E6E77F13D8F266&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"03AD58186B2DE5F389E6E77F13D8F266","The catch block at TransactionService.java line 128 handles a broad swath of exceptions,  potentially trapping dissimilar issues or problems that should not be dealt with at this point in the program.


",Low,,,"model/TransactionService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2605/?engineType=SCA&issue=32B4D6A63D261CF37EAA6E0F790F9FDF&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"32B4D6A63D261CF37EAA6E0F790F9FDF","The function addTransaction() in TransactionService.java might reveal system data or debugging information by calling printStackTrace() on line 130. The information revealed by printStackTrace() could help an adversary form a plan of attack.


",Low,,,"model/TransactionService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2742/?engineType=SCA&issue=B9DABE3466156E3558F0E51736A7209F&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"B9DABE3466156E3558F0E51736A7209F","The method getTransactions() in TransactionService.java throws a generic exception making it harder for callers to do a good job of error handling and recovery.


",Low,,,"model/TransactionService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2580/?engineType=SCA&issue=179EFD0F214AD399CB71ECAF3EDCA5D3&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"179EFD0F214AD399CB71ECAF3EDCA5D3","The method getTransactions() in TransactionService.java writes unvalidated user input to the log on line 163. An attacker could take advantage of this behavior to forge log entries or inject malicious content into the log.


",High,,,"model/TransactionService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2664/?engineType=SCA&issue=7332D96EC0F576222D5D7A39E7D8FC07&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"7332D96EC0F576222D5D7A39E7D8FC07","The method getTransactions() in TransactionService.java writes unvalidated user input to the log on line 163. An attacker could take advantage of this behavior to forge log entries or inject malicious content into the log.


",High,,,"model/TransactionService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2672/?engineType=SCA&issue=79D2C2C2E585492351AC3904E0092879&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"79D2C2C2E585492351AC3904E0092879","The method getTransactions() in TransactionService.java writes unvalidated user input to the log on line 163. An attacker could take advantage of this behavior to forge log entries or inject malicious content into the log.


",High,,,"model/TransactionService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2689/?engineType=SCA&issue=8C51D46D51169964952F4F8185CE5854&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"8C51D46D51169964952F4F8185CE5854","The method getTransactions() in TransactionService.java writes unvalidated user input to the log on line 163. An attacker could take advantage of this behavior to forge log entries or inject malicious content into the log.


",High,,,"model/TransactionService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2757/?engineType=SCA&issue=C5ACD2773302A509D253298E2154D27B&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"C5ACD2773302A509D253298E2154D27B","The method getTransactions() in TransactionService.java writes unvalidated user input to the log on line 163. An attacker could take advantage of this behavior to forge log entries or inject malicious content into the log.


",High,,,"model/TransactionService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2602/?engineType=SCA&issue=2F54711C78E2CB0846DE4B38CA44E614&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"2F54711C78E2CB0846DE4B38CA44E614","On line 164 of TransactionService.java, getTransactions() uses Hibernate to execute a dynamic SQL statement built with input coming from an untrusted source. An attacker could modify the statement's meaning or execute arbitrary SQL commands. 


",Critical,,,"model/TransactionService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2677/?engineType=SCA&issue=7F96465BE2487C1FDD7D1E0383BB1D04&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"7F96465BE2487C1FDD7D1E0383BB1D04","On line 164 of TransactionService.java, getTransactions() uses Hibernate to execute a dynamic SQL statement built with input coming from an untrusted source. An attacker could modify the statement's meaning or execute arbitrary SQL commands. 


",Critical,,,"model/TransactionService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2775/?engineType=SCA&issue=D53853E2A9E0E54B55976853423BD8F8&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"D53853E2A9E0E54B55976853423BD8F8","On line 164 of TransactionService.java, getTransactions() uses Hibernate to execute a dynamic SQL statement built with input coming from an untrusted source. An attacker could modify the statement's meaning or execute arbitrary SQL commands. 


",Critical,,,"model/TransactionService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2777/?engineType=SCA&issue=D661871A0BA680B15755AAA45F377C40&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"D661871A0BA680B15755AAA45F377C40","On line 164 of TransactionService.java, getTransactions() uses Hibernate to execute a dynamic SQL statement built with input coming from an untrusted source. An attacker could modify the statement's meaning or execute arbitrary SQL commands. 


",Critical,,,"model/TransactionService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2788/?engineType=SCA&issue=DC781B74BFAAB91E126CBDB178B7E154&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"DC781B74BFAAB91E126CBDB178B7E154","On line 164 of TransactionService.java, getTransactions() uses Hibernate to execute a dynamic SQL statement built with input coming from an untrusted source. An attacker could modify the statement's meaning or execute arbitrary SQL commands. 


",Critical,,,"model/TransactionService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2778/?engineType=SCA&issue=D6D0858F2C10F059AEB34165FD77D612&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"D6D0858F2C10F059AEB34165FD77D612","Without proper access control, the method getTransactions() in TransactionService.java can execute a SQL statement on line 167 that contains an attacker-controlled primary key, thereby allowing the attacker to access unauthorized records.


",Low,,,"model/TransactionService.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3282/?engineType=WEBINSPECT&issue=86769f1f-b11f-409f-831d-8c5f2be43729&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"86769f1f-b11f-409f-831d-8c5f2be43729","

Most recent browsers have features that will save form field content entered by users and then automatically complete form entry the next time the fields are encountered. This feature is enabled by default and could leak sensitive information since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to ""off"" on all your forms.

",Low,,,"/riches/auth/Transfer.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3162/?engineType=WEBINSPECT&issue=1b26a240-9cb0-4b85-aa71-8ccce2f35892&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"1b26a240-9cb0-4b85-aa71-8ccce2f35892","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/pages/content/Transfer.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3377/?engineType=WEBINSPECT&issue=e506b680-b008-4fd6-a938-a5326852a18a&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"e506b680-b008-4fd6-a938-a5326852a18a","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/pages/content/Transfer.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3172/?engineType=WEBINSPECT&issue=28787480-b677-435a-b1ea-38e4ccf01805&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"28787480-b677-435a-b1ea-38e4ccf01805","

Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. User interaction vulnerabilities such as this one require the user to trigger the execution of the malicious scripts via an action such as clicking a link or moving the mouse pointer over text. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/auth/oper/UploadProfilePicture.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3192/?engineType=WEBINSPECT&issue=3855f49b-c10b-4201-b001-f1566bd5a57c&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"3855f49b-c10b-4201-b001-f1566bd5a57c","

An arbitrary file upload vulnerability has been detected.  Arbitrary  file upload vulerabilities could give an attacker the ability to add or replace system and web files and run code in context of the web server process. Recommendations include properly sanitizing user supplied input.

",High,,,"/riches/auth/oper/UploadProfilePicture.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3206/?engineType=WEBINSPECT&issue=4be5b5d6-5baa-4d16-b4c4-6edeb006fa35&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"4be5b5d6-5baa-4d16-b4c4-6edeb006fa35","

Permitting users to upload files may allow attackers to inject dangerous content or malicious code to run on the server.  

WebInspect has succesfully uploaded a file to the server.

WebInspect has successfully uploaded  <b></b> to the server at: 

<b></b>

<b><i>NOTES:

<ul><li></li>
<li>The file  was uploaded to the server by WebInspect as part of the Dangerous File Upload check. Please locate and remove the file from the server once testing is complete.</li>
<li>The check accepts three check inputs to analyze the application response.  These check inputs are user configurable.  The check inputs allow the check to be customized per application and help improve the check accuracy.  If this result appears to be a false positive (or the scan is a suspect of false negatives for this vulnerability)  please consider configuring one or more of the available check inputs to get more accurate results.</li>
</ul>
</i></b>

",High,,,"/riches/auth/oper/UploadProfilePicture.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3208/?engineType=WEBINSPECT&issue=4f2acf07-b36b-48bf-ba7c-e0ca6ee8be0b&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"4f2acf07-b36b-48bf-ba7c-e0ca6ee8be0b","

Potentially severe vulnerabilities have been identified that could possibly allow an attacker to remotely view the contents of files due to improper validation of input.  The application produces error messages that indicates a local file inclusion/reading vulnerability may exist, but  was not able to exploit it to confirm the vulnerability.  The specific risks from exploitation depend upon the contents of the file being requested. Recommendations include adopting secure programming techniques to ensure that only expected data is accepted by an application.

",High,,,"/riches/auth/oper/UploadProfilePicture.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3351/?engineType=WEBINSPECT&issue=cacc4006-5277-49ae-abdf-0d4389264436&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"cacc4006-5277-49ae-abdf-0d4389264436","

Permitting users to upload files may allow attackers to inject dangerous content or malicious code to run on the server.

WebInspect has detected file upload capabilities on this server.

As part of the Dangerous File Upload check, WebInspect may have uploaded multiple files to the server.   All files uploaded as part of this test have filenames in the format WebInspect_ccccc_File_nn.extension  

Where:
ccccc = WebInspect Check ID Number 
nn = Unique random number

Please locate and delete these files on the server after testing is completed.

",Low,,,"/riches/auth/oper/UploadProfilePicture.action",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3084/?engineType=SECURITYSCOPE&issue=3AF7F45DCC6048AB36F0EFB891244392&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"3AF7F45DCC6048AB36F0EFB891244392","<a rel=""nofollow"">null/java/arbitrary_file_upload.htm?version=2018.3.1.1</a>",Critical,,,"com/fortify/samples/riches/oper/UploadProfilePicture.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2601/?engineType=SCA&issue=2D435C9CAC708EEF162EAB82D04EA154&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"2D435C9CAC708EEF162EAB82D04EA154","The setter in UploadProfilePicture.java at line 26 is used by the Struts framework to set uploaded files. Permitting users to upload files can allow attackers to inject dangerous content or malicious code to run on the server.


",Medium,,,"oper/UploadProfilePicture.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2593/?engineType=SCA&issue=277A9F0ECBEE7F8B8238C19E9F7859F7&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"277A9F0ECBEE7F8B8238C19E9F7859F7","Attackers are able to control the file system path argument to File() at UploadProfilePicture.java line 47, which allows them to access or modify otherwise protected files.


",Critical,,,"oper/UploadProfilePicture.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2748/?engineType=SCA&issue=BF47974CD8FE41843E26F7865DB94673&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"BF47974CD8FE41843E26F7865DB94673","Attackers are able to control the file system path argument to File() at UploadProfilePicture.java line 47, which allows them to access or modify otherwise protected files.


",Critical,,,"oper/UploadProfilePicture.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2771/?engineType=SCA&issue=D24F479B0F04DC0131BF9897DF5E497D&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"D24F479B0F04DC0131BF9897DF5E497D","The method execute() in UploadProfilePicture.java ignores the value returned by exists() on line 48, which could cause the program to overlook unexpected states and conditions.


",Low,,,"oper/UploadProfilePicture.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2561/?engineType=SCA&issue=015246092CC45E199BFFB54EA68B7364&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"015246092CC45E199BFFB54EA68B7364","Attackers are able to control the file system path argument to File() at UploadProfilePicture.java line 55, which allows them to access or modify otherwise protected files.


",Critical,,,"oper/UploadProfilePicture.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2665/?engineType=SCA&issue=73C08FCA37A41C4F27E7987E1AD451F2&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"73C08FCA37A41C4F27E7987E1AD451F2","Attackers are able to control the file system path argument to File() at UploadProfilePicture.java line 55, which allows them to access or modify otherwise protected files.


",Critical,,,"oper/UploadProfilePicture.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2628/?engineType=SCA&issue=5050670752F31BA64E6810BB8AF0A3FF&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"5050670752F31BA64E6810BB8AF0A3FF","The catch block at UploadProfilePicture.java line 57 handles a broad swath of exceptions,  potentially trapping dissimilar issues or problems that should not be dealt with at this point in the program.


",Low,,,"oper/UploadProfilePicture.java",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3200/?engineType=WEBINSPECT&issue=40a9a607-8051-46ca-a851-5778769058b7&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"40a9a607-8051-46ca-a851-5778769058b7","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/pages/content/oper/UploadProfilePicture.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3363/?engineType=WEBINSPECT&issue=d10b1734-bdc8-452e-8237-9412b6d76321&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"d10b1734-bdc8-452e-8237-9412b6d76321","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/pages/content/oper/UploadProfilePicture.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3107/?engineType=SECURITYSCOPE&issue=7F10C9179E404A1A3E6E9E961F26F2E0&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"7F10C9179E404A1A3E6E9E961F26F2E0","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,"pages/content/oper/UploadProfilePicture.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2814/?engineType=SCA&issue=F570884D15C8A49D6425BDF2DA5EE577&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"F570884D15C8A49D6425BDF2DA5EE577","Using println() rather than a dedicated logging facility makes it difficult to monitor the behavior of the program.


",Low,,,ViewMessage.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3198/?engineType=WEBINSPECT&issue=3f5102ac-71b1-4f33-8b84-6f0e187345b2&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"3f5102ac-71b1-4f33-8b84-6f0e187345b2","

WebInspect has detected an LDAP Injection vulnerability.  LDAP injection errors occur when:
1.  Data enters a program from an untrusted source.
2.  The data is used to dynamically construct an LDAP filter.
<b>Example 1:</b>The following code dynamically constructs and executes an LDAP query that retrieves records for all the employees who report to a given manager. The manager's name is read from an HTTP request, and is therefore untrusted.<pre>...
$managerName = $_POST[""managerName""]];
//retrieve all of the employees who report to a specific sales manager
$filter = ""(&amp;(manager="" . $managerName . "")(dep=sales))"";
$result = ldap_search($ds, ""ou=People,dc=example,dc=com"", $filter);
...</pre>Under normal conditions, such as searching for employees who report to the sales manager, John Smith, the query that this code executes looks similar to the following:<pre>(&amp;(manager=Smith, John)(dep=sales))</pre>However, because the filter is constructed dynamically by concatenating a constant base query string and a user input string, the query only behaves correctly if <code>managerName</code> does not contain any LDAP meta characters. If an attacker enters a valid name of a manager from another department and adds an additional filter condition that returns true <code>Hacker, Wiley)(uid=*</code> for <code>managerName</code>, then the query becomes the following:<pre>(&amp;(manager=Hacker, Wiley)(uid=*)(dep=sales))</pre>The last condition, <code>(dep=sales)</code> is ignored and the results will  include employees from all departments.

",High,,,"/riches/pages/content/ViewMessage.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3229/?engineType=WEBINSPECT&issue=5e700ea8-61d2-47df-a70d-4ab85163657f&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"5e700ea8-61d2-47df-a70d-4ab85163657f","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/pages/content/ViewMessage.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3281/?engineType=WEBINSPECT&issue=86500fe1-5e14-45c3-bd16-e10d98b63b40&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"86500fe1-5e14-45c3-bd16-e10d98b63b40","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/pages/content/ViewMessage.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3337/?engineType=WEBINSPECT&issue=baae404b-aa54-49d7-8722-7bd4158a928d&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"baae404b-aa54-49d7-8722-7bd4158a928d","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/pages/content/ViewMessage.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2630/?engineType=SCA&issue=508D0A4AFF20EEA1A7609CE0F5E1640F&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"508D0A4AFF20EEA1A7609CE0F5E1640F","The method getDocument() in XMLUtil.java fails to enable validation before parsing XML on line 29, which gives an attacker the opportunity to supply malicious input.


",Low,,,restful/XMLUtil.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2634/?engineType=SCA&issue=53FE056E5BEC34B41F2E999547AED8B2&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"53FE056E5BEC34B41F2E999547AED8B2","XML parser configured in XMLUtil.java:29 does not prevent nor limit external entities resolution. This can expose the parser to an XML External Entities attack.


",Critical,,,restful/XMLUtil.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2645/?engineType=SCA&issue=5EB4340D9D3D3233D0F3131732BA1F09&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"5EB4340D9D3D3233D0F3131732BA1F09","The XML parser configured in XMLUtil.java:29 does not prevent nor limit Document Type Definition (DTD) entity resolution. This can expose the parser to an XML Entity Expansion injection.


",Medium,,,restful/XMLUtil.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2738/?engineType=SCA&issue=B4C0ED1FDEDD5205B84C121A792F14C9&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"B4C0ED1FDEDD5205B84C121A792F14C9","The XML parser configured in XMLUtil.java:29 does not prevent nor limit Document Type Definition (DTD) entity resolution. This can expose the parser to an XML Entity Expansion injection.


",Medium,,,restful/XMLUtil.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/2810/?engineType=SCA&issue=F3E611D857EF365BE1AC67BE6472C80C&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"F3E611D857EF365BE1AC67BE6472C80C","XML parser configured in XMLUtil.java:29 does not prevent nor limit external entities resolution. This can expose the parser to an XML External Entities attack.


",Critical,,,restful/XMLUtil.java,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3250/?engineType=WEBINSPECT&issue=698e36b3-be4e-41ba-b14e-bec52b7fe4cf&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"698e36b3-be4e-41ba-b14e-bec52b7fe4cf","

<i></i>
High session timeout values may allow older session identifiers to be reused by attackers. This vulnerability was scored because a timeout value greater than  minutes was detected. OWASP suggests 5 minutes for high-value applications, and 20 minutes for low-risk applications. While these are just suggestions, the exact session timeout depends on the usage and sensitivity of the application.

",High,,,"/riches/pages/auth/authCheck.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3165/?engineType=WEBINSPECT&issue=204e7095-b374-4946-b23a-e89637888eea&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"204e7095-b374-4946-b23a-e89637888eea","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/pages/tiles/basicFooter.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3273/?engineType=WEBINSPECT&issue=7be46c18-b5b8-4c6a-84a3-c2d08379c53b&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"7be46c18-b5b8-4c6a-84a3-c2d08379c53b","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/pages/tiles/basicFooter.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3149/?engineType=WEBINSPECT&issue=0f6946a1-5976-4cc6-8f1b-85caead8da68&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"0f6946a1-5976-4cc6-8f1b-85caead8da68","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/pages/tiles/basicHeader.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3225/?engineType=WEBINSPECT&issue=5bf13eff-36ab-444b-b2cf-a68445018135&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"5bf13eff-36ab-444b-b2cf-a68445018135","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/pages/tiles/basicHeader.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3128/?engineType=SECURITYSCOPE&issue=EB0CC2BAC335E516B1D887E90DB0D807&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"EB0CC2BAC335E516B1D887E90DB0D807","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,"pages/tiles/basicHeader.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3106/?engineType=SECURITYSCOPE&issue=7CD7B5D25CDF2EA01D0A9DE758AB39B2&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"7CD7B5D25CDF2EA01D0A9DE758AB39B2","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,"pages/tiles/basicHeader.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3093/?engineType=SECURITYSCOPE&issue=568FC758E233C9F3ACC08A55F46D9E15&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"568FC758E233C9F3ACC08A55F46D9E15","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,"pages/tiles/basicHeader.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3085/?engineType=SECURITYSCOPE&issue=3B4E5EB2BA8E7A8DC0C2725EE54A8769&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"3B4E5EB2BA8E7A8DC0C2725EE54A8769","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,"pages/tiles/basicHeader.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3131/?engineType=SECURITYSCOPE&issue=F162B150CE88E441F46C12249DEF353B&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"F162B150CE88E441F46C12249DEF353B","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,"pages/content/../../pages/career_details_error.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3234/?engineType=WEBINSPECT&issue=63326d69-e31b-484a-a5bc-642a9c630182&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"63326d69-e31b-484a-a5bc-642a9c630182","

<i></i>
High session timeout values may allow older session identifiers to be reused by attackers. This vulnerability was scored because a timeout value greater than  minutes was detected. OWASP suggests 5 minutes for high-value applications, and 20 minutes for low-risk applications. While these are just suggestions, the exact session timeout depends on the usage and sensitivity of the application.

",High,,,/riches/login/error.jsp,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3340/?engineType=WEBINSPECT&issue=bc4d9fb8-1068-414e-881c-874f352ae1f0&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"bc4d9fb8-1068-414e-881c-874f352ae1f0","

WebInspect has detected an Expression Language (EL) injection vulnerability. EL injection vulnerabilities are introduced when an application fails to sufficiently validate untrusted user data before assigning it to attribute values of certain Spring MVC JSP tags. 

Expression Language allows JSP pages to easily access application data stored in user-defined JavaBeans components as well the implicit objects. In addition, JSP pages can also invoke arbitrary public and static methods and perform arithmetic operations using EL expressions. 

By allowing attackers to inject EL expressions through insufficiently validated user input, an application could grant unauthorized access to sensitive application and server information. Expression Language injection could also let attackers bypass HTTPOnly access restrictions imposed on cookies by exploiting access to the implicit <i><b>cookie</b></i> object made available in EL expressions.

The affected spring framework versions include
<ul><li>3.0.0 to 3.0.5</li>
<li>2.5.0 to 2.5.6.SEC02 (community releases)</li>
<li>2.5.0 to 2.5.7.SR01 (subscription customers)</li>
</ul>

",High,,,/riches/login/error.jsp,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3345/?engineType=WEBINSPECT&issue=c25becdb-a5bc-42d7-8247-1ad8527d6485&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"c25becdb-a5bc-42d7-8247-1ad8527d6485","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,/riches/login/error.jsp,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3118/?engineType=SECURITYSCOPE&issue=C4BFFD925CC3304E19E09AF179DF0840&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"C4BFFD925CC3304E19E09AF179DF0840","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,login/error.jsp,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3081/?engineType=SECURITYSCOPE&issue=32AA8CD4CEBC08E58A8B1D77C00C6EF5&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"32AA8CD4CEBC08E58A8B1D77C00C6EF5","<a rel=""nofollow"">null/java/insecure_randomness.htm?version=2018.3.1.1</a>",Low,,,pages/error.jsp,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3304/?engineType=WEBINSPECT&issue=a090eaec-9cf3-4784-a8f2-80e1bb3622db&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"a090eaec-9cf3-4784-a8f2-80e1bb3622db","

<i></i>
High session timeout values may allow older session identifiers to be reused by attackers. This vulnerability was scored because a timeout value greater than  minutes was detected. OWASP suggests 5 minutes for high-value applications, and 20 minutes for low-risk applications. While these are just suggestions, the exact session timeout depends on the usage and sensitivity of the application.

",High,,,"/riches/pages/acquired/first_riches_invest.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3173/?engineType=WEBINSPECT&issue=2886b9f3-5c38-438c-b2ff-9379425dc32c&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"2886b9f3-5c38-438c-b2ff-9379425dc32c","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/pages/tiles/footer.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3271/?engineType=WEBINSPECT&issue=7a920aba-d5fd-432d-8ce3-f3a0d5827036&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"7a920aba-d5fd-432d-8ce3-f3a0d5827036","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/pages/tiles/footer.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3098/?engineType=SECURITYSCOPE&issue=61A0CB10681951E15838F1C3CD4119E6&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"61A0CB10681951E15838F1C3CD4119E6","<a rel=""nofollow"">null/java/privacy_violation.htm?version=2018.3.1.1</a>",High,,,pages/tiles/footer.jsp,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3329/?engineType=WEBINSPECT&issue=b3fd5573-febc-49dc-a2d6-1d4fc70d9862&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"b3fd5573-febc-49dc-a2d6-1d4fc70d9862","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,"/riches/pages/tiles/header.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3398/?engineType=WEBINSPECT&issue=f85926a1-b695-4ecc-933b-4874978a6f70&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"f85926a1-b695-4ecc-933b-4874978a6f70","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,"/riches/pages/tiles/header.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3272/?engineType=WEBINSPECT&issue=7b03586a-e9a3-44ce-a0fc-042acd784c40&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"7b03586a-e9a3-44ce-a0fc-042acd784c40","

<i></i>
High session timeout values may allow older session identifiers to be reused by attackers. This vulnerability was scored because a timeout value greater than  minutes was detected. OWASP suggests 5 minutes for high-value applications, and 20 minutes for low-risk applications. While these are just suggestions, the exact session timeout depends on the usage and sensitivity of the application.

",High,,,"/riches/pages/tiles/header2.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3279/?engineType=WEBINSPECT&issue=8350134f-9984-4f3f-a67c-0fbcf44bc0a2&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"8350134f-9984-4f3f-a67c-0fbcf44bc0a2","

Webinspect has detected a backup file with the string ""2"" appended to the filename on the target server. The severity of the threats posed by the web-accessible backup files depends on the sensitivity of the information stored in original document. Based on that information, the attacker can gain sensitive information about the site architecture, database and network access credential details, encryption keys, and so forth from these files. The attacker can use information obtained to craft precise targeted attacks, which may not otherwise be feasible, against the application.

",Low,,,"/riches/pages/tiles/header2.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3168/?engineType=WEBINSPECT&issue=22e7be57-d722-40fe-aaf1-7f62103fe343&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"22e7be57-d722-40fe-aaf1-7f62103fe343","

Critical vulnerabilities that would allow an attacker to remotely execute code on your application server have been identified.  Exploitation of this vulnerability would give an attacker the means to perform whatever function he desired and gain full access to the contents of your web application.   Recommendations include adopting secure programming techniques to ensure that only expected data is accepted by an application.

",Critical,,,"/riches/pages/common/hidden_AdminControl.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3186/?engineType=WEBINSPECT&issue=3484ddc1-0eb3-4847-87ad-57334755e53b&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"3484ddc1-0eb3-4847-87ad-57334755e53b","

An area of the web application that possibly contains sensitive information or access to privileged functionality such as remote site administration functionality utilizes query strings to pass information between pages.  Information in query strings is directly visible to the end user via the browser interface, which can cause security issues.  At a minimum, attackers can garner information from query strings that can be utilized in escalating their method of attack, such as information about the internal workings of the application or database column names. Successful exploitation of query string parameter vulnerabilities could lead to an attacker impersonating a legitimate user, obtaining proprietary data, or simply executing actions not intended by the application developers. Recommendations include performing server-side input validation to ensure data received from the client matches expectations.

",Low,,,"/riches/pages/common/hidden_AdminControl.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3231/?engineType=WEBINSPECT&issue=6264e341-8b73-4cf0-924a-4aabe5ce773b&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"6264e341-8b73-4cf0-924a-4aabe5ce773b","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/pages/common/hidden_AdminControl.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3260/?engineType=WEBINSPECT&issue=72fe6c4b-dbfd-42b0-8071-e6927699fbcc&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"72fe6c4b-dbfd-42b0-8071-e6927699fbcc","

Most recent browsers have features that will save form field content entered by users and then automatically complete form entry the next time the fields are encountered. This feature is enabled by default and could leak sensitive information since it is stored on the hard drive of the user. The risk of this issue is greatly increased if users are accessing the application from a shared environment. Recommendations include setting autocomplete to ""off"" on all your forms.

",Low,,,"/riches/pages/common/hidden_AdminControl.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3276/?engineType=WEBINSPECT&issue=8094ae3c-e612-4811-9000-35b0e06fc856&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"8094ae3c-e612-4811-9000-35b0e06fc856","

A username was found in the query string of a GET request or Set-Cookie header.  Unknown application testing seeks to uncover new vulnerabilities in both custom and commercial software.  Because of this, there are no specific patches or descriptions for this issue.

",Medium,,,"/riches/pages/common/hidden_AdminControl.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3338/?engineType=WEBINSPECT&issue=bbabe547-54ac-4dac-bf21-28b987d31247&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"bbabe547-54ac-4dac-bf21-28b987d31247","

Critical vulnerabilities that would allow an attacker to remotely execute code on your application server have been identified.  Exploitation of this vulnerability would give an attacker the means to perform whatever function he desired and gain full access to the contents of your web application.   Recommendations include adopting secure programming techniques to ensure that only expected data is accepted by an application.

",Critical,,,"/riches/pages/common/hidden_AdminControl.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3352/?engineType=WEBINSPECT&issue=cb163bab-e5a1-4ef4-bfe7-38ff611b9a0b&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"cb163bab-e5a1-4ef4-bfe7-38ff611b9a0b","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/pages/common/hidden_AdminControl.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3370/?engineType=WEBINSPECT&issue=d86d98d1-2104-4996-b0f5-5ddecb542de8&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"d86d98d1-2104-4996-b0f5-5ddecb542de8","

A Cross-Frame Scripting (XFS) vulnerability can allow an attacker to load the vulnerable application inside an HTML iframe tag on a malicious page. The attacker could use this weakness to devise a Clickjacking attack to conduct phishing, frame sniffing, social engineering or Cross-Site Request Forgery attacks.

<b>Clickjacking</b>
The goal of a Clickjacking attack is to deceive the victim user into interacting with UI elements of the attacker’s choice on the target web site without her knowledge and in turn executing privileged functionality on the victim’s behalf. To achieve this goal, the attacker must exploit the XFS vulnerability to load the attack target inside an iframe tag, hide it using Cascading Style Sheets (CSS) and overlay the phishing content on the malicious page. By placing the UI elements on the phishing page to overlap with those on the page targeted in the attack, the attacker can ensure that the victim is forced to interact with the UI elements on the target page not visible to the victim.
 WebInspect has detected a response containing one or more forms that accept user input but is missing XFS protection.
<i></i>

",Medium,,,"/riches/pages/common/hidden_AdminControl.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3380/?engineType=WEBINSPECT&issue=e794559f-0a1c-439f-a33f-550500616cb9&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"e794559f-0a1c-439f-a33f-550500616cb9","

<i></i>
High session timeout values may allow older session identifiers to be reused by attackers. This vulnerability was scored because a timeout value greater than  minutes was detected. OWASP suggests 5 minutes for high-value applications, and 20 minutes for low-risk applications. While these are just suggestions, the exact session timeout depends on the usage and sensitivity of the application.

",High,,,"/riches/pages/common/hidden_AdminControl.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3123/?engineType=SECURITYSCOPE&issue=D6B1519EB179E7F519A7C1E28190BA92_1&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"D6B1519EB179E7F519A7C1E28190BA92_1","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,"pages/common/hidden_AdminControl.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3121/?engineType=SECURITYSCOPE&issue=D29B3318A32FFBC742B865322C5F5C42&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"D29B3318A32FFBC742B865322C5F5C42","<a rel=""nofollow"">null/java/command_injection.htm?version=2018.3.1.1</a>",Critical,,,"pages/common/hidden_AdminControl.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3122/?engineType=SECURITYSCOPE&issue=D6B1519EB179E7F519A7C1E28190BA92&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"D6B1519EB179E7F519A7C1E28190BA92","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,"pages/common/hidden_AdminControl.jsp",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3177/?engineType=WEBINSPECT&issue=2d5ca4a9-cd7d-472f-a380-805826164f94&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"2d5ca4a9-cd7d-472f-a380-805826164f94","

A username was found in the query string of a GET request or Set-Cookie header.  Unknown application testing seeks to uncover new vulnerabilities in both custom and commercial software.  Because of this, there are no specific patches or descriptions for this issue.

",Medium,,,"/riches/login/j_security_check",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3183/?engineType=WEBINSPECT&issue=32649f08-3aa7-4bda-913d-f2ac0074a3ba&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"32649f08-3aa7-4bda-913d-f2ac0074a3ba","

A Cross-Site Scripting (XSS) vulnerability was detected in the web application. Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. In this instance, the web application was vulnerable to an automatic payload, meaning the user simply has to visit a page to make the malicious scripts execute. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/login/j_security_check",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3238/?engineType=WEBINSPECT&issue=660dc6f5-2248-4a86-b256-663f97a18462&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"660dc6f5-2248-4a86-b256-663f97a18462","

Authentication is an important aspect of security.  Password authentication requires users to present login credentials as evidence to validate their identity before granting them access to server resources. The reliability of the authentication process depends on the security of the login credentials.  Password policies that ensure users create strong passwords are therefore crucial to deploying secure websites.  Password strength is a measure of the effectiveness it provides in resisting guessing and brute force attacks.  Some of the parameters that help define the password strength include password characteristics such as password length, complexity and randomness.

WebInspect has detected that the current website does not meet the basic guidelines for a secure password.  

<i></i>

Note: The assumption is that the username / password used during pen-testing meet the username/password requirement for the web application when deployed live.

",High,,,"/riches/login/j_security_check",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3241/?engineType=WEBINSPECT&issue=66706f5a-e76a-4774-a179-3482ec6f4758&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"66706f5a-e76a-4774-a179-3482ec6f4758","

A password was found in the query string of a GET request or Set-Cookie Header.  Unknown application testing seeks to uncover new vulnerabilities in both custom and commercial software. Because of this, there are no specific patches or descriptions for this issue.

",High,,,"/riches/login/j_security_check",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3330/?engineType=WEBINSPECT&issue=b5d3657c-f8be-4345-bfc8-35b4c20f777b&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"b5d3657c-f8be-4345-bfc8-35b4c20f777b","

WebInspect has detected an Expression Language (EL) injection vulnerability. EL injection vulnerabilities are introduced when an application fails to sufficiently validate untrusted user data before assigning it to attribute values of certain Spring MVC JSP tags. 

Expression Language allows JSP pages to easily access application data stored in user-defined JavaBeans components as well the implicit objects. In addition, JSP pages can also invoke arbitrary public and static methods and perform arithmetic operations using EL expressions. 

By allowing attackers to inject EL expressions through insufficiently validated user input, an application could grant unauthorized access to sensitive application and server information. Expression Language injection could also let attackers bypass HTTPOnly access restrictions imposed on cookies by exploiting access to the implicit <i><b>cookie</b></i> object made available in EL expressions.

The affected spring framework versions include
<ul><li>3.0.0 to 3.0.5</li>
<li>2.5.0 to 2.5.6.SEC02 (community releases)</li>
<li>2.5.0 to 2.5.7.SR01 (subscription customers)</li>
</ul>

",High,,,"/riches/login/j_security_check",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3378/?engineType=WEBINSPECT&issue=e524a7bf-cc7c-40ca-984f-c41671558f85&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"e524a7bf-cc7c-40ca-984f-c41671558f85","

An area of the web application that possibly contains sensitive information or access to privileged functionality such as remote site administration functionality utilizes query strings to pass information between pages.  Information in query strings is directly visible to the end user via the browser interface, which can cause security issues.  At a minimum, attackers can garner information from query strings that can be utilized in escalating their method of attack, such as information about the internal workings of the application or database column names. Successful exploitation of query string parameter vulnerabilities could lead to an attacker impersonating a legitimate user, obtaining proprietary data, or simply executing actions not intended by the application developers. Recommendations include performing server-side input validation to ensure data received from the client matches expectations.

",Low,,,"/riches/login/j_security_check",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3259/?engineType=WEBINSPECT&issue=72e5fc2d-b836-45b1-a1e4-493a878cf401&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"72e5fc2d-b836-45b1-a1e4-493a878cf401","

Critical SQL Injection vulnerabilities have been identified in the web application. SQL injection is a method of attack where an attacker can exploit vulnerable code and the type of data an application will accept, and can be exploited in any application parameter that influences a database query. Examples include parameters within the url itself, post data, or cookie values. If successful, SQL Injection can give an attacker access to backend database contents, the ability to remotely execute system commands, or in some circumstances the means to take control of the server hosting the database. Recommendations include employing a layered approach to security that includes utilizing parameterized queries when accepting user input, ensuring that only expected data is accepted by an application, and hardening the database server to prevent data from being accessed inappropriately.

",Critical,,,"/riches/rest/accounts/12345%27%09OR/json",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3358/?engineType=WEBINSPECT&issue=cea1870d-a360-418f-8adc-b158ff5e2f99&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"cea1870d-a360-418f-8adc-b158ff5e2f99","

Cross-Site Scripting occurs when dynamically generated web pages display user input, such as login information, that is not properly validated, allowing an attacker to embed malicious scripts into the generated page and then execute the script on the machine of any user that views the site. User interaction vulnerabilities such as this one require the user to trigger the execution of the malicious scripts via an action such as clicking a link or moving the mouse pointer over text. If successful, Cross-Site Scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on end user systems. Recommendations include implementing secure programming techniques that ensure proper filtration of user-supplied data, and encoding all user supplied data to prevent inserted scripts being sent to end users in a format that can be executed.

",Critical,,,"/riches/rest/accounts/12345%3ca%20HrEf%3dJaVaScRiPt%3aalert(44751)%3e/json",
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3215/?engineType=WEBINSPECT&issue=54a38124-8828-41a0-bba4-966bc14c954c&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"54a38124-8828-41a0-bba4-966bc14c954c","

Unhandled exceptions are circumstances in which the application has received user input that it did not expect and doesn't know how to deal with. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.  Recommendations include designing and adding consistent error-handling mechanisms that are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.

",Medium,,,/riches/login/login.jsp,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3360/?engineType=WEBINSPECT&issue=cfe87e6c-6dd0-41c6-a671-051b0f21c9bc&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"cfe87e6c-6dd0-41c6-a671-051b0f21c9bc","

A server error response was detected.  The server could be experiencing errors due to a misbehaving application, a misconfiguration, or a malicious value sent during the auditing process.  While error responses in and of themselves are not dangerous, per se, the error responses give attackers insight into how the application handles error conditions.  Errors that can be remotely triggered by an attacker can also potentially lead to a denial of service attack or other more severe vulnerability. Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful  detail to end-users, and preventing error messages that might provide information useful to an attacker from being  displayed.

",Low,,,/riches/login/login.jsp,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3071/?engineType=SECURITYSCOPE&issue=04750D1A78E2910E9C3E76EB6E709A16&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"04750D1A78E2910E9C3E76EB6E709A16","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,login/login.jsp,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3109/?engineType=SECURITYSCOPE&issue=8C0058F3E825E8DCA58807B3E5A18369&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"8C0058F3E825E8DCA58807B3E5A18369","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,login/login.jsp,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3086/?engineType=SECURITYSCOPE&issue=3E42B4A67AC797D6FB459ECA89289652&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"3E42B4A67AC797D6FB459ECA89289652","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,login/login.jsp,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3097/?engineType=SECURITYSCOPE&issue=60D4F498A8CE25DE05A50BDCC1C8C6D4&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"60D4F498A8CE25DE05A50BDCC1C8C6D4","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,login/login.jsp,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3079/?engineType=SECURITYSCOPE&issue=29E4849D5CB3227654ED286FE82AB282&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"29E4849D5CB3227654ED286FE82AB282","<a rel=""nofollow"">null/java/empty.htm?version=2018.3.1.1</a>",Critical,,,login/login.jsp,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3080/?engineType=SECURITYSCOPE&issue=29E4849D5CB3227654ED286FE82AB282_1&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"29E4849D5CB3227654ED286FE82AB282_1","<a rel=""nofollow"">null/java/empty.htm?version=2018.3.1.1</a>",Critical,,,login/login.jsp,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3103/?engineType=SECURITYSCOPE&issue=66F521A08597B478511558BA6F03EEEC&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"66F521A08597B478511558BA6F03EEEC","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,login/login.jsp,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3076/?engineType=SECURITYSCOPE&issue=15CDFEDCE7C9C0504E9AEA505E77F604&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"15CDFEDCE7C9C0504E9AEA505E77F604","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,login/login.jsp,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3130/?engineType=SECURITYSCOPE&issue=EC47DCC5517706ADB850232C94902C31&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"EC47DCC5517706ADB850232C94902C31","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,login/login.jsp,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3074/?engineType=SECURITYSCOPE&issue=1056F87A72152654062E6843E31DBC2C&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"1056F87A72152654062E6843E31DBC2C","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,login/login.jsp,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3083/?engineType=SECURITYSCOPE&issue=376518912E6343239A699078FCE7434F&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"376518912E6343239A699078FCE7434F","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,login/login.jsp,
,,"http://localhost:2320/ssc/html/ssc/version/5/fix/3129/?engineType=SECURITYSCOPE&issue=EBCF32FCF31253811C6E48A89E03558C&filterSet=f2f88863-0d8f-4d22-b001-3e1cd3ec0f45",,,,"EBCF32FCF31253811C6E48A89E03558C","<a rel=""nofollow"">null/java/cross_site_scripting.htm?version=2018.3.1.1</a>",Critical,,,login/login.jsp,
